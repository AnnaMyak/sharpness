<?xml version="1.0"?>
<doc>
    <assembly>
        <name>#Accessory</name>
    </assembly>
    <members>
        <member name="T:SharpAccessory.Accessory">
            <summary>Bietet Zugriff auf Standard-Methoden der Bibliothek.</summary>
        </member>
        <member name="M:SharpAccessory.Accessory.CheckArgument(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>Löst eine ArgumentOutOfRangeException aus, wenn das angegebene Argument nicht innerhalb 
            der angegebenen Grenzen liegt.</summary>
            <param name="name">Gibt den Namen des Arguments an.</param>
            <param name="value">Gibt den Wert des Arguments an.</param>
            <param name="minimum">Gibt den kleinsten zulässigen Wert des Arguments an.</param>
            <param name="maximum">Gibt den größten zulässigen Wert des Arguments an.</param>
        </member>
        <member name="M:SharpAccessory.Accessory.CheckArgument(System.String,System.Single,System.Single,System.Single)">
            <summary>Löst eine ArgumentOutOfRangeException aus, wenn das angegebene Argument nicht innerhalb 
            der angegebenen Grenzen liegt.</summary>
            <param name="name">Gibt den Namen des Arguments an.</param>
            <param name="value">Gibt den Wert des Arguments an.</param>
            <param name="minimum">Gibt den kleinsten zulässigen Wert des Arguments an.</param>
            <param name="maximum">Gibt den größten zulässigen Wert des Arguments an.</param>
        </member>
        <member name="M:SharpAccessory.Accessory.CheckArgument(System.String,System.Double,System.Double,System.Double)">
            <summary>Löst eine ArgumentOutOfRangeException aus, wenn das angegebene Argument nicht innerhalb 
            der angegebenen Grenzen liegt.</summary>
            <param name="name">Gibt den Namen des Arguments an.</param>
            <param name="value">Gibt den Wert des Arguments an.</param>
            <param name="minimum">Gibt den kleinsten zulässigen Wert des Arguments an.</param>
            <param name="maximum">Gibt den größten zulässigen Wert des Arguments an.</param>
        </member>
        <member name="M:SharpAccessory.Accessory.EnsureNotNull(System.String,System.Object)">
            <summary>Löst eine ArgumentNullException aus wenn das angegebene Argument null ist.</summary>
            <param name="name">Gibt den Namen des Arguments an.</param>
            <param name="value">Gibt den Wert des Arguments an.</param>
        </member>
        <member name="M:SharpAccessory.Accessory.RedirectAssemblyBinding(System.String)">
            <summary>Aktiviert die Suche nach neueren Assembly-Versionen.</summary>
            <param name="searchPath">Gibt einen Pfad an in dem nach Assemblies gesucht wird.</param>
        </member>
        <member name="P:SharpAccessory.Accessory.Icon">
            <summary>Ruft das Icon der Bibliothek ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:SharpAccessory.Accessory.Language">
            <summary>Ruft die Sprache für Komponenten ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.Accessory.Title">
            <summary>Ruft den Titel der Bibliothek ab, oder legt diesen fest.</summary>
        </member>
        <member name="E:SharpAccessory.Accessory.IconChanged">
            <summary>Wird aufgerufen wenn sich das Icon der Bibliothek geändert hat.</summary>
        </member>
        <member name="E:SharpAccessory.Accessory.LanguageChanged">
            <summary>Wird aufgerufen wenn sich die Sprache für Komponenten geändert hat.</summary>
        </member>
        <member name="E:SharpAccessory.Accessory.TitleChanged">
            <summary>Wird aufgerufen wenn sich der Titel der Bibliothek geändert hat.</summary>
        </member>
        <member name="T:SharpAccessory.Collections.ArgumentCollection">
            <summary>Verwaltet eine Liste von Argumenten für die Ausführung von Prozessen.</summary>
        </member>
        <member name="T:SharpAccessory.Collections.ReadOnlyCollection`1">
            <summary>Basis-Klasse für schreibgeschützte Auflistungen.</summary>
        </member>
        <member name="M:SharpAccessory.Collections.ReadOnlyCollection`1.#ctor(`0[])">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="items">Gibt die Elemente an die in die Auflistung kopiert werden.</param>
        </member>
        <member name="M:SharpAccessory.Collections.ReadOnlyCollection`1.#ctor(`0[],System.Boolean)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="items">Gibt die Elemente an die in die Auflistung kopiert werden.</param>
            <param name="ensureNoNullItems">Gibt an ob eine Ausnahme ausgelöst wird wenn ein Element in dem 
            angegebenen Array null ist.</param>
        </member>
        <member name="M:SharpAccessory.Collections.ReadOnlyCollection`1.Contains(`0)">
            <summary>Überprüft ob das angegebene Element in der Auflistung enthalten ist.</summary>
        </member>
        <member name="M:SharpAccessory.Collections.ReadOnlyCollection`1.GetEnumerator">
            <summary>Gibt einen typspezifischen Enumerator zurück, der die Auflistung durchläuft.</summary>
        </member>
        <member name="M:SharpAccessory.Collections.ReadOnlyCollection`1.IndexOf(`0)">
            <summary>Sucht das angegebene Element in der Auflistung und gibt dessen Index zurück.</summary>
        </member>
        <member name="M:SharpAccessory.Collections.ReadOnlyCollection`1.Sort(System.Collections.Generic.IComparer{`0})">
            <summary>Sortiert die Auflistung.</summary>
            <param name="comparer">Vergleicht zwei Elemente.</param>
        </member>
        <member name="M:SharpAccessory.Collections.ReadOnlyCollection`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
            <summary>Sortiert die Auflistung.</summary>
            <param name="index">Der Index ab dem sortiert wird.</param>
            <param name="count">Die Anzahl der Elemente die sortiert werden.</param>
            <param name="comparer">Vergleicht zwei Elemente.</param>
        </member>
        <member name="M:SharpAccessory.Collections.ReadOnlyCollection`1.Sort(System.Comparison{`0})">
            <summary>Sortiert die Auflistung.</summary>
            <param name="comparison">Methode die zwei Elemente vergleicht.</param>
        </member>
        <member name="M:SharpAccessory.Collections.ReadOnlyCollection`1.ToArray">
            <summary>Kopiert alle Elemente dieser Auflistung in ein neues Array.</summary>
        </member>
        <member name="P:SharpAccessory.Collections.ReadOnlyCollection`1.Item(System.Int32)">
            <summary>Ruft das Element an der angegebenen Position ab.</summary>
        </member>
        <member name="P:SharpAccessory.Collections.ReadOnlyCollection`1.Count">
            <summary>Ruft ab, wieviele Elemente in der Auflistung enthalten sind.</summary>
        </member>
        <member name="M:SharpAccessory.Collections.ArgumentCollection.#ctor(SharpAccessory.Collections.KeyValuePair[])">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="arguments">Gibt die Argumente an die in dieser Liste verwaltet werden.</param>
        </member>
        <member name="M:SharpAccessory.Collections.ArgumentCollection.ContainsKey(System.String)">
            <summary>Überprüft, ob das angegebene Argument in der Auflistung enthalten ist.</summary>
        </member>
        <member name="M:SharpAccessory.Collections.ArgumentCollection.GetValue(System.String)">
            <summary>Ruft den Wert zu dem angegeben Schlüssel ab.</summary>
        </member>
        <member name="M:SharpAccessory.Collections.ArgumentCollection.IndexOf(System.String)">
            <summary>Sucht das angegebene Argument in der Auflistung und gibt dessen Index zurück.</summary>
        </member>
        <member name="M:SharpAccessory.Collections.ArgumentCollection.IsDefined(System.String)">
            <summary>Überprüft, ob das angegebene Argument mit einem Wert definiert ist.</summary>
        </member>
        <member name="M:SharpAccessory.Collections.ArgumentCollection.TryParseBool(System.String,System.Boolean)">
            <summary>Liefert den zum Schlüssel gehörenden Wert als bool. Ist der Wert nicht vorhanden oder 
            ungültig wird defaultValue zurückgegeben.</summary>
        </member>
        <member name="M:SharpAccessory.Collections.ArgumentCollection.TryParseDouble(System.String,System.Double)">
            <summary>Liefert den zum Schlüssel gehörenden Wert als double. Ist der Wert nicht vorhanden oder 
            ungültig wird defaultValue zurückgegeben.</summary>
        </member>
        <member name="M:SharpAccessory.Collections.ArgumentCollection.TryParseFloat(System.String,System.Single)">
            <summary>Liefert den zum Schlüssel gehörenden Wert als float. Ist der Wert nicht vorhanden oder 
            ungültig wird defaultValue zurückgegeben.</summary>
        </member>
        <member name="M:SharpAccessory.Collections.ArgumentCollection.TryParseInt(System.String,System.Int32)">
            <summary>Liefert den zum Schlüssel gehörenden Wert als int. Ist der Wert nicht vorhanden oder 
            ungültig wird defaultValue zurückgegeben.</summary>
        </member>
        <member name="P:SharpAccessory.Collections.ArgumentCollection.Item(System.String)">
            <summary>Ruft den Wert zu dem angegebenen Schlüssel ab.</summary>
        </member>
        <member name="T:SharpAccessory.Collections.BoxedCollection`1">
            <summary>Basis-Klasse für verschachtelte Auflistungen.</summary>
        </member>
        <member name="M:SharpAccessory.Collections.BoxedCollection`1.#ctor(SharpAccessory.Collections.Collection{`0})">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="innerCollection">Gibt die innere Auflistung an.</param>
        </member>
        <member name="M:SharpAccessory.Collections.BoxedCollection`1.Add(`0)">
            <summary>Fügt das angegebene Element am Ende der Auflistung hinzu.</summary>
        </member>
        <member name="M:SharpAccessory.Collections.BoxedCollection`1.AddRange(`0[])">
            <summary>Fügt die angegebenen Elemente am Ende der Auflistung hinzu.</summary>
        </member>
        <member name="M:SharpAccessory.Collections.BoxedCollection`1.Clear">
            <summary>Entfernt alle Elemente aus der Auflistung.</summary>
        </member>
        <member name="M:SharpAccessory.Collections.BoxedCollection`1.Contains(`0)">
            <summary>Überprüft ob das angegebene Element in der Auflistung enthalten ist.</summary>
        </member>
        <member name="M:SharpAccessory.Collections.BoxedCollection`1.GetEnumerator">
            <summary>Gibt einen typspezifischen Enumerator zurück, der die Auflistung durchläuft.</summary>
        </member>
        <member name="M:SharpAccessory.Collections.BoxedCollection`1.IndexOf(`0)">
            <summary>Sucht das angegebene Element in der Auflistung und gibt dessen Index zurück.</summary>
        </member>
        <member name="M:SharpAccessory.Collections.BoxedCollection`1.Insert(System.Int32,`0)">
            <summary>Fügt das angegebene Element an der angegebenen Position ein.</summary>
        </member>
        <member name="M:SharpAccessory.Collections.BoxedCollection`1.Remove(`0)">
            <summary>Entfernt das angegebene Element aus der Auflistung.</summary>
        </member>
        <member name="M:SharpAccessory.Collections.BoxedCollection`1.RemoveAt(System.Int32)">
            <summary>Entfernt das Element an der angegebenen Position aus der Auflistung.</summary>
        </member>
        <member name="M:SharpAccessory.Collections.BoxedCollection`1.Sort(System.Collections.Generic.IComparer{`0})">
            <summary>Sortiert die Auflistung.</summary>
            <param name="comparer">Vergleicht zwei Elemente.</param>
        </member>
        <member name="M:SharpAccessory.Collections.BoxedCollection`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
            <summary>Sortiert die Auflistung.</summary>
            <param name="index">Der Index ab dem sortiert wird.</param>
            <param name="count">Die Anzahl der Elemente die sortiert werden.</param>
            <param name="comparer">Vergleicht zwei Elemente.</param>
        </member>
        <member name="M:SharpAccessory.Collections.BoxedCollection`1.Sort(System.Comparison{`0})">
            <summary>Sortiert die Auflistung.</summary>
            <param name="comparison">Methode die zwei Elemente vergleicht.</param>
        </member>
        <member name="M:SharpAccessory.Collections.BoxedCollection`1.ToArray">
            <summary>Kopiert alle Elemente dieser Auflistung in ein neues Array.</summary>
        </member>
        <member name="P:SharpAccessory.Collections.BoxedCollection`1.Item(System.Int32)">
            <summary>Ruft das Element an der angegebenen Position ab.</summary>
        </member>
        <member name="P:SharpAccessory.Collections.BoxedCollection`1.Capacity">
            <summary>Ruft die Kapazität der Auflistung ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.Collections.BoxedCollection`1.Count">
            <summary>Ruft ab, wieviele Elemente in der Auflistung enthalten sind.</summary>
        </member>
        <member name="T:SharpAccessory.Collections.Collection`1">
            <summary>Basis-Klasse für Auflistungen.</summary>
        </member>
        <member name="M:SharpAccessory.Collections.Collection`1.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.Collections.Collection`1.Add(`0)">
            <summary>Fügt das angegebene Element am Ende der Auflistung hinzu.</summary>
        </member>
        <member name="M:SharpAccessory.Collections.Collection`1.AddRange(`0[])">
            <summary>Fügt die angegebenen Elemente am Ende der Auflistung hinzu.</summary>
        </member>
        <member name="M:SharpAccessory.Collections.Collection`1.Clear">
            <summary>Entfernt alle Elemente aus der Auflistung.</summary>
        </member>
        <member name="M:SharpAccessory.Collections.Collection`1.Contains(`0)">
            <summary>Überprüft ob das angegebene Element in der Auflistung enthalten ist.</summary>
        </member>
        <member name="M:SharpAccessory.Collections.Collection`1.GetEnumerator">
            <summary>Gibt einen typspezifischen Enumerator zurück, der die Auflistung durchläuft.</summary>
        </member>
        <member name="M:SharpAccessory.Collections.Collection`1.IndexOf(`0)">
            <summary>Sucht das angegebene Element in der Auflistung und gibt dessen Index zurück.</summary>
        </member>
        <member name="M:SharpAccessory.Collections.Collection`1.Insert(System.Int32,`0)">
            <summary>Fügt das angegebene Element an der angegebenen Position ein.</summary>
        </member>
        <member name="M:SharpAccessory.Collections.Collection`1.Remove(`0)">
            <summary>Entfernt das angegebene Element aus der Auflistung.</summary>
        </member>
        <member name="M:SharpAccessory.Collections.Collection`1.RemoveAt(System.Int32)">
            <summary>Entfernt das Element an der angegebenen Position aus der Auflistung.</summary>
        </member>
        <member name="M:SharpAccessory.Collections.Collection`1.Sort(System.Collections.Generic.IComparer{`0})">
            <summary>Sortiert die Auflistung.</summary>
            <param name="comparer">Vergleicht zwei Elemente.</param>
        </member>
        <member name="M:SharpAccessory.Collections.Collection`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
            <summary>Sortiert die Auflistung.</summary>
            <param name="index">Der Index ab dem sortiert wird.</param>
            <param name="count">Die Anzahl der Elemente die sortiert werden.</param>
            <param name="comparer">Vergleicht zwei Elemente.</param>
        </member>
        <member name="M:SharpAccessory.Collections.Collection`1.Sort(System.Comparison{`0})">
            <summary>Sortiert die Auflistung.</summary>
            <param name="comparison">Methode die zwei Elemente vergleicht.</param>
        </member>
        <member name="M:SharpAccessory.Collections.Collection`1.ToArray">
            <summary>Kopiert alle Elemente dieser Auflistung in ein neues Array.</summary>
        </member>
        <member name="P:SharpAccessory.Collections.Collection`1.Item(System.Int32)">
            <summary>Ruft das Element an der angegebenen Position ab.</summary>
        </member>
        <member name="P:SharpAccessory.Collections.Collection`1.Capacity">
            <summary>Ruft die Kapazität der Auflistung ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.Collections.Collection`1.Count">
            <summary>Ruft ab, wieviele Elemente in der Auflistung enthalten sind.</summary>
        </member>
        <member name="T:SharpAccessory.Collections.DuplicateKeyException">
            <summary>Exception die ausgelöst wird wenn ein Schlüssel oder Identifizierer mehrfach definiert ist.
            </summary>
        </member>
        <member name="M:SharpAccessory.Collections.DuplicateKeyException.#ctor(System.String)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="key">Gibt den Schlüssel oder Identifizierer an der mehrfach definiert ist.</param>
        </member>
        <member name="M:SharpAccessory.Collections.DuplicateKeyException.#ctor(System.String,System.String)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="message">Die Meldung, in der der Fehler beschrieben wird.</param>
            <param name="key">Gibt den Schlüssel oder Identifizierer an der mehrfach definiert ist.</param>
        </member>
        <member name="P:SharpAccessory.Collections.DuplicateKeyException.Key">
            <summary>Ruft den Schlüssel oder Identifizierer ab der mehrfach definiert ist.</summary>
        </member>
        <member name="T:SharpAccessory.Collections.KeyNotFoundException">
            <summary>Exception die ausgelöst wird wenn ein Schlüssel oder Identifizierer nicht gefunden werden 
            konnte.</summary>
        </member>
        <member name="M:SharpAccessory.Collections.KeyNotFoundException.#ctor(System.String)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="key">Gibt den Schlüssel oder Identifizierer an.</param>
        </member>
        <member name="M:SharpAccessory.Collections.KeyNotFoundException.#ctor(System.String,System.String)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="message">Die Meldung, in der der Fehler beschrieben wird.</param>
            <param name="key">Gibt den Schlüssel oder Identifizierer an.</param>
        </member>
        <member name="P:SharpAccessory.Collections.KeyNotFoundException.Key">
            <summary>Ruft den Schlüssel oder Identifizierer ab der nicht gefunden werden konnte.</summary>
        </member>
        <member name="T:SharpAccessory.Collections.KeyValueCollection">
            <summary>Verwaltet eine Liste von Schlüssel-Wert-Paaren.</summary>
        </member>
        <member name="M:SharpAccessory.Collections.KeyValueCollection.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.Collections.KeyValueCollection.Add(SharpAccessory.Collections.KeyValuePair)">
            <summary>Fügt das angegebene Element am Ende der Auflistung hinzu.</summary>
        </member>
        <member name="M:SharpAccessory.Collections.KeyValueCollection.AddRange(SharpAccessory.Collections.KeyValuePair[])">
            <summary>Fügt die angegebenen Elemente am Ende der Auflistung hinzu.</summary>
        </member>
        <member name="M:SharpAccessory.Collections.KeyValueCollection.Clear">
            <summary>Entfernt alle Elemente aus der Auflistung.</summary>
        </member>
        <member name="M:SharpAccessory.Collections.KeyValueCollection.ContainsKey(System.String)">
            <summary>Überprüft, ob das angegebene Element in der Auflistung enthalten ist.</summary>
        </member>
        <member name="M:SharpAccessory.Collections.KeyValueCollection.GetValue(System.String)">
            <summary>Ruft den Wert zu dem angegeben Schlüssel ab.</summary>
        </member>
        <member name="M:SharpAccessory.Collections.KeyValueCollection.IndexOf(System.String)">
            <summary>Sucht das angegebene Element in der Auflistung und gibt dessen Index zurück.</summary>
        </member>
        <member name="M:SharpAccessory.Collections.KeyValueCollection.Insert(System.Int32,SharpAccessory.Collections.KeyValuePair)">
            <summary>Fügt das angegebene Element an der angegebenen Position ein.</summary>
        </member>
        <member name="M:SharpAccessory.Collections.KeyValueCollection.Remove(System.String)">
            <summary>Entfernt das angegebene Element aus der Auflistung.</summary>
        </member>
        <member name="M:SharpAccessory.Collections.KeyValueCollection.Remove(SharpAccessory.Collections.KeyValuePair)">
            <summary>Entfernt das angegebene Element aus der Auflistung.</summary>
        </member>
        <member name="M:SharpAccessory.Collections.KeyValueCollection.RemoveAt(System.Int32)">
            <summary>Entfernt das Element an der angegebenen Position aus der Auflistung.</summary>
        </member>
        <member name="M:SharpAccessory.Collections.KeyValueCollection.SetValue(System.String,System.String)">
            <summary>Setz den Wert zu dem angegebenen Schlüssel. Ist der Schlüssel noch nicht vorhanden wird 
            ein neues Element in die Liste eingefügt.</summary>
        </member>
        <member name="M:SharpAccessory.Collections.KeyValueCollection.TryParseBool(System.String,System.Boolean)">
            <summary>Liefert den zum Schlüssel gehörenden Wert als bool. Ist der Wert nicht vorhanden oder 
            ungültig wird defaultValue zurückgegeben.</summary>
        </member>
        <member name="M:SharpAccessory.Collections.KeyValueCollection.TryParseDouble(System.String,System.Double)">
            <summary>Liefert den zum Schlüssel gehörenden Wert als double. Ist der Wert nicht vorhanden oder 
            ungültig wird defaultValue zurückgegeben.</summary>
        </member>
        <member name="M:SharpAccessory.Collections.KeyValueCollection.TryParseFloat(System.String,System.Single)">
            <summary>Liefert den zum Schlüssel gehörenden Wert als float. Ist der Wert nicht vorhanden oder 
            ungültig wird defaultValue zurückgegeben.</summary>
        </member>
        <member name="M:SharpAccessory.Collections.KeyValueCollection.TryParseInt(System.String,System.Int32)">
            <summary>Liefert den zum Schlüssel gehörenden Wert als int. Ist der Wert nicht vorhanden oder 
            ungültig wird defaultValue zurückgegeben.</summary>
        </member>
        <member name="P:SharpAccessory.Collections.KeyValueCollection.Item(System.String)">
            <summary>Ruft den Wert zu dem angegebenen Schlüssel ab oder legt diesen fest.</summary>
        </member>
        <member name="T:SharpAccessory.Collections.KeyValuePair">
            <summary>Enthält ein Schlüssel-Wert-Paar.</summary>
        </member>
        <member name="M:SharpAccessory.Collections.KeyValuePair.#ctor(System.String,System.String)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="key">Gibt den Schlüssel an.</param>
            <param name="value">Gibt den Wert an.</param>
        </member>
        <member name="M:SharpAccessory.Collections.KeyValuePair.ToString">
            <summary>Konvertiert diese Instanz in eine lesbare Zeichenfolge.</summary>
        </member>
        <member name="P:SharpAccessory.Collections.KeyValuePair.Key">
            <summary>Ruft den Schlüssel ab, oder legt diesen fest.</summary>
        </member>
        <member name="P:SharpAccessory.Collections.KeyValuePair.Value">
            <summary>Ruft den Wert ab, oder legt diesen fest.</summary>
        </member>
        <member name="P:SharpAccessory.Collections.KeyValuePair.IsEmpty">
            <summary>Ruft einen Wert ab, der angibt, ob alle Werte auf deren Default gesetzt sind.</summary>
        </member>
        <member name="P:SharpAccessory.Collections.KeyValuePair.Empty">
            <summary>Erzeugt eine neue Instanz mit allen Werten auf deren Default gesetzt.</summary>
        </member>
        <member name="T:SharpAccessory.Collections.StringCollection">
            <summary>Verwaltet eine Liste von Zeichenfolgen.</summary>
        </member>
        <member name="M:SharpAccessory.Collections.StringCollection.#ctor(System.String[])">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="strings">Gibt die Zeichenfolgen an die in dieser Liste verwaltet werden.</param>
        </member>
        <member name="T:SharpAccessory.Data.Tables.DataField">
            <summary>Speichert einen Text, eine Zahl, einen booleschen Wert oder ein Datum/Uhrzeit.</summary>
        </member>
        <member name="M:SharpAccessory.Data.Tables.DataField.#ctor(SharpAccessory.Data.Tables.DataSet,System.String)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="primaryOwner">Gibt den Datensatz an in dem das Datenfeld primär vorliegt.</param>
            <param name="name">Gibt den Namen des Datenfelds an.</param>
        </member>
        <member name="M:SharpAccessory.Data.Tables.DataField.#ctor(SharpAccessory.Data.Tables.DataSet,System.String,System.Boolean)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="primaryOwner">Gibt den Datensatz an in dem das Datenfeld primär vorliegt.</param>
            <param name="name">Gibt den Namen des Datenfelds an.</param>
            <param name="boolean">Gibt den booleschen Wert an.</param>
        </member>
        <member name="M:SharpAccessory.Data.Tables.DataField.#ctor(SharpAccessory.Data.Tables.DataSet,System.String,System.DateTime)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="primaryOwner">Gibt den Datensatz an in dem das Datenfeld primär vorliegt.</param>
            <param name="name">Gibt den Namen des Datenfelds an.</param>
            <param name="dateTime">Gibt das Datum/Uhrzeit an.</param>
        </member>
        <member name="M:SharpAccessory.Data.Tables.DataField.#ctor(SharpAccessory.Data.Tables.DataSet,System.String,System.Double)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="primaryOwner">Gibt den Datensatz an in dem das Datenfeld primär vorliegt.</param>
            <param name="name">Gibt den Namen des Datenfelds an.</param>
            <param name="number">Gibt die Zahl an.</param>
        </member>
        <member name="M:SharpAccessory.Data.Tables.DataField.#ctor(SharpAccessory.Data.Tables.DataSet,System.String,System.String)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="primaryOwner">Gibt den Datensatz an in dem das Datenfeld primär vorliegt.</param>
            <param name="name">Gibt den Namen des Datenfelds an.</param>
            <param name="text">Gibt den Text an.</param>
        </member>
        <member name="M:SharpAccessory.Data.Tables.DataField.#ctor(SharpAccessory.Data.Tables.DataSet,SharpAccessory.Data.Tables.DataField)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="primaryOwner">Gibt den Datensatz an in dem das Datenfeld primär vorliegt.</param>
            <param name="dataField">Gibt ein Datenfeld an dessen Eigenschaften kopiert werden.</param>
        </member>
        <member name="M:SharpAccessory.Data.Tables.DataField.ToString">
            <summary>Konvertiert diese Instanz in eine lesbare Zeichenfolge.</summary>
        </member>
        <member name="P:SharpAccessory.Data.Tables.DataField.Boolean">
            <summary>Ruft den booleschen Wert ab, oder legt diesen fest.</summary>
        </member>
        <member name="P:SharpAccessory.Data.Tables.DataField.DateTime">
            <summary>Ruft das Datum/Uhrzeit ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.Data.Tables.DataField.Number">
            <summary>Ruft die Zahl ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.Data.Tables.DataField.Text">
            <summary>Ruft den Text ab, oder legt diesen fest.</summary>
        </member>
        <member name="P:SharpAccessory.Data.Tables.DataField.Name">
            <summary>Ruft den Namen des Datenfelds ab.</summary>
        </member>
        <member name="P:SharpAccessory.Data.Tables.DataField.PrimaryOwner">
            <summary>Ruft den Datensatz ab in dem das Datenfeld primär vorliegt.</summary>
        </member>
        <member name="P:SharpAccessory.Data.Tables.DataField.Type">
            <summary>Ruft ab mit welchem Datentyp das Datenfeld verwendet wird.</summary>
        </member>
        <member name="T:SharpAccessory.Data.Tables.DataFieldCollection">
            <summary>Verwaltet eine Liste von Datenfeldern.</summary>
        </member>
        <member name="M:SharpAccessory.Data.Tables.DataFieldCollection.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.Data.Tables.DataFieldCollection.Add(SharpAccessory.Data.Tables.DataField)">
            <summary>Fügt das angegebene Datenfeld am Ende der Auflistung hinzu.</summary>
        </member>
        <member name="M:SharpAccessory.Data.Tables.DataFieldCollection.AddRange(SharpAccessory.Data.Tables.DataField[])">
            <summary>Fügt die angegebenen Datenfelder am Ende der Auflistung hinzu.</summary>
        </member>
        <member name="M:SharpAccessory.Data.Tables.DataFieldCollection.Clear">
            <summary>Entfernt alle Datenfelder aus der Auflistung.</summary>
        </member>
        <member name="M:SharpAccessory.Data.Tables.DataFieldCollection.Contains(System.String)">
            <summary>Überprüft ob das angegebene Datenfeld in der Auflistung enthalten ist.</summary>
        </member>
        <member name="M:SharpAccessory.Data.Tables.DataFieldCollection.GetDataFieldByName(System.String)">
            <summary>Ruft das Datenfeld mit dem angegebenen Namen ab.</summary>
        </member>
        <member name="M:SharpAccessory.Data.Tables.DataFieldCollection.IndexOf(System.String)">
            <summary>Sucht das angegebene Datenfeld in der Auflistung und gibt dessen Index zurück.</summary>
        </member>
        <member name="M:SharpAccessory.Data.Tables.DataFieldCollection.Insert(System.Int32,SharpAccessory.Data.Tables.DataField)">
            <summary>Fügt das angegebene Datenfeld an der angegebenen Position ein.</summary>
        </member>
        <member name="M:SharpAccessory.Data.Tables.DataFieldCollection.Remove(System.String)">
            <summary>Entfernt das angegebene Datenfeld aus der Auflistung.</summary>
        </member>
        <member name="M:SharpAccessory.Data.Tables.DataFieldCollection.Remove(SharpAccessory.Data.Tables.DataField)">
            <summary>Entfernt das angegebene Datenfeld aus der Auflistung.</summary>
        </member>
        <member name="M:SharpAccessory.Data.Tables.DataFieldCollection.RemoveAt(System.Int32)">
            <summary>Entfernt das Datenfeld an der angegebenen Position aus der Auflistung.</summary>
        </member>
        <member name="P:SharpAccessory.Data.Tables.DataFieldCollection.Item(System.String)">
            <summary>Ruft das Datenfeld mit dem angegebenen Namen ab.</summary>
        </member>
        <member name="T:SharpAccessory.Data.Tables.DataFieldNotFoundException">
            <summary>Exception die ausgelöst wird wenn ein Datenfeld nicht gefunden werden konnte.</summary>
        </member>
        <member name="M:SharpAccessory.Data.Tables.DataFieldNotFoundException.#ctor(System.String)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="name">Gibt den Namen des Datenfelds an das nicht gefunden werden konnte.</param>
        </member>
        <member name="M:SharpAccessory.Data.Tables.DataFieldNotFoundException.#ctor(System.String,System.String)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="message">Die Meldung, in der der Fehler beschrieben wird.</param>
            <param name="name">Gibt den Namen des Datenfelds an das nicht gefunden werden konnte.</param>
        </member>
        <member name="P:SharpAccessory.Data.Tables.DataFieldNotFoundException.Name">
            <summary>Ruft den Namen des Datenfelds ab das nicht gefunden werden konnte.</summary>
        </member>
        <member name="T:SharpAccessory.Data.Tables.DataFieldType">
            <summary>Gibt an mit welchem Datentyp ein Datenfeld verwendet wird.</summary>
        </member>
        <member name="F:SharpAccessory.Data.Tables.DataFieldType.Boolean">
            <summary>Gibt an, dass ein Datenfeld als boolescher Wert verwendet wird.</summary>
        </member>
        <member name="F:SharpAccessory.Data.Tables.DataFieldType.DateTime">
            <summary>Gibt an, dass ein Datenfeld als Datum/Uhrzeit verwendet wird.</summary>
        </member>
        <member name="F:SharpAccessory.Data.Tables.DataFieldType.Number">
            <summary>Gibt an, dass ein Datenfeld als Zahl verwendet wird.</summary>
        </member>
        <member name="F:SharpAccessory.Data.Tables.DataFieldType.Text">
            <summary>Gibt an, dass ein Datenfeld als Text verwendet wird.</summary>
        </member>
        <member name="T:SharpAccessory.Data.Tables.DataSet">
            <summary>Speichert eine Liste von Datenfeldern.</summary>
        </member>
        <member name="M:SharpAccessory.Data.Tables.DataSet.#ctor(SharpAccessory.Data.Tables.DataTable)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="primaryOwner">Gibt die Tabelle an in der der Datensatz primär vorliegt.</param>
        </member>
        <member name="P:SharpAccessory.Data.Tables.DataSet.DataFields">
            <summary>Ruft die Liste der Datenfelder ab.</summary>
        </member>
        <member name="P:SharpAccessory.Data.Tables.DataSet.PrimaryOwner">
            <summary>Ruft die Tabelle ab in der der Datensatz primär vorliegt.</summary>
        </member>
        <member name="T:SharpAccessory.Data.Tables.DataSetCollection">
            <summary>Verwaltet eine Liste von Datensätzen.</summary>
        </member>
        <member name="M:SharpAccessory.Data.Tables.DataSetCollection.FindContainedDataFields">
            <summary>Ruft die Namen aller enthaltenen Datenfelder ab.</summary>
        </member>
        <member name="T:SharpAccessory.Data.Tables.DataTable">
            <summary>Liest und schreibt CSV-Tabellen.</summary>
        </member>
        <member name="M:SharpAccessory.Data.Tables.DataTable.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.Data.Tables.DataTable.FromFile(System.String)">
            <summary>Liest eine Tabelle aus der angegebenen Datei.</summary>
            <param name="filename">Die Datei, die gelesen werden soll.</param>
        </member>
        <member name="M:SharpAccessory.Data.Tables.DataTable.FromFile(System.String,SharpAccessory.Data.Tables.DataTableFormatInfo)">
            <summary>Liest eine Tabelle aus der angegebenen Datei.</summary>
            <param name="filename">Die Datei, die gelesen werden soll.</param>
            <param name="formatInfo">Enthält die Einstellungen für die Formatierung und Codierung.</param>
        </member>
        <member name="M:SharpAccessory.Data.Tables.DataTable.FromStream(System.IO.Stream)">
            <summary>Liest eine Tabelle aus dem angegebenen Stream.</summary>
            <param name="stream">Der Stream, der gelesen werden soll.</param>
        </member>
        <member name="M:SharpAccessory.Data.Tables.DataTable.FromStream(System.IO.Stream,SharpAccessory.Data.Tables.DataTableFormatInfo)">
            <summary>Liest eine Tabelle aus dem angegebenen Stream.</summary>
            <param name="stream">Der Stream, der gelesen werden soll.</param>
            <param name="formatInfo">Enthält die Einstellungen für die Formatierung und Codierung.</param>
        </member>
        <member name="M:SharpAccessory.Data.Tables.DataTable.FindAll(System.String,System.Boolean)">
            <summary>Ruft alle Datensätze mit dem angegebenen booleschen Wert ab.</summary>
            <param name="name">Gibt den Namen des Datenfeldes an das überprüft wird.</param>
            <param name="boolean">Gibt den booleschen Wert an.</param>
        </member>
        <member name="M:SharpAccessory.Data.Tables.DataTable.FindAll(System.String,System.DateTime)">
            <summary>Ruft alle Datensätze mit dem angegebenen Datum/Uhrzeit ab.</summary>
            <param name="name">Gibt den Namen des Datenfeldes an das überprüft wird.</param>
            <param name="dateTime">Gibt das Datum/Uhrzeit an.</param>
        </member>
        <member name="M:SharpAccessory.Data.Tables.DataTable.FindAll(System.String,System.Double)">
            <summary>Ruft alle Datensätze mit der angegebenen Zahl ab.</summary>
            <param name="name">Gibt den Namen des Datenfeldes an das überprüft wird.</param>
            <param name="number">Gibt die Zahl an.</param>
        </member>
        <member name="M:SharpAccessory.Data.Tables.DataTable.FindAll(System.String,System.String)">
            <summary>Ruft alle Datensätze mit dem angegebenen Text ab.</summary>
            <param name="name">Gibt den Namen des Datenfeldes an das überprüft wird.</param>
            <param name="text">Gibt den Text an.</param>
        </member>
        <member name="M:SharpAccessory.Data.Tables.DataTable.FindAll(System.Predicate{SharpAccessory.Data.Tables.DataSet})">
            <summary>Ruft alle Datensätze ab die ein bestimmtes Kriterium erfüllen.</summary>
            <param name="predicate">Methode die überprüft ob ein Datensatz zutreffend ist.</param>
        </member>
        <member name="M:SharpAccessory.Data.Tables.DataTable.FindFirst(System.String,System.Boolean)">
            <summary>Ruft den ersten Datensatz mit dem angegebenen booleschen Wert ab.</summary>
            <param name="name">Gibt den Namen des Datenfeldes an das überprüft wird.</param>
            <param name="boolean">Gibt den booleschen Wert an.</param>
            <returns>Den ersten zutreffenden Datensatz, wenn vorhanden, sonst null.</returns>
        </member>
        <member name="M:SharpAccessory.Data.Tables.DataTable.FindFirst(System.String,System.DateTime)">
            <summary>Ruft den ersten Datensatz mit dem angegebenen Datum/Uhrzeit ab.</summary>
            <param name="name">Gibt den Namen des Datenfeldes an das überprüft wird.</param>
            <param name="dateTime">Gibt das Datum/Uhrzeit an.</param>
            <returns>Den ersten zutreffenden Datensatz, wenn vorhanden, sonst null.</returns>
        </member>
        <member name="M:SharpAccessory.Data.Tables.DataTable.FindFirst(System.String,System.Double)">
            <summary>Ruft den ersten Datensatz mit der angegebenen Zahl ab.</summary>
            <param name="name">Gibt den Namen des Datenfeldes an das überprüft wird.</param>
            <param name="number">Gibt die Zahl an.</param>
            <returns>Den ersten zutreffenden Datensatz, wenn vorhanden, sonst null.</returns>
        </member>
        <member name="M:SharpAccessory.Data.Tables.DataTable.FindFirst(System.String,System.String)">
            <summary>Ruft den ersten Datensatz mit dem angegebenen Text ab.</summary>
            <param name="name">Gibt den Namen des Datenfeldes an das überprüft wird.</param>
            <param name="text">Gibt den Text an.</param>
            <returns>Den ersten zutreffenden Datensatz, wenn vorhanden, sonst null.</returns>
        </member>
        <member name="M:SharpAccessory.Data.Tables.DataTable.FindFirst(System.Predicate{SharpAccessory.Data.Tables.DataSet})">
            <summary>Ruft den ersten Datensatz ab der ein bestimmtes Kriterium erfüllt.</summary>
            <param name="predicate">Methode die überprüft ob ein Datensatz zutreffend ist.</param>
            <returns>Den ersten zutreffenden Datensatz, wenn vorhanden, sonst null.</returns>
        </member>
        <member name="M:SharpAccessory.Data.Tables.DataTable.Import(SharpAccessory.Data.Tables.DataTable,System.String[])">
            <summary>Importiert Datensätze aus einer anderen Tabelle.</summary>
            <param name="source">Die Tabelle aus der importiert wird.</param>
            <param name="names">Gibt die Namen der Datenfelder an die importiert werden.</param>
        </member>
        <member name="M:SharpAccessory.Data.Tables.DataTable.Import(SharpAccessory.Data.Tables.DataTable,System.String[],System.Predicate{SharpAccessory.Data.Tables.DataSet})">
            <summary>Importiert Datensätze aus einer anderen Tabelle.</summary>
            <param name="source">Die Tabelle aus der importiert wird.</param>
            <param name="names">Gibt die Namen der Datenfelder an die importiert werden.</param>
            <param name="predicate">Methode die überprüft ob ein Datensatz zutreffend ist.</param>
        </member>
        <member name="M:SharpAccessory.Data.Tables.DataTable.Import(SharpAccessory.Data.Tables.DataTable,System.String[],System.String,System.String)">
            <summary>Importiert Datenfelder aus einer anderen Tabelle.</summary>
            <param name="source">Die Tabelle aus der importiert wird.</param>
            <param name="names">Gibt die Namen der Datenfelder an die importiert werden.</param>
            <param name="fk">Gibt den Namen des Schlüssels in dieser Tabelle an.</param>
            <param name="pk">Gibt den Namen des Schlüssels in der Tabelle an aus der importiert wird.</param>
        </member>
        <member name="M:SharpAccessory.Data.Tables.DataTable.Import(SharpAccessory.Data.Tables.DataTable,System.String[],System.String,System.String,System.Predicate{SharpAccessory.Data.Tables.DataSet})">
            <summary>Importiert Datenfelder aus einer anderen Tabelle.</summary>
            <param name="source">Die Tabelle aus der importiert wird.</param>
            <param name="names">Gibt die Namen der Datenfelder an die importiert werden.</param>
            <param name="fk">Gibt den Namen des Schlüssels in dieser Tabelle an.</param>
            <param name="pk">Gibt den Namen des Schlüssels in der Tabelle an aus der importiert wird.</param>
            <param name="predicate">Methode die überprüft ob ein Datensatz zutreffend ist.</param>
        </member>
        <member name="M:SharpAccessory.Data.Tables.DataTable.SaveToFile(System.String)">
            <summary>Speichert die Tabelle in die angegebene Datei.</summary>
            <param name="filename">Die Datei, in die geschrieben werden soll.</param>
        </member>
        <member name="M:SharpAccessory.Data.Tables.DataTable.SaveToFile(System.String,SharpAccessory.Data.Tables.DataTableFormatInfo)">
            <summary>Speichert die Tabelle in die angegebene Datei.</summary>
            <param name="filename">Die Datei, in die geschrieben werden soll.</param>
            <param name="formatInfo">Enthält die Einstellungen für die Formatierung und Codierung.</param>
        </member>
        <member name="M:SharpAccessory.Data.Tables.DataTable.SaveToStream(System.IO.Stream)">
            <summary>Speichert die Tabelle in den angegebenen Stream.</summary>
            <param name="stream">Der Stream, in den geschrieben werden soll.</param>
        </member>
        <member name="M:SharpAccessory.Data.Tables.DataTable.SaveToStream(System.IO.Stream,SharpAccessory.Data.Tables.DataTableFormatInfo)">
            <summary>Speichert die Tabelle in den angegebenen Stream.</summary>
            <param name="stream">Der Stream, in den geschrieben werden soll.</param>
            <param name="formatInfo">Enthält die Einstellungen für die Formatierung und Codierung.</param>
        </member>
        <member name="P:SharpAccessory.Data.Tables.DataTable.ImportOperation">
            <summary>Ruft ab oder legt fest wie Datenfelder importiert werden.</summary>
        </member>
        <member name="P:SharpAccessory.Data.Tables.DataTable.Name">
            <summary>Ruft den Namen der Tabelle ab, oder legt diesen fest.</summary>
        </member>
        <member name="P:SharpAccessory.Data.Tables.DataTable.DataSets">
            <summary>Ruft die Liste der Datensätze ab.</summary>
        </member>
        <member name="P:SharpAccessory.Data.Tables.DataTable.Empty">
            <summary>Erzeugt eine leere Tabelle.</summary>
        </member>
        <member name="T:SharpAccessory.Data.Tables.DataTableFormatInfo">
            <summary>Enthält die Einstellungen für die Formatierung und Codierung von Tabellen.</summary>
        </member>
        <member name="M:SharpAccessory.Data.Tables.DataTableFormatInfo.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="P:SharpAccessory.Data.Tables.DataTableFormatInfo.DateTimeFormatInfo">
            <summary>Ruft ab oder legt fest wie Datum/Uhrzeit formatiert werden.</summary>
        </member>
        <member name="P:SharpAccessory.Data.Tables.DataTableFormatInfo.Encoding">
            <summary>Ruft die Zeichencodierung ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.Data.Tables.DataTableFormatInfo.NumberFormatInfo">
            <summary>Ruft ab oder legt fest wie Zahlen formatiert werden.</summary>
        </member>
        <member name="P:SharpAccessory.Data.Tables.DataTableFormatInfo.SeparatorChar">
            <summary>Ruft das Trennzeichen ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:SharpAccessory.Data.Tables.DataTableFormatInfo.SubstituteChar">
            <summary>Ruft das Ersatzzeichen ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:SharpAccessory.Data.Tables.DataTableFormatInfo.Default">
            <summary>Erstellt eine neue Instanz mit den Standardwerten.</summary>
        </member>
        <member name="T:SharpAccessory.Data.Tables.ImportOperation">
            <summary>Legt fest wie Datenfelder importiert werden.</summary>
        </member>
        <member name="F:SharpAccessory.Data.Tables.ImportOperation.Copy">
            <summary>Gibt an, dass Datenfelder beim Importieren kopiert werden.</summary>
        </member>
        <member name="F:SharpAccessory.Data.Tables.ImportOperation.Link">
            <summary>Gibt an, dass Datenfelder beim Importieren verknüpft werden.</summary>
        </member>
        <member name="T:SharpAccessory.Documents.DocumentHistory">
            <summary>Verwaltet einen Verlauf von Dokumenten.</summary>
        </member>
        <member name="T:SharpAccessory.Documents.History`1">
            <summary>Verwaltet einen Verlauf von Elementen.</summary>
        </member>
        <member name="M:SharpAccessory.Documents.History`1.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.Documents.History`1.Add(`0)">
            <summary>Fügt das angegebene Element zum Verlauf hinzu.</summary>
        </member>
        <member name="M:SharpAccessory.Documents.History`1.AddRange(`0[])">
            <summary>Fügt die angegebenen Elemente in umgekehrter Reihenfolge zum Verlauf hinzu.</summary>
        </member>
        <member name="M:SharpAccessory.Documents.History`1.Clear">
            <summary>Entfernt alle Elemente aus dem Verlauf.</summary>
        </member>
        <member name="M:SharpAccessory.Documents.History`1.Contains(`0)">
            <summary>Überprüft ob das angegebene Element im Verlauf enthalten ist.</summary>
        </member>
        <member name="M:SharpAccessory.Documents.History`1.Remove(`0)">
            <summary>Entfernt das angegebene Element aus dem Verlauf.</summary>
        </member>
        <member name="M:SharpAccessory.Documents.History`1.RemoveAt(System.Int32)">
            <summary>Entfernt das Element an der angegebenen Position.</summary>
        </member>
        <member name="M:SharpAccessory.Documents.History`1.ToArray">
            <summary>Kopiert alle Elemente aus dem Verlauf in ein neues Array.</summary>
        </member>
        <member name="P:SharpAccessory.Documents.History`1.Item(System.Int32)">
            <summary>Ruft das Element am angegebenen Index ab.</summary>
        </member>
        <member name="P:SharpAccessory.Documents.History`1.Capacity">
            <summary>Ruft ab oder legt fest wieviele Elemente gespeichert werden können.</summary>
        </member>
        <member name="P:SharpAccessory.Documents.History`1.Count">
            <summary>Ruft die Anzahl der im Verlauf gespeicherten Elemente ab.</summary>
        </member>
        <member name="T:SharpAccessory.Documents.LinkEventArgs">
            <summary>Stellt Daten für ein Ereignis mit einem Link bereit.</summary>
        </member>
        <member name="M:SharpAccessory.Documents.LinkEventArgs.#ctor(SharpAccessory.Documents.Link)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="link">Gibt den betreffenden Link an.</param>
        </member>
        <member name="P:SharpAccessory.Documents.LinkEventArgs.Link">
            <summary>Ruft den betreffenden Link ab.</summary>
        </member>
        <member name="T:SharpAccessory.Documents.LinkEventHandler">
            <summary>Methode die ein Ereignis mit einem Link verarbeitet.</summary>
        </member>
        <member name="T:SharpAccessory.Documents.Link">
            <summary>Repräsentiert einen Link mit einem Text und einer Url.</summary>
        </member>
        <member name="M:SharpAccessory.Documents.Link.#ctor(System.String,System.String)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="text">Gibt den Text an, der diesem Link zugeordnet ist.</param>
            <param name="url">Gibt die Url an, die diesem Link zugeordnet ist.</param>
        </member>
        <member name="M:SharpAccessory.Documents.Link.ToString">
            <summary>Konvertiert diese Instanz in eine lesbare Zeichenfolge.</summary>
        </member>
        <member name="P:SharpAccessory.Documents.Link.Text">
            <summary>Ruft den Text ab, der diesem Link zugeordnet ist, oder legt diesen fest.</summary>
        </member>
        <member name="P:SharpAccessory.Documents.Link.Url">
            <summary>Ruft die Url ab, die diesem Link zugeordnet ist, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.Documents.Link.IsEmpty">
            <summary>Ruft einen Wert ab, der angibt, ob alle Werte auf deren Default gesetzt sind.</summary>
        </member>
        <member name="P:SharpAccessory.Documents.Link.Empty">
            <summary>Erzeugt eine neue Instanz mit allen Werten auf deren Default gesetzt.</summary>
        </member>
        <member name="T:SharpAccessory.Globalization.Language">
            <summary>Listet die verfügbaren Sprachen für die Benutzeroberfläche und Hilfe auf.</summary>
        </member>
        <member name="F:SharpAccessory.Globalization.Language.Auto">
            <summary>Die Sprache wird automatisch ausgewählt.</summary>
        </member>
        <member name="F:SharpAccessory.Globalization.Language.English">
            <summary>Englisch.</summary>
        </member>
        <member name="F:SharpAccessory.Globalization.Language.German">
            <summary>Deutsch.</summary>
        </member>
        <member name="T:SharpAccessory.Globalization.LanguagePack">
            <summary>Repräsentiert eine Sprach-Datei.</summary>
        </member>
        <member name="M:SharpAccessory.Globalization.LanguagePack.FromFile(System.String)">
            <summary>Lädt das Sprach-Paket aus der angegebenen Datei.</summary>
        </member>
        <member name="M:SharpAccessory.Globalization.LanguagePack.FromFile(System.String,System.Text.Encoding)">
            <summary>Lädt das Sprach-Paket aus der angegebenen Datei.</summary>
        </member>
        <member name="M:SharpAccessory.Globalization.LanguagePack.FromBuffer(System.Byte[])">
            <summary>Lädt das Sprach-Paket aus dem angegebenen Puffer.</summary>
        </member>
        <member name="M:SharpAccessory.Globalization.LanguagePack.FromBuffer(System.Byte[],System.Text.Encoding)">
            <summary>Lädt das Sprach-Paket aus dem angegebenen Puffer.</summary>
        </member>
        <member name="M:SharpAccessory.Globalization.LanguagePack.FromText(System.String)">
            <summary>Lädt das Sprach-Paket aus der angegebenen Zeichenfolge.</summary>
        </member>
        <member name="M:SharpAccessory.Globalization.LanguagePack.GetString(System.String)">
            <summary>Ruft die Zeichenfolge mit dem angegebenen Schlüssel ab.</summary>
        </member>
        <member name="M:SharpAccessory.Globalization.LanguagePack.GetString(System.String,System.Object)">
            <summary>Ruft die Zeichenfolge mit dem angegebenen Schlüssel ab und ersetzt das MESSAGE-Tag durch 
            die angegebene Zeichenfolge.</summary>
        </member>
        <member name="M:SharpAccessory.Globalization.LanguagePack.GetString(System.String,System.Object,System.Object)">
            <summary>Ruft die Zeichenfolge mit dem angegebenen Schlüssel ab und ersetzt das MESSAGE-Tag und 
            das MESSAGE_EX-Tag durch die angegebenen Zeichenfolgen.</summary>
        </member>
        <member name="P:SharpAccessory.Globalization.LanguagePack.Item(System.String)">
            <summary>Ruft die Zeichenfolge mit dem angegebenen Schlüssel ab.</summary>
        </member>
        <member name="P:SharpAccessory.Globalization.LanguagePack.Item(System.String,System.Object)">
            <summary>Ruft die Zeichenfolge mit dem angegebenen Schlüssel ab und ersetzt das MESSAGE-Tag durch 
            die angegebene Zeichenfolge.</summary>
        </member>
        <member name="P:SharpAccessory.Globalization.LanguagePack.Item(System.String,System.Object,System.Object)">
            <summary>Ruft die Zeichenfolge mit dem angegebenen Schlüssel ab und ersetzt das MESSAGE-Tag und 
            das MESSAGE_EX-Tag durch die angegebenen Zeichenfolgen.</summary>
        </member>
        <member name="T:SharpAccessory.IllegalMemberAccessException">
            <summary>Exception die ausgelöst wird wenn der Zugriff auf ein Feld oder eine Methode nicht erlaubt 
            ist.</summary>
        </member>
        <member name="M:SharpAccessory.IllegalMemberAccessException.#ctor(System.String)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="member">Gibt den Namen des Feldes oder der Methode an.</param>
        </member>
        <member name="M:SharpAccessory.IllegalMemberAccessException.#ctor(System.String,System.String)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="message">Die Meldung, in der der Fehler beschrieben wird.</param>
            <param name="member">Gibt den Namen des Feldes oder der Methode an.</param>
        </member>
        <member name="P:SharpAccessory.IllegalMemberAccessException.Member">
            <summary>Ruft den Namen des Feldes oder der Methode ab.</summary>
        </member>
        <member name="T:SharpAccessory.Imaging.BitmapProcessor">
            <summary>Bietet Zugriff auf Pixel eines System.Drawing.Bitmap im ARGB-Format.</summary>
        </member>
        <member name="M:SharpAccessory.Imaging.BitmapProcessor.#ctor(System.Drawing.Bitmap)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.Imaging.BitmapProcessor.Finalize">
            <summary>Gibt die Ressourcen des Prozessors frei.</summary>
        </member>
        <member name="M:SharpAccessory.Imaging.BitmapProcessor.GetPixels">
            <summary>Ruft alle Pixel-Werte als Array ab.</summary>
        </member>
        <member name="M:SharpAccessory.Imaging.BitmapProcessor.GetPixel(System.Int32,System.Int32)">
            <summary>Ruft den Pixel-Wert an der Position [x, y] ab.</summary>
        </member>
        <member name="M:SharpAccessory.Imaging.BitmapProcessor.GetAlpha(System.Int32,System.Int32)">
            <summary>Ruft den Wert des Alpha-Kanals an der Position [x, y] ab.</summary>
        </member>
        <member name="M:SharpAccessory.Imaging.BitmapProcessor.GetRed(System.Int32,System.Int32)">
            <summary>Ruft den Wert des Rot-Kanals an der Position [x, y] ab.</summary>
        </member>
        <member name="M:SharpAccessory.Imaging.BitmapProcessor.GetGreen(System.Int32,System.Int32)">
            <summary>Ruft den Wert des Grün-Kanals an der Position [x, y] ab.</summary>
        </member>
        <member name="M:SharpAccessory.Imaging.BitmapProcessor.GetBlue(System.Int32,System.Int32)">
            <summary>Ruft den Wert des Blau-Kanals an der Position [x, y] ab.</summary>
        </member>
        <member name="M:SharpAccessory.Imaging.BitmapProcessor.SetPixels(System.UInt32[])">
            <summary>Ersetzt alle Pixel durch die im Array angegebenen Werte.</summary>
        </member>
        <member name="M:SharpAccessory.Imaging.BitmapProcessor.SetPixel(System.Int32,System.Int32,System.UInt32)">
            <summary>Setzt den Pixel-Wert an der Position [x, y].</summary>
        </member>
        <member name="M:SharpAccessory.Imaging.BitmapProcessor.SetAlpha(System.Int32,System.Int32,System.Byte)">
            <summary>Setzt den Wert des Alpha-Kanals an der Position [x, y].</summary>
        </member>
        <member name="M:SharpAccessory.Imaging.BitmapProcessor.SetRed(System.Int32,System.Int32,System.Byte)">
            <summary>Setzt den Wert des Rot-Kanals an der Position [x, y].</summary>
        </member>
        <member name="M:SharpAccessory.Imaging.BitmapProcessor.SetGreen(System.Int32,System.Int32,System.Byte)">
            <summary>Setzt den Wert des Grün-Kanals an der Position [x, y].</summary>
        </member>
        <member name="M:SharpAccessory.Imaging.BitmapProcessor.SetBlue(System.Int32,System.Int32,System.Byte)">
            <summary>Setzt den Wert des Blau-Kanals an der Position [x, y].</summary>
        </member>
        <member name="M:SharpAccessory.Imaging.BitmapProcessor.Clone">
            <summary>Erzeugt eine Kopie des Prozessors und des zugrunde liegenden Bitmaps.</summary>
        </member>
        <member name="M:SharpAccessory.Imaging.BitmapProcessor.Dispose">
            <summary>Gibt den Prozessor frei.</summary>
        </member>
        <member name="P:SharpAccessory.Imaging.BitmapProcessor.Item(System.Int32,System.Int32)">
            <summary>Ruft den Pixel an der Position [x, y] ab, oder legt diesen fest.</summary>
        </member>
        <member name="P:SharpAccessory.Imaging.BitmapProcessor.Width">
            <summary>Ruft die Breite des Bildes ab.</summary>
        </member>
        <member name="P:SharpAccessory.Imaging.BitmapProcessor.Height">
            <summary>Ruft die Höhe des Bildes ab.</summary>
        </member>
        <member name="P:SharpAccessory.Imaging.BitmapProcessor.Scan0">
            <summary>Ruft die Adresse der ersten Bilddaten ab.</summary>
        </member>
        <member name="P:SharpAccessory.Imaging.BitmapProcessor.Bitmap">
            <summary>Ruft das zugrunde liegende Bitmap ab.</summary>
        </member>
        <member name="P:SharpAccessory.Imaging.BitmapProcessor.ReadOnly">
            <summary>Diese Eigenschaft ist für diese Klasse nicht relevant.</summary>
            <returns>false</returns>
        </member>
        <member name="P:SharpAccessory.Imaging.BitmapProcessor.IsDisposed">
            <summary>Ruft einen Wert ab, der angibt, ob dieser Prozessor bereits freigegeben wurde.</summary>
        </member>
        <member name="T:SharpAccessory.Imaging.CommonImageFile">
            <summary>Implementiert IImageFile für TIFF, JPEG, PNG und BMP-Dateien.</summary>
        </member>
        <member name="T:SharpAccessory.Imaging.IImageFile">
            <summary>Definiert den Zugriff auf eine Bilddatei.</summary>
        </member>
        <member name="P:SharpAccessory.Imaging.IImageFile.Image">
            <summary>Ruft die Bilddaten ab.</summary>
        </member>
        <member name="P:SharpAccessory.Imaging.IImageFile.Name">
            <summary>Ruft den Namen des Bildes ab.</summary>
        </member>
        <member name="P:SharpAccessory.Imaging.IImageFile.Url">
            <summary>Ruft die Url ab mit der die Datei geöffnet wurde.</summary>
        </member>
        <member name="P:SharpAccessory.Imaging.IImageFile.IsDisposed">
            <summary>Ruft einen Wert ab, der angibt, ob diese Instanz bereits freigegeben wurde.</summary>
        </member>
        <member name="M:SharpAccessory.Imaging.CommonImageFile.#ctor(System.String)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="filename">Gibt den vollständigen Pfad der Bilddatei an.</param>
        </member>
        <member name="M:SharpAccessory.Imaging.CommonImageFile.Dispose">
            <summary>Gibt diese Instanz frei.</summary>
        </member>
        <member name="P:SharpAccessory.Imaging.CommonImageFile.Image">
            <summary>Ruft die Bilddaten ab.</summary>
        </member>
        <member name="P:SharpAccessory.Imaging.CommonImageFile.Name">
            <summary>Ruft den Namen des Bildes ab.</summary>
        </member>
        <member name="P:SharpAccessory.Imaging.CommonImageFile.Url">
            <summary>Ruft den vollständigen Pfad der Bilddatei ab.</summary>
        </member>
        <member name="P:SharpAccessory.Imaging.CommonImageFile.IsDisposed">
            <summary>Ruft einen Wert ab, der angibt, ob diese Instanz bereits freigegeben wurde.</summary>
        </member>
        <member name="T:SharpAccessory.Imaging.ImageFileProvider">
            <summary>Methode die eine Url in ein IImageFile umsetzt.</summary>
        </member>
        <member name="T:SharpAccessory.Imaging.ImageFormatCollection">
            <summary>Verwaltet eine Liste von Bildformaten.</summary>
        </member>
        <member name="T:SharpAccessory.Imaging.ImageFormatProvider">
            <summary>Methode die eine Url in ein ImageFormatInfo umsetzt.</summary>
        </member>
        <member name="T:SharpAccessory.Imaging.ImageFormatResolver">
            <summary>Verwaltet eine Liste von unterstützten Bildformaten.</summary>
        </member>
        <member name="M:SharpAccessory.Imaging.ImageFormatResolver.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.Imaging.ImageFormatResolver.BrowseOpenImage">
            <summary>Zeigt den "Datei öffnen"-Dialog an und öffnet die ausgewählte Datei.</summary>
        </member>
        <member name="M:SharpAccessory.Imaging.ImageFormatResolver.GetImageFile(System.String)">
            <summary>Öffnet und liest das Bild mit der angegebenen Url.</summary>
        </member>
        <member name="M:SharpAccessory.Imaging.ImageFormatResolver.GetImageFormat(System.String)">
            <summary>Bestimmt das Bildformat das der angegebenen Url zugeordnet ist.</summary>
        </member>
        <member name="P:SharpAccessory.Imaging.ImageFormatResolver.Formats">
            <summary>Ruft die Liste der unterstützten Bildformate ab.</summary>
        </member>
        <member name="T:SharpAccessory.Imaging.ImageFormatInfo">
            <summary>Enthält Informationen zu einem Bildformat.</summary>
        </member>
        <member name="M:SharpAccessory.Imaging.ImageFormatInfo.#ctor(System.String,System.String,SharpAccessory.Imaging.ImageFileProvider)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="name">Gibt den Namen des Bildformats an.</param>
            <param name="extension">Gibt die Dateierweiterung an die dem Bildformat zugeordnet ist.</param>
            <param name="provider">Gibt die Methode an mit der das Bildformat gelesen werden kann.</param>
        </member>
        <member name="M:SharpAccessory.Imaging.ImageFormatInfo.ToString">
            <summary>Ruft den Namen des Bildformats ab.</summary>
        </member>
        <member name="P:SharpAccessory.Imaging.ImageFormatInfo.Extension">
            <summary>Ruft die Dateierweiterung ab die dem Bildformat zugeordnet ist.</summary>
        </member>
        <member name="P:SharpAccessory.Imaging.ImageFormatInfo.Name">
            <summary>Ruft den Namen des Bildformats ab.</summary>
        </member>
        <member name="P:SharpAccessory.Imaging.ImageFormatInfo.Provider">
            <summary>Ruft die Methode ab mit der das Bildformat gelesen werden kann.</summary>
        </member>
        <member name="T:SharpAccessory.Imaging.TIFF.ByteCollection">
            <summary>Verwaltet eine Liste von 8-bit Ganzzahlen ohne Vorzeichen.</summary>
        </member>
        <member name="T:SharpAccessory.Imaging.TIFF.ValueCollectionBase`1">
            <summary>Basis-Klasse für die Wert-Auflistungen.</summary>
        </member>
        <member name="M:SharpAccessory.Imaging.TIFF.ValueCollectionBase`1.#ctor(`0[])">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="values">Gibt die Werte an die in der Liste verwaltet werden.</param>
        </member>
        <member name="M:SharpAccessory.Imaging.TIFF.ValueCollectionBase`1.Sort(System.Collections.Generic.IComparer{`0})">
            <summary>Diese Methode ist für diese Klasse nicht zulässig.</summary>
            <param name="comparer">Vergleicht zwei Elemente.</param>
        </member>
        <member name="M:SharpAccessory.Imaging.TIFF.ValueCollectionBase`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
            <summary>Diese Methode ist für diese Klasse nicht zulässig.</summary>
            <param name="index">Der Index ab dem sortiert wird.</param>
            <param name="count">Die Anzahl der Elemente die sortiert werden.</param>
            <param name="comparer">Vergleicht zwei Elemente.</param>
        </member>
        <member name="M:SharpAccessory.Imaging.TIFF.ValueCollectionBase`1.Sort(System.Comparison{`0})">
            <summary>Diese Methode ist für diese Klasse nicht zulässig.</summary>
            <param name="comparison">Methode die zwei Elemente vergleicht.</param>
        </member>
        <member name="M:SharpAccessory.Imaging.TIFF.ByteCollection.#ctor(System.Byte[])">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="values">Gibt die Werte an die in der Liste verwaltet werden.</param>
        </member>
        <member name="T:SharpAccessory.Imaging.TIFF.StringCollection">
            <summary>Verwaltet eine Liste von Zeichenfolgen.</summary>
        </member>
        <member name="M:SharpAccessory.Imaging.TIFF.StringCollection.#ctor(System.String[])">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="values">Gibt die Werte an die in der Liste verwaltet werden.</param>
        </member>
        <member name="T:SharpAccessory.Imaging.TIFF.ShortCollection">
            <summary>Verwaltet eine Liste von 16-bit Ganzzahlen ohne Vorzeichen.</summary>
        </member>
        <member name="M:SharpAccessory.Imaging.TIFF.ShortCollection.#ctor(System.UInt16[])">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="values">Gibt die Werte an die in der Liste verwaltet werden.</param>
        </member>
        <member name="T:SharpAccessory.Imaging.TIFF.LongCollection">
            <summary>Verwaltet eine Liste von 32-bit Ganzzahlen ohne Vorzeichen.</summary>
        </member>
        <member name="M:SharpAccessory.Imaging.TIFF.LongCollection.#ctor(System.UInt32[])">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="values">Gibt die Werte an die in der Liste verwaltet werden.</param>
        </member>
        <member name="T:SharpAccessory.Imaging.TIFF.RationalCollection">
            <summary>Verwaltet eine Liste von Brüchen ohne Vorzeichen.</summary>
        </member>
        <member name="M:SharpAccessory.Imaging.TIFF.RationalCollection.#ctor(SharpAccessory.Imaging.TIFF.Rational[])">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="values">Gibt die Werte an die in der Liste verwaltet werden.</param>
        </member>
        <member name="T:SharpAccessory.Imaging.TIFF.SByteCollection">
            <summary>Verwaltet eine Liste von 8-bit Ganzzahlen mit Vorzeichen.</summary>
        </member>
        <member name="M:SharpAccessory.Imaging.TIFF.SByteCollection.#ctor(System.SByte[])">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="values">Gibt die Werte an die in der Liste verwaltet werden.</param>
        </member>
        <member name="T:SharpAccessory.Imaging.TIFF.SShortCollection">
            <summary>Verwaltet eine Liste von 16-bit Ganzzahlen mit Vorzeichen.</summary>
        </member>
        <member name="M:SharpAccessory.Imaging.TIFF.SShortCollection.#ctor(System.Int16[])">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="values">Gibt die Werte an die in der Liste verwaltet werden.</param>
        </member>
        <member name="T:SharpAccessory.Imaging.TIFF.SLongCollection">
            <summary>Verwaltet eine Liste von 32-bit Ganzzahlen mit Vorzeichen.</summary>
        </member>
        <member name="M:SharpAccessory.Imaging.TIFF.SLongCollection.#ctor(System.Int32[])">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="values">Gibt die Werte an die in der Liste verwaltet werden.</param>
        </member>
        <member name="T:SharpAccessory.Imaging.TIFF.SRationalCollection">
            <summary>Verwaltet eine Liste von Brüchen mit Vorzeichen.</summary>
        </member>
        <member name="M:SharpAccessory.Imaging.TIFF.SRationalCollection.#ctor(SharpAccessory.Imaging.TIFF.SRational[])">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="values">Gibt die Werte an die in der Liste verwaltet werden.</param>
        </member>
        <member name="T:SharpAccessory.Imaging.TIFF.FloatCollection">
            <summary>Verwaltet eine Liste von Gleitkommazahlen mit einfacher Genauigkeit.</summary>
        </member>
        <member name="M:SharpAccessory.Imaging.TIFF.FloatCollection.#ctor(System.Single[])">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="values">Gibt die Werte an die in der Liste verwaltet werden.</param>
        </member>
        <member name="T:SharpAccessory.Imaging.TIFF.DoubleCollection">
            <summary>Verwaltet eine Liste von Gleitkommazahlen mit einfacher Genauigkeit.</summary>
        </member>
        <member name="M:SharpAccessory.Imaging.TIFF.DoubleCollection.#ctor(System.Double[])">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="values">Gibt die Werte an die in der Liste verwaltet werden.</param>
        </member>
        <member name="T:SharpAccessory.Imaging.TIFF.Long8Collection">
            <summary>Verwaltet eine Liste von 64-bit Ganzzahlen ohne Vorzeichen.</summary>
        </member>
        <member name="M:SharpAccessory.Imaging.TIFF.Long8Collection.#ctor(System.UInt64[])">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="values">Gibt die Werte an die in der Liste verwaltet werden.</param>
        </member>
        <member name="T:SharpAccessory.Imaging.TIFF.SLong8Collection">
            <summary>Verwaltet eine Liste von 64-bit Ganzzahlen mit Vorzeichen.</summary>
        </member>
        <member name="M:SharpAccessory.Imaging.TIFF.SLong8Collection.#ctor(System.Int64[])">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="values">Gibt die Werte an die in der Liste verwaltet werden.</param>
        </member>
        <member name="T:SharpAccessory.Imaging.TIFF.FieldType">
            <summary>Listet die Datentypen einer TIFF-Datei auf.</summary>
        </member>
        <member name="F:SharpAccessory.Imaging.TIFF.FieldType.Byte">
            <summary>Gibt an, dass die Daten vom Typ 8-bit Ganzahl ohne Vorzeichen sind.</summary>
        </member>
        <member name="F:SharpAccessory.Imaging.TIFF.FieldType.String">
            <summary>Gibt an, dass die Daten vom Typ Zeichenfolge sind.</summary>
        </member>
        <member name="F:SharpAccessory.Imaging.TIFF.FieldType.Short">
            <summary>Gibt an, dass die Daten vom Typ 16-bit Ganzahl ohne Vorzeichen sind.</summary>
        </member>
        <member name="F:SharpAccessory.Imaging.TIFF.FieldType.Long">
            <summary>Gibt an, dass die Daten vom Typ 32-bit Ganzzahl ohne Vorzeichen sind.</summary>
        </member>
        <member name="F:SharpAccessory.Imaging.TIFF.FieldType.Rational">
            <summary>Gibt an, dass die Daten vom Typ Bruch ohne Vorzeichen sind.</summary>
        </member>
        <member name="F:SharpAccessory.Imaging.TIFF.FieldType.SByte">
            <summary>Gibt an, dass die Daten vom Typ 8-bit Ganzahl mit Vorzeichen sind.</summary>
        </member>
        <member name="F:SharpAccessory.Imaging.TIFF.FieldType.Undefined">
            <summary>Gibt an, dass die Daten vom Typ 8-bit undefiniert sind.</summary>
        </member>
        <member name="F:SharpAccessory.Imaging.TIFF.FieldType.SShort">
            <summary>Gibt an, dass die Daten vom Typ 16-bit Ganzahl mit Vorzeichen sind.</summary>
        </member>
        <member name="F:SharpAccessory.Imaging.TIFF.FieldType.SLong">
            <summary>Gibt an, dass die Daten vom Typ 32-bit Ganzzahl mit Vorzeichen sind.</summary>
        </member>
        <member name="F:SharpAccessory.Imaging.TIFF.FieldType.SRational">
            <summary>Gibt an, dass die Daten vom Typ Bruch mit Vorzeichen sind.</summary>
        </member>
        <member name="F:SharpAccessory.Imaging.TIFF.FieldType.Float">
            <summary>Gibt an, dass die Daten vom Typ Gleitkommazahl mit einfacher Genauigkeit sind.</summary>
        </member>
        <member name="F:SharpAccessory.Imaging.TIFF.FieldType.Double">
            <summary>Gibt an, dass die Daten vom Typ Gleitkommazahl mit doppelter Genauigkeit sind.</summary>
        </member>
        <member name="F:SharpAccessory.Imaging.TIFF.FieldType.Ifd">
            <summary>Gibt an, dass die Daten vom Typ 32-bit IFD-Offset sind.</summary>
        </member>
        <member name="F:SharpAccessory.Imaging.TIFF.FieldType.Long8">
            <summary>Gibt an, dass die Daten vom Typ 64-bit Ganzzahl ohne Vorzeichen sind.</summary>
        </member>
        <member name="F:SharpAccessory.Imaging.TIFF.FieldType.SLong8">
            <summary>Gibt an, dass die Daten vom Typ 64-bit Ganzzahl mit Vorzeichen sind.</summary>
        </member>
        <member name="F:SharpAccessory.Imaging.TIFF.FieldType.Ifd8">
            <summary>Gibt an, dass die Daten vom Typ 64-bit IFD-Offset sind.</summary>
        </member>
        <member name="T:SharpAccessory.Imaging.TIFF.IfdEntry">
            <summary>Repräsentiert ein IFD-Entry einer TIFF-Datei.</summary>
        </member>
        <member name="M:SharpAccessory.Imaging.TIFF.IfdEntry.FromByteValues(System.Int32,System.Byte[])">
            <summary>Erstellt eine neue Instanz mit den angegebenen Werten.</summary>
            <param name="tag">Gibt den Tag an.</param>
            <param name="values">Gibt die 8-bit Ganzzahlen ohne Vorzeichen an.</param>
        </member>
        <member name="M:SharpAccessory.Imaging.TIFF.IfdEntry.FromStringValues(System.Int32,System.String[])">
            <summary>Erstellt eine neue Instanz mit den angegebenen Werten.</summary>
            <param name="tag">Gibt den Tag an.</param>
            <param name="values">Gibt die Zeichenfolgen an.</param>
        </member>
        <member name="M:SharpAccessory.Imaging.TIFF.IfdEntry.FromShortValues(System.Int32,System.UInt16[])">
            <summary>Erstellt eine neue Instanz mit den angegebenen Werten.</summary>
            <param name="tag">Gibt den Tag an.</param>
            <param name="values">Gibt die 16-bit Ganzzahlen ohne Vorzeichen an.</param>
        </member>
        <member name="M:SharpAccessory.Imaging.TIFF.IfdEntry.FromLongValues(System.Int32,System.UInt32[])">
            <summary>Erstellt eine neue Instanz mit den angegebenen Werten.</summary>
            <param name="tag">Gibt den Tag an.</param>
            <param name="values">Gibt die 32-bit Ganzzahlen ohne Vorzeichen an.</param>
        </member>
        <member name="M:SharpAccessory.Imaging.TIFF.IfdEntry.FromRationalValues(System.Int32,SharpAccessory.Imaging.TIFF.Rational[])">
            <summary>Erstellt eine neue Instanz mit den angegebenen Werten.</summary>
            <param name="tag">Gibt den Tag an.</param>
            <param name="values">Gibt die Brüche ohne Vorzeichen an.</param>
        </member>
        <member name="M:SharpAccessory.Imaging.TIFF.IfdEntry.FromSByteValues(System.Int32,System.SByte[])">
            <summary>Erstellt eine neue Instanz mit den angegebenen Werten.</summary>
            <param name="tag">Gibt den Tag an.</param>
            <param name="values">Gibt die 8-bit Ganzzahlen mit Vorzeichen an.</param>
        </member>
        <member name="M:SharpAccessory.Imaging.TIFF.IfdEntry.FromUndefined(System.Int32,System.Byte[])">
            <summary>Erstellt eine neue Instanz mit den angegebenen Werten.</summary>
            <param name="tag">Gibt den Tag an.</param>
            <param name="values">Gibt die 8-bit Ganzzahlen an.</param>
        </member>
        <member name="M:SharpAccessory.Imaging.TIFF.IfdEntry.FromSShortValues(System.Int32,System.Int16[])">
            <summary>Erstellt eine neue Instanz mit den angegebenen Werten.</summary>
            <param name="tag">Gibt den Tag an.</param>
            <param name="values">Gibt die 16-bit Ganzzahlen mit Vorzeichen an.</param>
        </member>
        <member name="M:SharpAccessory.Imaging.TIFF.IfdEntry.FromSLongValues(System.Int32,System.Int32[])">
            <summary>Erstellt eine neue Instanz mit den angegebenen Werten.</summary>
            <param name="tag">Gibt den Tag an.</param>
            <param name="values">Gibt die 32-bit Ganzzahlen mit Vorzeichen an.</param>
        </member>
        <member name="M:SharpAccessory.Imaging.TIFF.IfdEntry.FromSRationalValues(System.Int32,SharpAccessory.Imaging.TIFF.SRational[])">
            <summary>Erstellt eine neue Instanz mit den angegebenen Werten.</summary>
            <param name="tag">Gibt den Tag an.</param>
            <param name="values">Gibt die Brüche mit Vorzeichen an.</param>
        </member>
        <member name="M:SharpAccessory.Imaging.TIFF.IfdEntry.FromFloatValues(System.Int32,System.Single[])">
            <summary>Erstellt eine neue Instanz mit den angegebenen Werten.</summary>
            <param name="tag">Gibt den Tag an.</param>
            <param name="values">Gibt die Gleitkommazahlen mit einfacher Genauigkeit an.</param>
        </member>
        <member name="M:SharpAccessory.Imaging.TIFF.IfdEntry.FromDoubleValues(System.Int32,System.Double[])">
            <summary>Erstellt eine neue Instanz mit den angegebenen Werten.</summary>
            <param name="tag">Gibt den Tag an.</param>
            <param name="values">Gibt die Gleitkommazahlen mit doppelter Genauigkeit an.</param>
        </member>
        <member name="M:SharpAccessory.Imaging.TIFF.IfdEntry.FromIfdValues(System.Int32,System.UInt32[])">
            <summary>Erstellt eine neue Instanz mit den angegebenen Werten.</summary>
            <param name="tag">Gibt den Tag an.</param>
            <param name="values">Gibt die 32-bit Offsets an.</param>
        </member>
        <member name="M:SharpAccessory.Imaging.TIFF.IfdEntry.FromLong8Values(System.Int32,System.UInt64[])">
            <summary>Erstellt eine neue Instanz mit den angegebenen Werten.</summary>
            <param name="tag">Gibt den Tag an.</param>
            <param name="values">Gibt die 64-bit Ganzzahlen ohne Vorzeichen an.</param>
        </member>
        <member name="M:SharpAccessory.Imaging.TIFF.IfdEntry.FromSLong8Values(System.Int32,System.Int64[])">
            <summary>Erstellt eine neue Instanz mit den angegebenen Werten.</summary>
            <param name="tag">Gibt den Tag an.</param>
            <param name="values">Gibt die 64-bit Ganzzahlen mit Vorzeichen an.</param>
        </member>
        <member name="M:SharpAccessory.Imaging.TIFF.IfdEntry.FromIfd8Values(System.Int32,System.UInt64[])">
            <summary>Erstellt eine neue Instanz mit den angegebenen Werten.</summary>
            <param name="tag">Gibt den Tag an.</param>
            <param name="values">Gibt die 64-bit Offsets an.</param>
        </member>
        <member name="P:SharpAccessory.Imaging.TIFF.IfdEntry.Tag">
            <summary>Ruft das Tag ab.</summary>
        </member>
        <member name="P:SharpAccessory.Imaging.TIFF.IfdEntry.Type">
            <summary>Ruft den Datentyp ab.</summary>
        </member>
        <member name="P:SharpAccessory.Imaging.TIFF.IfdEntry.ByteValues">
            <summary>Ruft die Auflistung der 8-bit Ganzzahlen ohne Vorzeichen ab.</summary>
        </member>
        <member name="P:SharpAccessory.Imaging.TIFF.IfdEntry.StringValues">
            <summary>Ruft die Auflistung der Zeichenfolgen ab.</summary>
        </member>
        <member name="P:SharpAccessory.Imaging.TIFF.IfdEntry.ShortValues">
            <summary>Ruft die Auflistung der 16-bit Ganzzahlen ohne Vorzeichen ab.</summary>
        </member>
        <member name="P:SharpAccessory.Imaging.TIFF.IfdEntry.LongValues">
            <summary>Ruft die Auflistung der 32-bit Ganzzahlen ohne Vorzeichen ab.</summary>
        </member>
        <member name="P:SharpAccessory.Imaging.TIFF.IfdEntry.RationalValues">
            <summary>Ruft die Auflistung der Brüche ohne Vorzeichen ab.</summary>
        </member>
        <member name="P:SharpAccessory.Imaging.TIFF.IfdEntry.SByteValues">
            <summary>Ruft die Auflistung der 8-bit Ganzzahlen mit Vorzeichen ab.</summary>
        </member>
        <member name="P:SharpAccessory.Imaging.TIFF.IfdEntry.SShortValues">
            <summary>Ruft die Auflistung der 16-bit Ganzzahlen mit Vorzeichen ab.</summary>
        </member>
        <member name="P:SharpAccessory.Imaging.TIFF.IfdEntry.SLongValues">
            <summary>Ruft die Auflistung der 32-bit Ganzzahlen mit Vorzeichen ab.</summary>
        </member>
        <member name="P:SharpAccessory.Imaging.TIFF.IfdEntry.SRationalValues">
            <summary>Ruft die Auflistung der Brüche mit Vorzeichen ab.</summary>
        </member>
        <member name="P:SharpAccessory.Imaging.TIFF.IfdEntry.FloatValues">
            <summary>Ruft die Auflistung der Gleitkommazahlen mit einfacher Genauigkeit ab.</summary>
        </member>
        <member name="P:SharpAccessory.Imaging.TIFF.IfdEntry.DoubleValues">
            <summary>Ruft die Auflistung der Gleitkommazahlen mit doppelter Genauigkeit ab.</summary>
        </member>
        <member name="P:SharpAccessory.Imaging.TIFF.IfdEntry.Long8Values">
            <summary>Ruft die Auflistung der 64-bit Ganzzahlen ohne Vorzeichen ab.</summary>
        </member>
        <member name="P:SharpAccessory.Imaging.TIFF.IfdEntry.SLong8Values">
            <summary>Ruft die Auflistung der 64-bit Ganzzahlen mit Vorzeichen ab.</summary>
        </member>
        <member name="T:SharpAccessory.Imaging.TIFF.IfdEntryCollection">
            <summary>Verwaltet eine Liste von IFD-Entries.</summary>
        </member>
        <member name="M:SharpAccessory.Imaging.TIFF.IfdEntryCollection.#ctor(SharpAccessory.Imaging.TIFF.IfdEntry[])">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="entries">Gibt die Elemente an die in der Liste verwaltet werden.</param>
        </member>
        <member name="M:SharpAccessory.Imaging.TIFF.IfdEntryCollection.Contains(System.Int32)">
            <summary>Überprüft ob das angegebene Element in der Auflistung enthalten ist.</summary>
            <param name="tag">Gibt das Tag des Elements an.</param>
        </member>
        <member name="M:SharpAccessory.Imaging.TIFF.IfdEntryCollection.GetEntryByTag(System.Int32)">
            <summary>Ruft das Element mit dem angegebenen Tag ab.</summary>
            <param name="tag">Gibt das Tag des Elements an.</param>
        </member>
        <member name="T:SharpAccessory.Imaging.TIFF.ImageFileDirectory">
            <summary>Repräsentiert ein ImageFileDirectory einer TIFF-Datei.</summary>
        </member>
        <member name="M:SharpAccessory.Imaging.TIFF.ImageFileDirectory.#ctor(SharpAccessory.Imaging.TIFF.TiffFile,SharpAccessory.Imaging.TIFF.ImageFileDirectory[],SharpAccessory.Imaging.TIFF.IfdEntry[])">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="file">Gibt die dazugehörige TIFF-Datei an.</param>
            <param name="directories">Gibt die Liste der untergeordneten IFDs an.</param>
            <param name="entries">Gibt die Liste der IFD-Entries an.</param>
        </member>
        <member name="P:SharpAccessory.Imaging.TIFF.ImageFileDirectory.Entries">
            <summary>Ruft die Liste der IFD-Entries ab.</summary>
        </member>
        <member name="P:SharpAccessory.Imaging.TIFF.ImageFileDirectory.Directories">
            <summary>Ruft die Liste der untergeordneten IFDs ab.</summary>
        </member>
        <member name="P:SharpAccessory.Imaging.TIFF.ImageFileDirectory.File">
            <summary>Ruft die dazugehörige TIFF-Datei ab.</summary>
        </member>
        <member name="T:SharpAccessory.Imaging.TIFF.ImageFileDirectoryCollection">
            <summary>Verwaltet eine Liste von ImageFileDirectories.</summary>
        </member>
        <member name="M:SharpAccessory.Imaging.TIFF.ImageFileDirectoryCollection.#ctor(SharpAccessory.Imaging.TIFF.ImageFileDirectory[])">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="directories">Gibt die Elemente an die in der Liste verwaltet werden.</param>
        </member>
        <member name="M:SharpAccessory.Imaging.TIFF.ImageFileDirectoryCollection.Sort(System.Collections.Generic.IComparer{SharpAccessory.Imaging.TIFF.ImageFileDirectory})">
            <summary>Diese Methode ist für diese Klasse nicht zulässig.</summary>
            <param name="comparer">Vergleicht zwei Elemente.</param>
        </member>
        <member name="M:SharpAccessory.Imaging.TIFF.ImageFileDirectoryCollection.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{SharpAccessory.Imaging.TIFF.ImageFileDirectory})">
            <summary>Diese Methode ist für diese Klasse nicht zulässig.</summary>
            <param name="index">Der Index ab dem sortiert wird.</param>
            <param name="count">Die Anzahl der Elemente die sortiert werden.</param>
            <param name="comparer">Vergleicht zwei Elemente.</param>
        </member>
        <member name="M:SharpAccessory.Imaging.TIFF.ImageFileDirectoryCollection.Sort(System.Comparison{SharpAccessory.Imaging.TIFF.ImageFileDirectory})">
            <summary>Diese Methode ist für diese Klasse nicht zulässig.</summary>
            <param name="comparison">Methode die zwei Elemente vergleicht.</param>
        </member>
        <member name="T:SharpAccessory.Imaging.TIFF.Rational">
            <summary>Repräsentiert einen Bruch ohne Vorzeichen.</summary>
        </member>
        <member name="M:SharpAccessory.Imaging.TIFF.Rational.#ctor(System.UInt32,System.UInt32)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="numerator">Gibt den Zähler des Bruchs an.</param>
            <param name="denominator">Gibt den Nenner des Bruchs an.</param>
        </member>
        <member name="M:SharpAccessory.Imaging.TIFF.Rational.ToString">
            <summary>Konvertiert diese Instanz in eine lesbare Zeichenfolge.</summary>
        </member>
        <member name="P:SharpAccessory.Imaging.TIFF.Rational.Numerator">
            <summary>Ruft den Zähler des Bruchs ab, oder legt diesen fest.</summary>
        </member>
        <member name="P:SharpAccessory.Imaging.TIFF.Rational.Denominator">
            <summary>Ruft den Nenner des Bruchs ab, oder legt diesen fest.</summary>
        </member>
        <member name="P:SharpAccessory.Imaging.TIFF.Rational.IsEmpty">
            <summary>Ruft einen Wert ab, der angibt, ob alle Werte auf 0 gesetzt sind.</summary>
        </member>
        <member name="P:SharpAccessory.Imaging.TIFF.Rational.Empty">
            <summary>Erzeugt eine neue Instanz mit allen Werten auf 0 gesetzt.</summary>
        </member>
        <member name="T:SharpAccessory.Imaging.TIFF.SRational">
            <summary>Repräsentiert einen Bruch mit Vorzeichen.</summary>
        </member>
        <member name="M:SharpAccessory.Imaging.TIFF.SRational.#ctor(System.Int32,System.Int32)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="numerator">Gibt den Zähler des Bruchs an.</param>
            <param name="denominator">Gibt den Nenner des Bruchs an.</param>
        </member>
        <member name="M:SharpAccessory.Imaging.TIFF.SRational.ToString">
            <summary>Konvertiert diese Instanz in eine lesbare Zeichenfolge.</summary>
        </member>
        <member name="P:SharpAccessory.Imaging.TIFF.SRational.Numerator">
            <summary>Ruft den Zähler des Bruchs ab, oder legt diesen fest.</summary>
        </member>
        <member name="P:SharpAccessory.Imaging.TIFF.SRational.Denominator">
            <summary>Ruft den Nenner des Bruchs ab, oder legt diesen fest.</summary>
        </member>
        <member name="P:SharpAccessory.Imaging.TIFF.SRational.IsEmpty">
            <summary>Ruft einen Wert ab, der angibt, ob alle Werte auf 0 gesetzt sind.</summary>
        </member>
        <member name="P:SharpAccessory.Imaging.TIFF.SRational.Empty">
            <summary>Erzeugt eine neue Instanz mit allen Werten auf 0 gesetzt.</summary>
        </member>
        <member name="T:SharpAccessory.Imaging.TIFF.TagNotFoundException">
            <summary>Exception die ausgelöst wird wenn ein TIFF-Tag nicht gefunden werden konnte.</summary>
        </member>
        <member name="M:SharpAccessory.Imaging.TIFF.TagNotFoundException.#ctor(System.Int32)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="tag">Gibt das Tag an das nicht gefunden werden konnte.</param>
        </member>
        <member name="M:SharpAccessory.Imaging.TIFF.TagNotFoundException.#ctor(System.String,System.Int32)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="message">Die Meldung, in der der Fehler beschrieben wird.</param>
            <param name="tag">Gibt das Tag an das nicht gefunden werden konnte.</param>
        </member>
        <member name="P:SharpAccessory.Imaging.TIFF.TagNotFoundException.Tag">
            <summary>Ruft das Tag ab das nicht gefunden werden konnte.</summary>
        </member>
        <member name="T:SharpAccessory.Imaging.TIFF.TiffException">
            <summary>Exception die ausgelöst wird wenn eine TIFF-Datei beschädigt ist oder das Format nicht 
            unterstützt wird.</summary>
        </member>
        <member name="M:SharpAccessory.Imaging.TIFF.TiffException.#ctor(System.Int32)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="code">Gibt den aufgetretenen Fehlercode an.</param>
        </member>
        <member name="M:SharpAccessory.Imaging.TIFF.TiffException.#ctor(System.String,System.Int32)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="message">Die Meldung, in der der Fehler beschrieben wird.</param>
            <param name="code">Gibt den aufgetretenen Fehlercode an.</param>
        </member>
        <member name="P:SharpAccessory.Imaging.TIFF.TiffException.Code">
            <summary>Ruft den aufgetretenen Fehlercode ab.</summary>
        </member>
        <member name="T:SharpAccessory.Imaging.TIFF.TiffFile">
            <summary>Öffnet und liest TIFF-Dateien.</summary>
        </member>
        <member name="M:SharpAccessory.Imaging.TIFF.TiffFile.Finalize">
            <summary>Gibt diese Instanz frei.</summary>
        </member>
        <member name="M:SharpAccessory.Imaging.TIFF.TiffFile.FromBuffer(System.Byte[])">
            <summary>Liest eine TIFF-Datei aus dem angegebenen Puffer.</summary>
            <param name="data">Der Puffer der die TIFF-Datei enthält.</param>
        </member>
        <member name="M:SharpAccessory.Imaging.TIFF.TiffFile.FromFile(System.String)">
            <summary>Liest eine TIFF-Datei aus der angegebenen Datei.</summary>
            <param name="filename">Gibt den Dateinamen der TIFF-Datei an.</param>
        </member>
        <member name="M:SharpAccessory.Imaging.TIFF.TiffFile.FromStream(System.IO.Stream)">
            <summary>Liest eine TIFF-Datei aus dem angegebenen Stream.</summary>
            <param name="stream">Der Stream der die TIFF-Datei enthält.</param>
        </member>
        <member name="M:SharpAccessory.Imaging.TIFF.TiffFile.Dispose">
            <summary>Gibt diese Instanz frei.</summary>
        </member>
        <member name="M:SharpAccessory.Imaging.TIFF.TiffFile.GetData(System.Int64,System.Int32)">
            <summary>Liest Daten aus der Datei.</summary>
            <param name="offset">Die Position an der mit dem Lesen begonnen wird.</param>
            <param name="count">Die Anzahl der Bytes die gelesen werden.</param>
        </member>
        <member name="P:SharpAccessory.Imaging.TIFF.TiffFile.Directories">
            <summary>Ruft die Liste der IFDs ab.</summary>
        </member>
        <member name="P:SharpAccessory.Imaging.TIFF.TiffFile.Stream">
            <summary>Ruft den zugrunde liegenden Stream ab.</summary>
        </member>
        <member name="P:SharpAccessory.Imaging.TIFF.TiffFile.IsBigTiff">
            <summary>Ruft ab, ob die TIFF-Datei im BigTIFF-Format gespeichert ist.</summary>
        </member>
        <member name="P:SharpAccessory.Imaging.TIFF.TiffFile.IsLittleEndian">
            <summary>Ruft ab, ob die TIFF-Datei im Little-Endian-Format gespeichert ist.</summary>
        </member>
        <member name="P:SharpAccessory.Imaging.TIFF.TiffFile.IsDisposed">
            <summary>Ruft einen Wert ab, der angibt, ob diese Instanz bereits freigegeben wurde.</summary>
        </member>
        <member name="T:SharpAccessory.Imaging.UnknownImageFormatException">
            <summary>Wird ausgelöst wenn eine Url keinem Bildformat zugeordnet werden konnte.</summary>
        </member>
        <member name="M:SharpAccessory.Imaging.UnknownImageFormatException.#ctor(System.String)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="url">Gibt die Url an die keinem Bildformat zugeordnet werden konnte.</param>
        </member>
        <member name="M:SharpAccessory.Imaging.UnknownImageFormatException.#ctor(System.String,System.String)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="message">Die Meldung, in der der Fehler beschrieben wird.</param>
            <param name="url">Gibt die Url an die keinem Bildformat zugeordnet werden konnte.</param>
        </member>
        <member name="P:SharpAccessory.Imaging.UnknownImageFormatException.Url">
            <summary>Ruft die Url ab die keinem Bildformat zugeordnet werden konnte.</summary>
        </member>
        <member name="T:SharpAccessory.IO.ContainerFile">
            <summary>Datei, die beliebige Dateien enthält.</summary>
        </member>
        <member name="M:SharpAccessory.IO.ContainerFile.Finalize">
            <summary>Gibt diese Instanz frei.</summary>
        </member>
        <member name="M:SharpAccessory.IO.ContainerFile.CreateNew(System.String)">
            <summary>Erstellt eine neue Container-Datei.</summary>
            <param name="filename">Gibt den Dateinamen der Container-Datei an.</param>
        </member>
        <member name="M:SharpAccessory.IO.ContainerFile.CreateNew(System.String,System.Int32)">
            <summary>Erstellt eine neue Container-Datei.</summary>
            <param name="filename">Gibt den Dateinamen der Container-Datei an.</param>
            <param name="chunkSize">Gibt die Größe der Datenblöcke an.</param>
        </member>
        <member name="M:SharpAccessory.IO.ContainerFile.Open(System.IO.Stream)">
            <summary>Öffnet eine vorhandene Container-Datei.</summary>
            <param name="stream">Der Stream der die Container-Datei enthält.</param>
        </member>
        <member name="M:SharpAccessory.IO.ContainerFile.Open(System.String)">
            <summary>Öffnet eine vorhandene Container-Datei.</summary>
            <param name="filename">Gibt den Dateinamen der Container-Datei an.</param>
        </member>
        <member name="M:SharpAccessory.IO.ContainerFile.Open(System.String,System.IO.FileAccess)">
            <summary>Öffnet eine vorhandene Container-Datei.</summary>
            <param name="filename">Gibt den Dateinamen der Container-Datei an.</param>
            <param name="mode">Gibt die Zugriffsart an.</param>
        </member>
        <member name="M:SharpAccessory.IO.ContainerFile.AddFile(System.String,System.Byte[])">
            <summary>Fügte eine neue Datei zum Container hinzu.</summary>
            <param name="name">Gibt den Namen der Datei an.</param>
            <param name="data">Enthält die Daten der Datei.</param>
        </member>
        <member name="M:SharpAccessory.IO.ContainerFile.ContainsFile(System.String)">
            <summary>Überprüft ob die angegebene Datei vorhanden ist.</summary>
            <param name="name">Gibt den Namen der Datei an.</param>
        </member>
        <member name="M:SharpAccessory.IO.ContainerFile.DeleteFile(System.String)">
            <summary>Entfernt die angegebene Datei.</summary>
            <param name="name">Gibt den Namen der Datei an.</param>
        </member>
        <member name="M:SharpAccessory.IO.ContainerFile.Dispose">
            <summary>Gibt diese Instanz frei.</summary>
        </member>
        <member name="M:SharpAccessory.IO.ContainerFile.GetData(System.String)">
            <summary>Ruft die Daten der angegebenen Datei ab.</summary>
            <param name="name">Gibt den Namen der Datei an.</param>
        </member>
        <member name="M:SharpAccessory.IO.ContainerFile.GetFiles">
            <summary>Ruft die Liste der enthaltenen Dateien ab.</summary>
        </member>
        <member name="P:SharpAccessory.IO.ContainerFile.LazyWrite">
            <summary>Ruft ab oder legt fest, ob Schreibvorgänge verzögert ausgeführt werden.</summary>
        </member>
        <member name="P:SharpAccessory.IO.ContainerFile.CanChange">
            <summary>Ruft einen Wert ab, der angibt, ob die Container-Datei geändert werden kann.</summary>
        </member>
        <member name="P:SharpAccessory.IO.ContainerFile.IsDisposed">
            <summary>Ruft einen Wert ab, der angibt, ob diese Instanz bereits freigegeben wurde.</summary>
        </member>
        <member name="T:SharpAccessory.IO.ContainerFile.FileInfo">
            <summary>Stellt die Eigenschaften einer Datei bereit.</summary>
        </member>
        <member name="M:SharpAccessory.IO.ContainerFile.FileInfo.#ctor(System.String,System.Int32)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="name">Gibt den Namen der Datei an.</param>
            <param name="length">Gibt die Länge der Datei an.</param>
        </member>
        <member name="P:SharpAccessory.IO.ContainerFile.FileInfo.Name">
            <summary>Ruft den Namen der Datei ab.</summary>
        </member>
        <member name="P:SharpAccessory.IO.ContainerFile.FileInfo.Length">
            <summary>Ruft die Länge der Datei ab.</summary>
        </member>
        <member name="T:SharpAccessory.IO.Io">
            <summary>Stellt Standard-IO-Methoden bereit.</summary>
        </member>
        <member name="M:SharpAccessory.IO.Io.Compress(System.Byte[])">
            <summary>Komprimiert die angegebenen Daten.</summary>
            <param name="data">Die Daten die komprimiert werden.</param>
        </member>
        <member name="M:SharpAccessory.IO.Io.Decompress(System.Byte[])">
            <summary>Dekomprimiert die angegebenen Daten.</summary>
            <param name="data">Die Daten die dekomprimiert werden.</param>
        </member>
        <member name="M:SharpAccessory.IO.Io.EndsWithPathSeparator(System.String)">
            <summary>Überprüft, ob der angegebene Pfad mit einem "/" oder "\" endet.</summary>
        </member>
        <member name="M:SharpAccessory.IO.Io.EnsureDirectoryExists(System.String)">
            <summary>Löst eine System.IO.DirectoryNotFoundException aus wenn das angegebene Verzeichnis nicht 
            existiert.</summary>
        </member>
        <member name="M:SharpAccessory.IO.Io.EnsureFileExists(System.String)">
            <summary>Löst eine System.IO.FileNotFoundException aus wenn die angegebene Datei nicht existiert. 
            </summary>
        </member>
        <member name="M:SharpAccessory.IO.Io.EnsureSufficientMemoryAvailable(System.Int64)">
            <summary>Löst eine System.OutOfMemoryException aus wenn zu wenig Speicher frei ist.</summary>
            <param name="bytesRequired">Die erforderliche Anzahl von Bytes.</param>
        </member>
        <member name="M:SharpAccessory.IO.Io.FileSizeToString(System.Int64)">
            <summary>Formatiert die angegebene Dateigröße in eine lesbare Zeichenfolge.</summary>
        </member>
        <member name="M:SharpAccessory.IO.Io.GetNameFromFilename(System.String)">
            <summary>Extrahiert den Namen ohne Erweiterung aus dem angegebenen Pfad.</summary>
        </member>
        <member name="M:SharpAccessory.IO.Io.IndexOfPathSeparator(System.String)">
            <summary>Gibt den Index des ersten "/" oder "\" in dem angegebenen Pfad zurück.</summary>
        </member>
        <member name="M:SharpAccessory.IO.Io.LastIndexOfPathSeparator(System.String)">
            <summary>Gibt den Index des letzten "/" oder "\" in dem angegebenen Pfad zurück.</summary>
        </member>
        <member name="M:SharpAccessory.IO.Io.MakeStringSafeForFilename(System.String,System.Char)">
            <summary>Ersetzt alle Zeichen die in einem Dateinamen nicht erlaubt sind.</summary>
            <param name="s">Gibt die Zeichenfolge an die überprüft wird.</param>
            <param name="substituteChar">Gibt das Ersatzzeichen an.</param>
        </member>
        <member name="M:SharpAccessory.IO.Io.ReplaceSpecialFolderNames(System.String)">
            <summary>Ersetzt Namen von Systemordnern (z.B. %ProgramFiles%) durch deren Pfad.</summary>
        </member>
        <member name="M:SharpAccessory.IO.Io.StartsWithPathSeparator(System.String)">
            <summary>Überprüft, ob der angegebene Pfad mit einem "/" oder "\" beginnt.</summary>
        </member>
        <member name="T:SharpAccessory.IO.KeyValueParser">
            <summary>Liest Name-Wert-Paare aus JSON-ähnlichen Zeichenfolgen.</summary>
        </member>
        <member name="M:SharpAccessory.IO.KeyValueParser.Parse(System.String)">
            <summary>Findet alle enthaltenen Name-Wert-Paare in der angegebenen Zeichenfolge.</summary>
            <param name="s">Die Zeichenfolge die geparst wird.</param>
        </member>
        <member name="T:SharpAccessory.IO.XmlFileBase">
            <summary>Basis-Klasse für XML-Dateien.</summary>
        </member>
        <member name="M:SharpAccessory.IO.XmlFileBase.CreateAttribute(System.String,System.String,System.Xml.XmlDocument,System.Xml.XmlNode)">
            <summary>Erzeugt ein neues Attribut.</summary>
            <param name="name">Gibt den Namen des Attributs an.</param>
            <param name="value">Gibt den Wert des Attributs an.</param>
            <param name="document">Gibt das übergeordnete XML-Dokument an.</param>
            <param name="parent">Gibt den übergeordneten Knoten an.</param>
        </member>
        <member name="M:SharpAccessory.IO.XmlFileBase.CreateNode(System.String,System.Xml.XmlDocument)">
            <summary>Erzeugt ein neuen Knoten auf der obersten Ebene eines XML-Dokuments.</summary>
            <param name="name">Gibt den Namen des Knoten an.</param>
            <param name="document">Gibt das übergeordnete XML-Dokument an.</param>
        </member>
        <member name="M:SharpAccessory.IO.XmlFileBase.CreateNode(System.String,System.Xml.XmlDocument,System.Xml.XmlNode)">
            <summary>Erzeugt ein neuen Knoten.</summary>
            <param name="name">Gibt den Namen des Knoten an.</param>
            <param name="document">Gibt das übergeordnete XML-Dokument an.</param>
            <param name="parent">Gibt den übergeordneten Knoten an.</param>
        </member>
        <member name="M:SharpAccessory.IO.XmlFileBase.CreateNode(System.String,System.String,System.Xml.XmlDocument,System.Xml.XmlNode)">
            <summary>Erzeugt ein neuen Knoten.</summary>
            <param name="name">Gibt den Namen des Knoten an.</param>
            <param name="value">Gibt den Wert des Knoten an.</param>
            <param name="document">Gibt das übergeordnete XML-Dokument an.</param>
            <param name="parent">Gibt den übergeordneten Knoten an.</param>
        </member>
        <member name="M:SharpAccessory.IO.XmlFileBase.ReadAttribute(System.String,System.Xml.XmlNode)">
            <summary>Liest den Wert eines Attributs.</summary>
            <param name="name">Gibt den Namen des Attributs an.</param>
            <param name="parent">Gibt den übergeordneten Knoten an.</param>
        </member>
        <member name="M:SharpAccessory.IO.XmlFileBase.ReadNode(System.String,System.Xml.XmlNode)">
            <summary>Liest den Wert eines Knoten.</summary>
            <param name="name">Gibt den Namen des Knoten an.</param>
            <param name="parent">Gibt den übergeordneten Knoten an.</param>
        </member>
        <member name="T:SharpAccessory.Math.Geometry">
            <summary>Stellt Standard-Methoden der Geometrie bereit.</summary>
        </member>
        <member name="M:SharpAccessory.Math.Geometry.GetAngle(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>Berechnet den Winkel der Linie AB zur X-Achse.</summary>
            <param name="A">Gibt die Koordinaten des Punktes A an.</param>
            <param name="B">Gibt die Koordinaten des Punktes B an.</param>
            <returns>Den Winkel im Uhrzeigersinn zur X-Achse im Bogenmaß mit -π≤α≤π.</returns>
        </member>
        <member name="M:SharpAccessory.Math.Geometry.GetAngle(System.Double,System.Double,System.Double,System.Double)">
            <summary>Berechnet den Winkel der Linie AB zur X-Achse.</summary>
            <param name="xa">Gibt die X-Koordinate des Punktes A an.</param>
            <param name="ya">Gibt die Y-Koordinate des Punktes A an.</param>
            <param name="xb">Gibt die X-Koordinate des Punktes B an.</param>
            <param name="yb">Gibt die Y-Koordinate des Punktes B an.</param>
            <returns>Den Winkel im Uhrzeigersinn zur X-Achse im Bogenmaß mit -π≤α≤π.</returns>
        </member>
        <member name="M:SharpAccessory.Math.Geometry.GetAngleBetween(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>Berechnet den Winkel zwischen den Linien AB und CD.</summary>
            <param name="A">Gibt die Koordinaten des Punktes A an.</param>
            <param name="B">Gibt die Koordinaten des Punktes B an.</param>
            <param name="C">Gibt die Koordinaten des Punktes C an.</param>
            <param name="D">Gibt die Koordinaten des Punktes D an.</param>
            <returns>Den Winkel im Bogenmaß mit 0≤α≤π.</returns>
        </member>
        <member name="M:SharpAccessory.Math.Geometry.GetAngleBetween(System.Double,System.Double)">
            <summary>Berechnet den Winkel zwischen den Linien AB und CD.</summary>
            <param name="angleAB">Gibt den Winkel der Linie AB im Bogenmaß an.</param>
            <param name="angleCD">Gibt den Winkel der Linie CD im Bogenmaß an.</param>
            <returns>Den Winkel im Bogenmaß mit 0≤α≤π.</returns>
        </member>
        <member name="M:SharpAccessory.Math.Geometry.GetDistance(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>Berechnet die euklidische Distanz zwischen den Punkten A und B.</summary>
            <param name="A">Gibt die Koordinaten des Punktes A an.</param>
            <param name="B">Gibt die Koordinaten des Punktes B an.</param>
        </member>
        <member name="M:SharpAccessory.Math.Geometry.GetDistance(System.Double,System.Double,System.Double,System.Double)">
            <summary>Berechnet die euklidische Distanz zwischen den Punkten A und B.</summary>
            <param name="xa">Gibt die X-Koordinate des Punktes A an.</param>
            <param name="ya">Gibt die Y-Koordinate des Punktes A an.</param>
            <param name="xb">Gibt die X-Koordinate des Punktes B an.</param>
            <param name="yb">Gibt die Y-Koordinate des Punktes B an.</param>
        </member>
        <member name="M:SharpAccessory.Math.Geometry.GetDistance(SharpAccessory.Math.Point3d,SharpAccessory.Math.Point3d)">
            <summary>Berechnet die euklidische Distanz zwischen den Punkten A und B.</summary>
            <param name="A">Gibt die Koordinaten des Punktes A an.</param>
            <param name="B">Gibt die Koordinaten des Punktes B an.</param>
        </member>
        <member name="M:SharpAccessory.Math.Geometry.GetDistance(SharpAccessory.Math.Point3dF,SharpAccessory.Math.Point3dF)">
            <summary>Berechnet die euklidische Distanz zwischen den Punkten A und B.</summary>
            <param name="A">Gibt die Koordinaten des Punktes A an.</param>
            <param name="B">Gibt die Koordinaten des Punktes B an.</param>
        </member>
        <member name="M:SharpAccessory.Math.Geometry.GetDistance(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Berechnet die euklidische Distanz zwischen den Punkten A und B.</summary>
            <param name="xa">Gibt die X-Koordinate des Punktes A an.</param>
            <param name="ya">Gibt die Y-Koordinate des Punktes A an.</param>
            <param name="za">Gibt die Z-Koordinate des Punktes A an.</param>
            <param name="xb">Gibt die X-Koordinate des Punktes B an.</param>
            <param name="yb">Gibt die Y-Koordinate des Punktes B an.</param>
            <param name="zb">Gibt die Z-Koordinate des Punktes B an.</param>
        </member>
        <member name="M:SharpAccessory.Math.Geometry.GetHeight(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>Berechnet die Höhe hc des Dreiecks ABC.</summary>
            <param name="A">Gibt die Koordinaten des Punktes A an.</param>
            <param name="B">Gibt die Koordinaten des Punktes B an.</param>
            <param name="C">Gibt die Koordinaten des Punktes C an.</param>
        </member>
        <member name="T:SharpAccessory.Math.Point3d">
            <summary>Repräsentiert einen Punkt im 3-dimensionalen Raum.</summary>
        </member>
        <member name="M:SharpAccessory.Math.Point3d.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="x">Gibt die X-Koordinate an.</param>
            <param name="y">Gibt die Y-Koordinate an.</param>
            <param name="z">Gibt die Z-Koordinate an.</param>
        </member>
        <member name="M:SharpAccessory.Math.Point3d.ToString">
            <summary>Konvertiert diese Instanz in eine lesbare Zeichenfolge.</summary>
        </member>
        <member name="P:SharpAccessory.Math.Point3d.X">
            <summary>Ruft die X-Koordinate ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.Math.Point3d.Y">
            <summary>Ruft die Y-Koordinate ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.Math.Point3d.Z">
            <summary>Ruft die Z-Koordinate ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.Math.Point3d.IsEmpty">
            <summary>Ruft einen Wert ab, der angibt, ob alle Werte auf 0 gesetzt sind.</summary>
        </member>
        <member name="P:SharpAccessory.Math.Point3d.Empty">
            <summary>Erzeugt eine neue Instanz mit allen Werten auf 0 gesetzt.</summary>
        </member>
        <member name="T:SharpAccessory.Math.Point3dF">
            <summary>Repräsentiert einen Punkt im 3-dimensionalen Raum.</summary>
        </member>
        <member name="M:SharpAccessory.Math.Point3dF.#ctor(System.Single,System.Single,System.Single)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="x">Gibt die X-Koordinate an.</param>
            <param name="y">Gibt die Y-Koordinate an.</param>
            <param name="z">Gibt die Z-Koordinate an.</param>
        </member>
        <member name="M:SharpAccessory.Math.Point3dF.ToString">
            <summary>Konvertiert diese Instanz in eine lesbare Zeichenfolge.</summary>
        </member>
        <member name="P:SharpAccessory.Math.Point3dF.X">
            <summary>Ruft die X-Koordinate ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.Math.Point3dF.Y">
            <summary>Ruft die Y-Koordinate ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.Math.Point3dF.Z">
            <summary>Ruft die Z-Koordinate ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.Math.Point3dF.IsEmpty">
            <summary>Ruft einen Wert ab, der angibt, ob alle Werte auf 0 gesetzt sind.</summary>
        </member>
        <member name="P:SharpAccessory.Math.Point3dF.Empty">
            <summary>Erzeugt eine neue Instanz mit allen Werten auf 0 gesetzt.</summary>
        </member>
        <member name="T:SharpAccessory.Math.Rectangle3d">
            <summary>Repräsentiert einen Bereich im 3-dimensionalen Raum.</summary>
        </member>
        <member name="M:SharpAccessory.Math.Rectangle3d.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="x">Gibt die X-Koordinate an.</param>
            <param name="y">Gibt die Y-Koordinate an.</param>
            <param name="z">Gibt die Z-Koordinate an.</param>
            <param name="width">Gibt die Breite an.</param>
            <param name="height">Gibt die Höhe an.</param>
            <param name="depth">Gibt die Tiefe an.</param>
        </member>
        <member name="M:SharpAccessory.Math.Rectangle3d.ToString">
            <summary>Konvertiert diese Instanz in eine lesbare Zeichenfolge.</summary>
        </member>
        <member name="P:SharpAccessory.Math.Rectangle3d.X">
            <summary>Ruft die X-Koordinate ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.Math.Rectangle3d.Y">
            <summary>Ruft die Y-Koordinate ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.Math.Rectangle3d.Z">
            <summary>Ruft die Z-Koordinate ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.Math.Rectangle3d.Width">
            <summary>Ruft die Breite ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.Math.Rectangle3d.Height">
            <summary>Ruft die Höhe ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.Math.Rectangle3d.Depth">
            <summary>Ruft die Tiefe ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.Math.Rectangle3d.IsEmpty">
            <summary>Ruft einen Wert ab, der angibt, ob alle Werte auf 0 gesetzt sind.</summary>
        </member>
        <member name="P:SharpAccessory.Math.Rectangle3d.Empty">
            <summary>Erzeugt eine neue Instanz mit allen Werten auf 0 gesetzt.</summary>
        </member>
        <member name="T:SharpAccessory.Math.Rectangle3dF">
            <summary>Repräsentiert einen Bereich im 3-dimensionalen Raum.</summary>
        </member>
        <member name="M:SharpAccessory.Math.Rectangle3dF.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="x">Gibt die X-Koordinate an.</param>
            <param name="y">Gibt die Y-Koordinate an.</param>
            <param name="z">Gibt die Z-Koordinate an.</param>
            <param name="width">Gibt die Breite an.</param>
            <param name="height">Gibt die Höhe an.</param>
            <param name="depth">Gibt die Tiefe an.</param>
        </member>
        <member name="M:SharpAccessory.Math.Rectangle3dF.ToString">
            <summary>Konvertiert diese Instanz in eine lesbare Zeichenfolge.</summary>
        </member>
        <member name="P:SharpAccessory.Math.Rectangle3dF.X">
            <summary>Ruft die X-Koordinate ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.Math.Rectangle3dF.Y">
            <summary>Ruft die Y-Koordinate ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.Math.Rectangle3dF.Z">
            <summary>Ruft die Z-Koordinate ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.Math.Rectangle3dF.Width">
            <summary>Ruft die Breite ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.Math.Rectangle3dF.Height">
            <summary>Ruft die Höhe ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.Math.Rectangle3dF.Depth">
            <summary>Ruft die Tiefe ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.Math.Rectangle3dF.IsEmpty">
            <summary>Ruft einen Wert ab, der angibt, ob alle Werte auf 0 gesetzt sind.</summary>
        </member>
        <member name="P:SharpAccessory.Math.Rectangle3dF.Empty">
            <summary>Erzeugt eine neue Instanz mit allen Werten auf 0 gesetzt.</summary>
        </member>
        <member name="T:SharpAccessory.Math.Size3d">
            <summary>Repräsentiert Abmessungen im 3-dimensionalen Raum.</summary>
        </member>
        <member name="M:SharpAccessory.Math.Size3d.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="width">Gibt die Breite an.</param>
            <param name="height">Gibt die Höhe an.</param>
            <param name="depth">Gibt die Tiefe an.</param>
        </member>
        <member name="M:SharpAccessory.Math.Size3d.ToString">
            <summary>Konvertiert diese Instanz in eine lesbare Zeichenfolge.</summary>
        </member>
        <member name="P:SharpAccessory.Math.Size3d.Width">
            <summary>Ruft die Breite ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.Math.Size3d.Height">
            <summary>Ruft die Höhe ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.Math.Size3d.Depth">
            <summary>Ruft die Tiefe ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.Math.Size3d.IsEmpty">
            <summary>Ruft einen Wert ab, der angibt, ob alle Werte auf 0 gesetzt sind.</summary>
        </member>
        <member name="P:SharpAccessory.Math.Size3d.Empty">
            <summary>Erzeugt eine neue Instanz mit allen Werten auf 0 gesetzt.</summary>
        </member>
        <member name="T:SharpAccessory.Math.Size3dF">
            <summary>Repräsentiert Abmessungen im 3-dimensionalen Raum.</summary>
        </member>
        <member name="M:SharpAccessory.Math.Size3dF.#ctor(System.Single,System.Single,System.Single)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="width">Gibt die Breite an.</param>
            <param name="height">Gibt die Höhe an.</param>
            <param name="depth">Gibt die Tiefe an.</param>
        </member>
        <member name="M:SharpAccessory.Math.Size3dF.ToString">
            <summary>Konvertiert diese Instanz in eine lesbare Zeichenfolge.</summary>
        </member>
        <member name="P:SharpAccessory.Math.Size3dF.Width">
            <summary>Ruft die Breite ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.Math.Size3dF.Height">
            <summary>Ruft die Höhe ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.Math.Size3dF.Depth">
            <summary>Ruft die Tiefe ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.Math.Size3dF.IsEmpty">
            <summary>Ruft einen Wert ab, der angibt, ob alle Werte auf 0 gesetzt sind.</summary>
        </member>
        <member name="P:SharpAccessory.Math.Size3dF.Empty">
            <summary>Erzeugt eine neue Instanz mit allen Werten auf 0 gesetzt.</summary>
        </member>
        <member name="T:SharpAccessory.Resources.EmbeddedResourceAttribute">
            <summary>Attribut für Enumerations-Werte die eingebettete Ressourcen repräsentieren.</summary>
        </member>
        <member name="M:SharpAccessory.Resources.EmbeddedResourceAttribute.#ctor(System.String)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="filename">Gibt den physikalischen Dateinamen der eingebetteten Ressource an.</param>
        </member>
        <member name="P:SharpAccessory.Resources.EmbeddedResourceAttribute.Filename">
            <summary>Gibt den physikalischen Dateinamen der eingebetteten Ressource an.</summary>
        </member>
        <member name="T:SharpAccessory.Resources.EmbeddedResourceLoader">
            <summary>Lädt eingebette Ressourcen aus einer Assembly.</summary>
        </member>
        <member name="M:SharpAccessory.Resources.EmbeddedResourceLoader.#ctor(System.Reflection.Assembly,System.String,System.Type)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="assembly">Gibt die Assembly an aus der Ressourcen geladen werden.</param>
            <param name="folder">Gibt den Pfad zu den Ressourcen an.</param>
            <param name="enumerationType">Gibt den Typ der Enumeration an, der für die Auflistung der 
            eingebetteten Ressourcen verwendet wird.</param>
        </member>
        <member name="M:SharpAccessory.Resources.EmbeddedResourceLoader.Load(System.Enum)">
            <summary>Lädt die angegebene Ressource als Byte-Array.</summary>
            <param name="resource">Gibt die Ressource an die geladen wird.</param>
        </member>
        <member name="M:SharpAccessory.Resources.EmbeddedResourceLoader.LoadAsCursor(System.Enum)">
            <summary>Lädt die angegebene Ressource als Cursor.</summary>
            <param name="resource">Gibt die Ressource an die geladen wird.</param>
        </member>
        <member name="M:SharpAccessory.Resources.EmbeddedResourceLoader.LoadAsImage(System.Enum)">
            <summary>Lädt die angegebene Ressource als Bitmap.</summary>
            <param name="resource">Gibt die Ressource an die geladen wird.</param>
        </member>
        <member name="M:SharpAccessory.Resources.EmbeddedResourceLoader.LoadAsIcon(System.Enum)">
            <summary>Lädt die angegebene Ressource als Icon.</summary>
            <param name="resource">Gibt die Ressource an die geladen wird.</param>
        </member>
        <member name="M:SharpAccessory.Resources.EmbeddedResourceLoader.LoadAsText(System.Enum)">
            <summary>Lädt die angegebene Ressource als Text.</summary>
            <param name="resource">Gibt die Ressource an die geladen wird.</param>
        </member>
        <member name="M:SharpAccessory.Resources.EmbeddedResourceLoader.LoadAsText(System.Enum,System.Text.Encoding)">
            <summary>Lädt die angegebene Ressource als Text.</summary>
            <param name="resource">Gibt die Ressource an die geladen wird.</param>
            <param name="encoding">Gibt die Zeichencodierung an.</param>
        </member>
        <member name="M:SharpAccessory.Resources.EmbeddedResourceLoader.LoadAsXmlDoc(System.Enum)">
            <summary>Lädt die angegebene Ressource als XML-Dokument.</summary>
            <param name="resource">Gibt die Ressource an die geladen wird.</param>
        </member>
        <member name="T:SharpAccessory.Resources.SharpAccessoryIcon">
            <summary>Listet die Icons aus dem #Accessory-Set auf.</summary>
        </member>
        <member name="F:SharpAccessory.Resources.SharpAccessoryIcon.Cancel">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.SharpAccessoryIcon.Chart_XY">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.SharpAccessoryIcon.Cursor">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.SharpAccessoryIcon.Freehand">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.SharpAccessoryIcon.Image_Save">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.SharpAccessoryIcon.Objects">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.SharpAccessoryIcon.Objects_Filled">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.SharpAccessoryIcon.Objects_Select">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.SharpAccessoryIcon.Ok">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.SharpAccessoryIcon.Select_Freehand">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.SharpAccessoryIcon.Sort_Ascending">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.SharpAccessoryIcon.Sort_Descending">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.SharpAccessoryIcon.Sort_No">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.SharpAccessoryIcon.Table">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.SharpAccessoryIcon.Table_Close">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.SharpAccessoryIcon.Table_New">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.SharpAccessoryIcon.Table_Open">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.SharpAccessoryIcon.Table_Save">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.SharpAccessoryIcon.ZStack">
            <summary />
        </member>
        <member name="T:SharpAccessory.Resources.SharpAccessoryIconSet">
            <summary>Bietet Zugriff auf die Icons aus dem #Accessory-Set.</summary>
        </member>
        <member name="M:SharpAccessory.Resources.SharpAccessoryIconSet.LoadIcon(SharpAccessory.Resources.SharpAccessoryIcon)">
            <summary>Lädt das angegebene Icon.</summary>
        </member>
        <member name="T:SharpAccessory.Resources.TangoIcon">
            <summary>Listet die Icons aus dem Tango-Set auf.</summary>
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Accessories_Calculator">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Accessories_Character_Map">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Accessories_Text_Editor">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Address_Book_New">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Application_Certificate">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Application_X_Executable">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Applications_Accessories">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Applications_Development">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Applications_Games">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Applications_Graphics">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Applications_Internet">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Applications_Multimedia">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Applications_Office">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Applications_Other">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Applications_System">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Appointment_New">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Audio_Card">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Audio_Input_Microphone">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Audio_Volume_High">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Audio_Volume_Low">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Audio_Volume_Medium">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Audio_Volume_Muted">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Audio_X_Generic">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Battery_Caution">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Battery">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Bookmark_New">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Camera_Photo">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Camera_Video">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Computer">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Contact_New">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Dialog_Error">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Dialog_Information">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Dialog_Warning">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Document_New">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Document_Open">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Document_Print_Preview">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Document_Print">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Document_Properties">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Document_Save_As">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Document_Save">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Drive_Harddisk">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Drive_Optical">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Drive_Removable_Media">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Edit_Clear">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Edit_Copy">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Edit_Cut">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Edit_Delete">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Edit_Find_Replace">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Edit_Find">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Edit_Paste">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Edit_Redo">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Edit_Select_All">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Edit_Undo">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Emblem_Favorite">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Emblem_Important">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Emblem_Photos">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Emblem_Readonly">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Emblem_Symbolic_Link">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Emblem_System">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Emblem_Unreadable">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Face_Angel">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Face_Crying">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Face_Devilish">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Face_Glasses">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Face_Grin">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Face_Kiss">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Face_Monkey">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Face_Plain">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Face_Sad">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Face_Smile_Big">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Face_Smile">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Face_Surprise">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Face_Wink">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Folder_Drag_Accept">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Folder_New">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Folder_Open">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Folder_Remote">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Folder_Saved_Search">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Folder_Visiting">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Folder">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Font_X_Generic">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Format_Indent_Less">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Format_Indent_More">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Format_Justify_Center">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Format_Justify_Fill">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Format_Justify_Left">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Format_Justify_Right">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Format_Text_Bold">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Format_Text_Italic">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Format_Text_Strikethrough">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Format_Text_Underline">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Go_Bottom">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Go_Down">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Go_First">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Go_Home">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Go_Jump">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Go_Last">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Go_Next">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Go_Previous">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Go_Top">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Go_Up">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Help_Browser">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Image_Loading">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Image_Missing">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Image_X_Generic">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Input_Gaming">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Input_Keyboard">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Input_Mouse">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Internet_Group_Chat">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Internet_Mail">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Internet_News_Reader">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Internet_Web_Browser">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.List_Add">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.List_Remove">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Mail_Attachment">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Mail_Forward">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Mail_Mark_Junk">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Mail_Mark_Not_Junk">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Mail_Message_New">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Mail_Reply_All">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Mail_Reply_Sender">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Mail_Send_Receive">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Media_Eject">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Media_Flash">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Media_Floppy">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Media_Optical">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Media_Playback_Pause">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Media_Playback_Start">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Media_Playback_Stop">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Media_Record">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Media_Seek_Backward">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Media_Seek_Forward">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Media_Skip_Backward">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Media_Skip_Forward">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Multimedia_Player">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Network_Error">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Network_Idle">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Network_Offline">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Network_Receive">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Network_Server">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Network_Transmit_Receive">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Network_Transmit">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Network_Wired">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Network_Wireless_Encrypted">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Network_Wireless">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Network_Workgroup">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Office_Calendar">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Package_X_Generic">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Preferences_Desktop_Accessibility">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Preferences_Desktop_Assistive_Technology">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Preferences_Desktop_Font">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Preferences_Desktop_Keyboard_Shortcuts">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Preferences_Desktop_Locale">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Preferences_Desktop_Multimedia">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Preferences_Desktop_Peripherals">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Preferences_Desktop_Remote_Desktop">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Preferences_Desktop_Screensaver">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Preferences_Desktop_Theme">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Preferences_Desktop_Wallpaper">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Preferences_Desktop">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Preferences_System_Network_Proxy">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Preferences_System_Session">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Preferences_System_Windows">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Preferences_System">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Printer_Error">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Printer">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Process_Stop">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Software_Update_Available">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Software_Update_Urgent">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Start_Here">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.System_File_Manager">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.System_Installer">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.System_Lock_Screen">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.System_Log_Out">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.System_Search">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.System_Shutdown">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.System_Software_Update">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.System_Users">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Tab_New">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Text_Html">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Text_X_Generic_Template">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Text_X_Generic">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Text_X_Script">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.User_Desktop">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.User_Home">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.User_Trash_Full">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.User_Trash">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Utilities_System_Monitor">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Utilities_Terminal">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Video_Display">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Video_X_Generic">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.View_Fullscreen">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.View_Refresh">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Weather_Clear_Night">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Weather_Clear">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Weather_Few_Clouds_Night">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Weather_Few_Clouds">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Weather_Overcast">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Weather_Severe_Alert">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Weather_Showers_Scattered">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Weather_Showers">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Weather_Snow">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Weather_Storm">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.Window_New">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.X_Office_Address_Book">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.X_Office_Calendar">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.X_Office_Document_Template">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.X_Office_Document">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.X_Office_Drawing_Template">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.X_Office_Drawing">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.X_Office_Presentation_Template">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.X_Office_Presentation">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.X_Office_Spreadsheet_Template">
            <summary />
        </member>
        <member name="F:SharpAccessory.Resources.TangoIcon.X_Office_Spreadsheet">
            <summary />
        </member>
        <member name="T:SharpAccessory.Resources.TangoIconSet">
            <summary>Bietet Zugriff auf die Icons aus dem Tango-Set.</summary>
        </member>
        <member name="M:SharpAccessory.Resources.TangoIconSet.LoadIcon(SharpAccessory.Resources.TangoIcon)">
            <summary>Lädt das angegebene Icon.</summary>
        </member>
        <member name="T:SharpAccessory.Threading.Parallel">
            <summary>Unterstützt parallele Schleifen.</summary>
        </member>
        <member name="M:SharpAccessory.Threading.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32})">
            <summary>Führt eine for-Schleife parallel aus.</summary>
            <param name="min">Gibt den inklusiven Start-Index der for-Schleife an.</param>
            <param name="max">Gibt den exklusiven End-Index der for-Schleife an.</param>
            <param name="body">Die Methode die einmal pro Iteration aufgerufen wird.</param>
        </member>
        <member name="M:SharpAccessory.Threading.Parallel.For(System.Int32,System.Int32,System.Int32,System.Action{System.Int32})">
            <summary>Führt eine for-Schleife parallel aus.</summary>
            <param name="min">Gibt den inklusiven Start-Index der for-Schleife an.</param>
            <param name="max">Gibt den exklusiven End-Index der for-Schleife an.</param>
            <param name="increment">Gibt den Wert an um den der Index erhöht wird.</param>
            <param name="body">Die Methode die einmal pro Iteration aufgerufen wird.</param>
        </member>
        <member name="M:SharpAccessory.Threading.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>Führt eine foreach-Schleife parallel aus.</summary>
            <param name="source">Gibt die Datenquelle an.</param>
            <param name="body">Die Methode die einmal pro Iteration aufgerufen wird.</param>
        </member>
        <member name="M:SharpAccessory.Threading.Parallel.ForEach``1(System.Collections.Generic.IEnumerator{``0},System.Action{``0})">
            <summary>Führt eine foreach-Schleife parallel aus.</summary>
            <param name="source">Gibt den Enumerator einer Datenquelle an.</param>
            <param name="body">Die Methode die einmal pro Iteration aufgerufen wird.</param>
        </member>
        <member name="P:SharpAccessory.Threading.Parallel.MaxParallelism">
            <summary>Ruft die maximale Anzahl der in einer Schleife verwendeten Threads ab, oder legt diese 
            fest.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.Dialogs.AgreementDialog">
            <summary>Dialog zur Anzeige einer Vereinbarung.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.Dialogs.Dialog">
            <summary>Basis-Klasse für Dialoge.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Dialogs.Dialog.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Dialogs.Dialog.CenterToScreen">
            <summary>Zentriert den Dialog auf dem aktuellen Bildschirm.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Dialogs.Dialog.Dispose">
            <summary>Gibt diese Instanz frei.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Dialogs.Dialog.EnsureVisible">
            <summary>Stellt sicher, dass der Dialog vollständig angezeigt wird.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Dialogs.Dialog.ShowDialog">
            <summary>Zeigt den Dialog modal an.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Dialogs.Dialog.OnClientSizeChanged(System.EventArgs)">
            <summary>Wird aufgerufen, wenn sich die Größe des Clientbereichs geändert hat.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Dialogs.Dialog.OnClosing(System.ComponentModel.CancelEventArgs)">
            <summary>Wird aufgerufen, wenn der Dialog geschlossen wird.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Dialogs.Dialog.OnSizeChanged(System.EventArgs)">
            <summary>Wird aufgerufen, wenn sich die Größe des Dialogs geändert hat.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Dialogs.Dialog.AddControl(System.Windows.Forms.Control)">
            <summary>Fügt das angegebene Steuerelement zum Clientbereich des Dialogs hinzu.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Dialogs.Dialog.AddControl(SharpAccessory.VisualComponents.BoxedControlBase)">
            <summary>Fügt das angegebene Steuerelement zum Clientbereich des Dialogs hinzu.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Dialogs.Dialog.PerformAutoScale">
            <summary>Führt eine Skalierung des Dialogs und der untergeordneten Steuerelementen aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Dialogs.Dialog.RemoveControl(System.Windows.Forms.Control)">
            <summary>Entfernt das angegebene Steuerelement aus dem Clientbereich des Dialogs.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Dialogs.Dialog.RemoveControl(SharpAccessory.VisualComponents.BoxedControlBase)">
            <summary>Entfernt das angegebene Steuerelement aus dem Clientbereich des Dialogs.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Dialogs.Dialog.BackgroundImage">
            <summary>Ruft das Hintergrundbild des Banners ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Dialogs.Dialog.Image">
            <summary>Ruft das Icon des Banners ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Dialogs.Dialog.ImageMode">
            <summary>Ruft die Einstellung zur Darstellung des Icons ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Dialogs.Dialog.ShowBanner">
            <summary>Ruft einen Wert ab, der angibt, ob das Banner angezeigt wird, oder legt diesen fest.
            </summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Dialogs.Dialog.Text">
            <summary>Ruft die Zeichenfolge ab, die in der Titelleiste des Dialogs angezeigt wird, oder legt 
            diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Dialogs.Dialog.IsDisposed">
            <summary>Ruft einen Wert ab, der angibt, ob diese Instanz bereits freigegeben wurde.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Dialogs.Dialog.BackColor">
            <summary>Ruft die Hintergrundfarbe des Clientbereichs ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Dialogs.Dialog.ClientSize">
            <summary>Ruft die Höhe und Breite des Clientbereichs ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Dialogs.Dialog.ControlBox">
            <summary>Ruft einen Wert ab, der angibt, ob auf der Titelleiste des Dialogs ein Systemmenüfeld 
            angezeigt wird, oder legt diesen fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Dialogs.Dialog.DialogResult">
            <summary>Ruft das Dialogergebnis ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Dialogs.Dialog.Location">
            <summary>Ruft die Position des Dialogs auf dem Bildschirm ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Dialogs.Dialog.MaximizeBox">
            <summary>Ruft einen Wert ab, der angibt, ob auf der Titelleiste des Dialogs die Schaltfläche 
            Maximieren angezeigt wird, oder legt diesen fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Dialogs.Dialog.MaximumSize">
            <summary>Ruft die Obergrenze für die Größe des Dialogs ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Dialogs.Dialog.MinimizeBox">
            <summary>Ruft einen Wert ab, der angibt, ob auf der Titelleiste des Dialogs die Schaltfläche 
            Minimieren angezeigt wird, oder legt diesen fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Dialogs.Dialog.MinimumSize">
            <summary>Ruft die Untergrenze für die Größe des Dialogs ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Dialogs.Dialog.Resizable">
            <summary>Ruft ab oder legt fest ob die Größe des Dialogs verändert werden kann.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Dialogs.Dialog.Size">
            <summary>Ruft die Größe des Dialogs ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Dialogs.Dialog.Visible">
            <summary>Ruft ab, ob der Dialog sichtbar ist.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Dialogs.AgreementDialog.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Dialogs.AgreementDialog.Dispose">
            <summary>Gibt diese Instanz frei.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Dialogs.AgreementDialog.OnClosing(System.ComponentModel.CancelEventArgs)">
            <summary>Wird aufgerufen, wenn der Dialog geschlossen wird.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Dialogs.AgreementDialog.AcceptText">
            <summary>Ruft die Beschriftung der "Zustimmen"-Schaltfläche ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Dialogs.AgreementDialog.Agreement">
            <summary>Ruft die Vereinbarung im Richtext-Format ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Dialogs.AgreementDialog.AllowDecline">
            <summary>Ruft ab oder legt fest, ob die Vereinbarung abgelehnt werden kann.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Dialogs.AgreementDialog.AllowRememberDecision">
            <summary>Ruft ab oder legt fest, ob die "Entscheidung merken"-Schaltfläche angezeigt wird.
            </summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Dialogs.AgreementDialog.DeclineText">
            <summary>Ruft die Beschriftung der "Ablehnen"-Schaltfläche ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Dialogs.AgreementDialog.RememberDecision">
            <summary>Ruft ab oder legt fest, ob die "Entscheidung merken"-Schaltfläche aktiviert ist.
            </summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Dialogs.AgreementDialog.RememberDecisionText">
            <summary>Ruft die Beschriftung der "Entscheidung merken"-Schaltfläche ab, oder legt diese fest.
            </summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Dialogs.AgreementDialog.Size">
            <summary>Ruft die Größe des Dialogs ab, oder legt diese fest.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.ToolStripProfessionalRendererEx">
            <summary>Erweitert System.Windows.Forms.ToolStripProfessionalRenderer.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ToolStripProfessionalRendererEx.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ToolStripProfessionalRendererEx.#ctor(System.Windows.Forms.ProfessionalColorTable)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ToolStripProfessionalRendererEx.OnRenderArrow(System.Windows.Forms.ToolStripArrowRenderEventArgs)">
            <summary>Passt die Farbe von Pfeilen an das dazugehörige Element an.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ToolStripProfessionalRendererEx.OnRenderButtonBackground(System.Windows.Forms.ToolStripItemRenderEventArgs)">
            <summary>Behebt den "Background"-Bug bei Schaltflächen auf einem Overflow.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ToolStripProfessionalRendererEx.OnRenderItemImage(System.Windows.Forms.ToolStripItemImageRenderEventArgs)">
            <summary>Überschreibt die Rendering-Methode für Icons die disabled sind.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.FolderBrowserBar">
            <summary>Steuerelement zur Anzeige eines Pfades mit Navigations-Möglichkeit.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.BoxedControl`1">
            <summary>Umhüllt Steuerelemente.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.BoxedControlBase">
            <summary>Basis-Klasse für BoxedControl.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.BoxedControlBase.#ctor(System.Windows.Forms.Control)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="innerControl">Gibt das innere Steuerelement an.</param>
        </member>
        <member name="P:SharpAccessory.VisualComponents.BoxedControlBase._InnerControl">
            <summary>Ruft das innere Steuerelement ab.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.BoxedControl`1.#ctor(`0)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="innerControl">Gibt das innere Steuerelement an.</param>
        </member>
        <member name="M:SharpAccessory.VisualComponents.BoxedControl`1.AddToParent(SharpAccessory.VisualComponents.BoxedControlBase)">
            <summary>Fügt dieses Steuerelement dem angegebenen Container hinzu.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.BoxedControl`1.AddToParent(System.Windows.Forms.Control)">
            <summary>Fügt dieses Steuerelement dem angegebenen Container hinzu.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.BoxedControl`1.Dispose">
            <summary>Gibt dieses Steuerelement frei.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.BoxedControl`1.Hide">
            <summary>Verbirgt das Steuerelement vor dem Benutzer.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.BoxedControl`1.PointToClient(System.Drawing.Point)">
            <summary>Rechnet die Koordinaten des angegebenen Bildschirmpunkts in Clientkoordinaten um.
            </summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.BoxedControl`1.PointToScreen(System.Drawing.Point)">
            <summary>Rechnet die Koordinaten des angegebenen Clientpunkts in Bildschirmkoordinaten um.
            </summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.BoxedControl`1.RectangleToClient(System.Drawing.Rectangle)">
            <summary>Rechnet die Koordinaten des angegebenen Bildschirmbereichs in Clientkoordinaten um.
            </summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.BoxedControl`1.RectangleToScreen(System.Drawing.Rectangle)">
            <summary>Rechnet die Koordinaten des angegebenen Clientbereichs in Bildschirmkoordinaten um.
            </summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.BoxedControl`1.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Legt die Begrenzungen des Steuerelements auf die angegebene Position und Größe fest.
            </summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.BoxedControl`1.Show">
            <summary>Zeigt dem Benutzer das Steuerelement an.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.BoxedControl`1.OnBackColorChanged(System.EventArgs)">
            <summary>Löst das BackColorChanged-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.BoxedControl`1.OnDisposed(System.EventArgs)">
            <summary>Löst das Disposed-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.BoxedControl`1.OnDockChanged(System.EventArgs)">
            <summary>Löst das DockChanged-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.BoxedControl`1.OnLocationChanged(System.EventArgs)">
            <summary>Löst das LocationChanged-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.BoxedControl`1.OnParentChanged(System.EventArgs)">
            <summary>Löst das ParentChanged-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.BoxedControl`1.OnSizeChanged(System.EventArgs)">
            <summary>Löst das SizeChanged-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.BoxedControl`1.OnVisibleChanged(System.EventArgs)">
            <summary>Löst das VisibleChanged-Ereignis aus.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.BoxedControl`1.Anchor">
            <summary>Ruft den System.Windows.Forms.AnchorStyle des Steuerelements ab, oder legt diesen fest.
            </summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.BoxedControl`1.BackColor">
            <summary>Ruft die Hintergrundfarbe des Steuerelements ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.BoxedControl`1.Dock">
            <summary>Ruft den System.Windows.Forms.DockStyle des Steuerelements ab, oder legt diesen fest.
            </summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.BoxedControl`1.Height">
            <summary>Ruft die Höhe des Steuerelements in Pixel ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.BoxedControl`1.Left">
            <summary>Ruft den Abstand zwischen dem linken Rand des Steuerelements und dem linken Rand des 
            Clientbereichs des übergeordneten Containers in Pixel ab, oder legt diesen fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.BoxedControl`1.Location">
            <summary>Ruft die Koordinaten der linken oberen Ecke des Steuerelements relativ zur linken oberen 
            Ecke des übergeordneten Containers ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.BoxedControl`1.Margin">
            <summary>Ruft den Zwischenraum zwischen Steuerelementen ab, oder legt diesen fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.BoxedControl`1.Parent">
            <summary>Ruft den übergeordneten Container des Steuerelements ab, oder legt diesen fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.BoxedControl`1.Size">
            <summary>Ruft die Höhe und Breite des Steuerelements in Pixel ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.BoxedControl`1.TabIndex">
            <summary>Ruft die Aktivierreihenfolge des Steuerelements in dessen Container ab, oder legt diese 
            fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.BoxedControl`1.Top">
            <summary>Ruft den Abstand zwischen dem oberen Rand des Steuerelements und dem oberen Rand des 
            Clientbereichs des übergeordneten Containers in Pixel ab, oder legt diesen fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.BoxedControl`1.Width">
            <summary>Ruft die Breite des Steuerelements in Pixel ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.BoxedControl`1.Visible">
            <summary>Ruft einen Wert ab, der angibt, ob das Steuerelement und alle übergeordneten 
            Steuerelemente angezeigt werden, oder legt diesen fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.BoxedControl`1.Bottom">
            <summary>Ruft den Abstand zwischen dem unteren Rand des Steuerelements und dem unteren Rand des 
            Clientbereichs des übergeordneten Containers in Pixel ab.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.BoxedControl`1.Bounds">
            <summary>Ruft die Position und Größe des Steuerelements in Pixel relativ zum übergeordneten 
            Container ab.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.BoxedControl`1.IsDisposed">
            <summary>Ruft einen Wert ab, der angibt, ob das Steuerelement freigegeben wurde.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.BoxedControl`1.Right">
            <summary>Ruft den Abstand zwischen dem rechten Rand des Steuerelements und dem rechten Rand des 
            Clientbereichs des übergeordneten Containers in Pixel ab.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.BoxedControl`1.InnerControl">
            <summary>Ruft das innere Steuerelement ab.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.BoxedControl`1.BackColorChanged">
            <summary>Wird ausgelöst, wenn sich der Wert der BackColor-Eigenschaft geändert hat.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.BoxedControl`1.Disposed">
            <summary>Wird ausgelöst, wenn das Steuerelement durch einen Aufruf von Dispose freigeben wird.
            </summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.BoxedControl`1.DockChanged">
            <summary>Wird ausgelöst, wenn sich der Wert der Dock-Eigenschaft geändert hat.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.BoxedControl`1.LocationChanged">
            <summary>Wird ausgelöst, wenn sich der Wert der Location-Eigenschaft geändert hat.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.BoxedControl`1.ParentChanged">
            <summary>Wird ausgelöst, wenn sich der Wert der Parent-Eigenschaft geändert hat.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.BoxedControl`1.SizeChanged">
            <summary>Wird ausgelöst, wenn sich der Wert der Size-Eigenschaft geändert hat.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.BoxedControl`1.VisibleChanged">
            <summary>Wird ausgelöst, wenn sich der Wert der Visible-Eigenschaft geändert hat.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.FolderBrowserBar.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.FolderBrowserBar.ShowTextBox">
            <summary>Blendet das Eingabefeld ein.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.FolderBrowserBar.HideTextBox(System.Boolean)">
            <summary>Blendet das Eingabefeld aus.</summary>
            <param name="cancel">Gibt an, ob die Eingabe verworfen wird.</param>
        </member>
        <member name="M:SharpAccessory.VisualComponents.FolderBrowserBar.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Legt die Begrenzungen des Steuerelements auf die angegebene Position und Größe fest. Die 
            Höhe des Steuerelements wird automatisch zugewiesen und kann nicht geändert werden.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.FolderBrowserBar.Dispose">
            <summary>Gibt diese Instanz frei.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.FolderBrowserBar.OnBackColorChanged(System.EventArgs)">
            <summary>Passt die Hintergrundfarbe der inneren Steuerelemente an.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.FolderBrowserBar.OnSizeChanged(System.EventArgs)">
            <summary>Passt die Position und Größe der inneren Steuerelemente an.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.FolderBrowserBar.OnVisibleChanged(System.EventArgs)">
            <summary>Passt die internen Komponenten an.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.FolderBrowserBar.BorderStyle">
            <summary>Ruft die Rahmenart des Steuerelements ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.FolderBrowserBar.Enabled">
            <summary>Ruft einen Wert ab, der angibt, ob das Steuerelement auf Benutzerinteraktionen reagieren 
            kann, oder legt diesen fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.FolderBrowserBar.Height">
            <summary>Ruft die Höhe des Steuerelements in Pixel ab. Die Höhe des Steuerelements wird 
            automatisch zugewiesen und kann nicht geändert werden.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.FolderBrowserBar.SelectedPath">
            <summary>Ruft den ausgewählten Pfad ab, oder legt diesen fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.FolderBrowserBar.IsTextBoxVisible">
            <summary>Ruft einen Wert ab, der angibt, ob das Eingabefeld sichtbar ist.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.FolderBrowserBar.SelectedPathChanged">
            <summary>Wird ausgelöst wenn sich der ausgewählte Pfad geändert hat.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.Banner">
            <summary>Steuerelement zur Anzeige eines Banners und eines Icons.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Banner.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Banner.BackColor">
            <summary>Ruft die Hintergrundfarbe des Steuerelements ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Banner.BackgroundImage">
            <summary>Ruft das Hintergrundbild ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Banner.GradientMode">
            <summary>Ruft die Richtung des Farbverlaufs ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Banner.Image">
            <summary>Ruft das Icon ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Banner.ImageMode">
            <summary>Ruft die Einstellung zur Darstellung des Icons ab, oder legt diese fest.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.BannerImageMode">
            <summary>Gibt die Darstellung von SharpAccessory.VisualComponents.Banner.Image an.</summary>
        </member>
        <member name="F:SharpAccessory.VisualComponents.BannerImageMode.None">
            <summary>Gibt an, dass kein Icon angezeigt wird.</summary>
        </member>
        <member name="F:SharpAccessory.VisualComponents.BannerImageMode.Left">
            <summary>Gibt an, dass das Icon nur auf der linken Seite angezeigt wird.</summary>
        </member>
        <member name="F:SharpAccessory.VisualComponents.BannerImageMode.Right">
            <summary>Gibt an, dass das Icon nur auf der rechten Seite angezeigt wird.</summary>
        </member>
        <member name="F:SharpAccessory.VisualComponents.BannerImageMode.Both">
            <summary>Gibt an, dass das Icon auf der linken und rechten Seite angezeigt wird.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.CheckBoxEx">
            <summary>Erweitert System.Windows.Forms.CheckBox.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.CheckBoxEx.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.CheckBoxEx.GetStyle(System.Windows.Forms.ControlStyles)">
            <summary>Ruft den Wert für das angegebene Steuerelement-Formatbit ab.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.CheckBoxEx.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)">
            <summary>Legt den Wert für das angegebene Steuerelement-Formatbit fest.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.CheckBoxEx.SetScaleChildren(System.Boolean)">
            <summary>Legt fest, ob untergeordnete Steuerelemente durch ScaleControl skaliert werden.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.CheckBoxEx.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
            <summary>Skaliert Position, Größe, Textabstand und Rand des Steuerelements.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.CheckBoxEx.IgnoreScaleControl">
            <summary>Ruft ab oder legt fest ob Aufrufe von ScaleControl ignoriert werden.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.CheckBoxEx.ScaleChildren">
            <summary>Ruft ab, ob untergeordnete Steuerelemente durch ScaleControl skaliert werden.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.ContextMenuStripEx">
            <summary>Erweitert System.Windows.Forms.ContextMenuStrip.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ContextMenuStripEx.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ContextMenuStripEx.FindItems(System.String)">
            <summary>Ruft die Liste aller enthaltenen Elemente mit dem angegebenen Namen ab.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.ControlCollection">
            <summary>Verwaltet eine Liste von untergeordneten Steuerelementen.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ControlCollection.#ctor(SharpAccessory.VisualComponents.BoxedControlBase)">
            <summary>Erzeugt eine neue Liste für das angegebene Steuerelement.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ControlCollection.#ctor(System.Windows.Forms.Control)">
            <summary>Erzeugt eine neue Liste für das angegebene Steuerelement.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ControlCollection.Add(System.Windows.Forms.Control)">
            <summary>Fügt das angegebene Steuerelement zur Liste hinzu.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ControlCollection.Add(SharpAccessory.VisualComponents.BoxedControlBase)">
            <summary>Fügt das angegebene Steuerelement zur Liste hinzu.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ControlCollection.Clear">
            <summary>Entfernt alle enthaltenen Steuerelemente aus der Liste.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ControlCollection.Contains(System.Windows.Forms.Control)">
            <summary>Überprüft ob das angegebene Steuerelement in der Liste vorhanden ist.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ControlCollection.Contains(SharpAccessory.VisualComponents.BoxedControlBase)">
            <summary>Überprüft ob das angegebene Steuerelement in der Liste vorhanden ist.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ControlCollection.Remove(System.Windows.Forms.Control)">
            <summary>Entfernt das angegebene Steuerelement aus der Liste.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ControlCollection.Remove(SharpAccessory.VisualComponents.BoxedControlBase)">
            <summary>Entfernt das angegebene Steuerelement aus der Liste.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ControlCollection.Count">
            <summary>Ruft die Anzahl der enthaltenen Steuerelemente ab.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.ControlEx">
            <summary>Erweitert System.Windows.Forms.Control.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ControlEx.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ControlEx.GetStyle(System.Windows.Forms.ControlStyles)">
            <summary>Ruft den Wert für das angegebene Steuerelement-Formatbit ab.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ControlEx.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)">
            <summary>Legt den Wert für das angegebene Steuerelement-Formatbit fest.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ControlEx.SetScaleChildren(System.Boolean)">
            <summary>Legt fest, ob untergeordnete Steuerelemente durch ScaleControl skaliert werden.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ControlEx.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
            <summary>Skaliert Position, Größe, Textabstand und Rand des Steuerelements.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ControlEx.IgnoreScaleControl">
            <summary>Ruft ab oder legt fest ob Aufrufe von ScaleControl ignoriert werden.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ControlEx.ScaleChildren">
            <summary>Ruft ab, ob untergeordnete Steuerelemente durch ScaleControl skaliert werden.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.ControlTitleBar">
            <summary>Steuerelement zur Anzeige eines Titels für interne Fenster.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ControlTitleBar.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ControlTitleBar.OnDisposed(System.EventArgs)">
            <summary>Gibt die internen Ressourcen frei.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ControlTitleBar.Font">
            <summary>Ruft den Font ab, mit dem der Titel gezeichnet wird, oder legt diesen fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ControlTitleBar.ForeColor">
            <summary>Ruft die Farbe ab, mit der der Titel gezeichnet wird, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ControlTitleBar.GradientColor">
            <summary>Ruft die Farbe ab, mit der der Farbverlauf beginnt, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ControlTitleBar.Text">
            <summary>Ruft den angezeigten Titel ab, oder legt diesen fest.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.ControlTitleBar.FontChanged">
            <summary>Wird ausgelöst wenn sich die Font-Eigenschaft geändert hat.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.ControlTitleBar.ForeColorChanged">
            <summary>Wird ausgelöst wenn sich die ForeColor-Eigenschaft geändert hat.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.ControlTitleBar.GradientColorChanged">
            <summary>Wird ausgelöst wenn sich die GradientColor-Eigenschaft geändert hat.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.ControlTitleBar.MouseClick">
            <summary>Wird ausgelöst wenn mit der Maus auf das Steuerelement geklickt wird.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.ControlTitleBar.MouseDoubleClick">
            <summary>Wird ausgelöst wenn mit der Maus doppelt auf das Steuerelement geklickt wird.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.ControlTitleBar.MouseDown">
            <summary>Wird ausgelöst wenn sich der Mauszeiger über dem Steuerelement befindet und eine 
            Maustaste gedrückt wird.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.ControlTitleBar.MouseEnter">
            <summary>Wird ausgelöst wenn der Mauszeiger in den Bereich des Steuerelements eintritt.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.ControlTitleBar.MouseLeave">
            <summary>Wird ausgelöst wenn der Mauszeiger den Bereich des Steuerelements verlässt.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.ControlTitleBar.MouseMove">
            <summary>Wird ausgelöst wenn der Mauszeiger über dem Steuerelement bewegt wird.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.ControlTitleBar.MouseUp">
            <summary>Wird ausgelöst wenn sich der Mauszeiger über dem Steuerelement befindet und eine 
            Maustaste losgelassen wird.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.ControlTitleBar.TextChanged">
            <summary>Wird ausgelöst wenn sich die Text-Eigenschaft geändert hat.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.Diagrams.XyBounds">
            <summary>Speichert die untere und obere Grenze eines XY-Datenbereichs.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Diagrams.XyBounds.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="x1">Gibt die untere Schranke der X-Achse an.</param>
            <param name="x2">Gibt die obere Schranke der X-Achse an.</param>
            <param name="y1">Gibt die untere Schranke der Y-Achse an.</param>
            <param name="y2">Gibt die obere Schranke der Y-Achse an.</param>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Diagrams.XyBounds.ToString">
            <summary>Konvertiert diese Instanz in eine lesbare Zeichenfolge.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Diagrams.XyBounds.X1">
            <summary>Ruft die untere Schranke der X-Achse ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Diagrams.XyBounds.X2">
            <summary>Ruft die obere Schranke der X-Achse ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Diagrams.XyBounds.Y1">
            <summary>Ruft die untere Schranke der Y-Achse ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Diagrams.XyBounds.Y2">
            <summary>Ruft die obere Schranke der Y-Achse ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Diagrams.XyBounds.IsEmpty">
            <summary>Ruft einen Wert ab, der angibt, ob alle Werte 0 sind.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Diagrams.XyBounds.Empty">
            <summary>Erzeugt eine neue Instanz mit allen Werten auf 0 gesetzt.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.Diagrams.XyDataPoint">
            <summary>Repräsentiert einen Datenpunkt mit einer X und Y-Koordinate.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Diagrams.XyDataPoint.#ctor(System.Single,System.Single)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="x">Gibt die X-Koordinate des Datenpunkts an.</param>
            <param name="y">Gibt die Y-Koordinate des Datenpunkts an.</param>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Diagrams.XyDataPoint.#ctor(System.Single,System.Single,System.Drawing.Color)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="x">Gibt die X-Koordinate des Datenpunkts an.</param>
            <param name="y">Gibt die Y-Koordinate des Datenpunkts an.</param>
            <param name="color">Gibt die Farbe des Datenpunkts an.</param>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Diagrams.XyDataPoint.#ctor(System.Single,System.Single,System.Drawing.Color,System.Object)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="x">Gibt die X-Koordinate des Datenpunkts an.</param>
            <param name="y">Gibt die Y-Koordinate des Datenpunkts an.</param>
            <param name="color">Gibt die Farbe des Datenpunkts an.</param>
            <param name="tag">Gibt das Objekt an, das weitere Daten enthält.</param>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Diagrams.XyDataPoint.ToString">
            <summary>Konvertiert diesen Datenpunkt in eine lesbare Zeichenfolge.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Diagrams.XyDataPoint.Color">
            <summary>Ruft die Farbe des Datenpunkts ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Diagrams.XyDataPoint.Tag">
            <summary>Ruft das Objekt ab, das weitere Daten enthält, oder legt dieses fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Diagrams.XyDataPoint.X">
            <summary>Ruft die X-Koordinate des Datenpunkts ab.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Diagrams.XyDataPoint.Y">
            <summary>Ruft die Y-Koordinate des Datenpunkts ab.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.Diagrams.XyDataPointCollection">
            <summary>Verwaltet eine Liste von XY-Datenpunkten.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Diagrams.XyDataPointCollection.#ctor(SharpAccessory.VisualComponents.Diagrams.XyDataPoint[])">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="dataPoints">Gibt die XY-Datenpunkte an die in dieser Liste verwaltet werden.</param>
        </member>
        <member name="T:SharpAccessory.VisualComponents.Diagrams.XyAxisLayout">
            <summary>Enthält die Layout-Informationen einer Achse eines XY-Diagramms.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Diagrams.XyAxisLayout.#ctor(System.Double,System.Double,System.Double,System.Int32)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="min">Gibt den kleinsten darstellbaren Wert an.</param>
            <param name="max">Gibt den größten darstellbaren Wert an.</param>
            <param name="tick">Gibt die Schrittweite der Skalenstriche an.</param>
            <param name="anchor">Gibt den Ankerpunkt der Beschriftung an.</param>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Diagrams.XyAxisLayout.ToString">
            <summary>Konvertiert diese Instanz in eine lesbare Zeichenfolge.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Diagrams.XyAxisLayout.Min">
            <summary>Ruft den kleinsten darstellbaren Wert ab, oder legt diesen fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Diagrams.XyAxisLayout.Max">
            <summary>Ruft den größten darstellbaren Wert ab, oder legt diesen fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Diagrams.XyAxisLayout.Tick">
            <summary>Ruft die Schrittweite der Skalenstriche ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Diagrams.XyAxisLayout.Anchor">
            <summary>Ruft den Ankerpunkt der Beschriftung ab, oder legt diesen fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Diagrams.XyAxisLayout.IsEmpty">
            <summary>Ruft einen Wert ab, der angibt, ob alle Werte 0 sind.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Diagrams.XyAxisLayout.Empty">
            <summary>Erzeugt eine neue Instanz mit allen Werten auf 0 gesetzt.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.Diagrams.XyDataSeries">
            <summary>Repräsentiert eine Datenreihe aus XY-Datenpunkten.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Diagrams.XyDataSeries.#ctor(SharpAccessory.VisualComponents.Diagrams.XyDataPoint[])">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="dataPoints">Gibt die XY-Datenpunkte der Datenreihe an.</param>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Diagrams.XyDataSeries.ToString">
            <summary>Ruft den Namen der Datenreihe ab.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Diagrams.XyDataSeries.DiamondRadius">
            <summary>Ruft den Radius der Rautesymbole ab, oder legt diesen fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Diagrams.XyDataSeries.GraphColor">
            <summary>Ruft die Farbe ab, mit der die Datenreihe als Kurve dargestellt wird, oder legt diese 
            fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Diagrams.XyDataSeries.GraphThickness">
            <summary>Ruft die Strichstärke ab, mit der die Datenreihe als Kurve dargestellt wird, oder legt 
            diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Diagrams.XyDataSeries.Name">
            <summary>Ruft den Namen der Datenreihe ab, oder legt diesen fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Diagrams.XyDataSeries.Style">
            <summary>Ruft den Stil der Datenreihe ab, oder legt diesen fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Diagrams.XyDataSeries.Tag">
            <summary>Ruft das Objekt ab, das weitere Daten enthält, oder legt dieses fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Diagrams.XyDataSeries.DataPoints">
            <summary>Ruft die Liste der Datenpunkte ab.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.Diagrams.XyDataSeriesCollection">
            <summary>Verwaltet eine Liste von XY-Datenreihen.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Diagrams.XyDataSeriesCollection.#ctor(SharpAccessory.VisualComponents.Diagrams.XyDataSeries[])">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="dataSeries">Gibt die XY-Datenreihen an die in dieser Liste verwaltet werden.</param>
        </member>
        <member name="T:SharpAccessory.VisualComponents.Diagrams.XyDiagram">
            <summary>Steuerelement das einen XY-Diagrammbereich anzeigt.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.Diagrams.XyDiagramBase">
            <summary>Basis-Klasse für XyDiagram.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Diagrams.XyDiagramBase.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Diagrams.XyDiagramBase.OnGotFocus(System.EventArgs)">
            <summary>Löst das GotFocus-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Diagrams.XyDiagramBase.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>Löst das KeyDown-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Diagrams.XyDiagramBase.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>Löst das KeyPress-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Diagrams.XyDiagramBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>Löst das KeyUp-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Diagrams.XyDiagramBase.OnLostFocus(System.EventArgs)">
            <summary>Löst das LostFocus-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Diagrams.XyDiagramBase.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
            <summary>Löst das MouseClick-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Diagrams.XyDiagramBase.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
            <summary>Löst das MouseDoubleClick-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Diagrams.XyDiagramBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>Löst das MouseDown-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Diagrams.XyDiagramBase.OnMouseEnter(System.EventArgs)">
            <summary>Löst das MouseEnter-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Diagrams.XyDiagramBase.OnMouseLeave(System.EventArgs)">
            <summary>Löst das MouseLeave-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Diagrams.XyDiagramBase.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>Löst das MouseMove-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Diagrams.XyDiagramBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>Löst das MouseUp-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Diagrams.XyDiagramBase.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>Löst das MouseWheel-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Diagrams.XyDiagramBase.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>Löst das Paint-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Diagrams.XyDiagramBase.OnPaintBuffer(System.Windows.Forms.PaintEventArgs)">
            <summary>Löst das PaintBuffer-Ereignis aus.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.Diagrams.XyDiagramBase.GotFocus">
            <summary>Wird ausgelöst wenn das Steuerelement den Eingabefokus erhält.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.Diagrams.XyDiagramBase.KeyDown">
            <summary>Wird ausgelöst wenn ein Taste gedrückt wird, während das Steuerelement den Fokus besitzt.
            </summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.Diagrams.XyDiagramBase.KeyPress">
            <summary>Wird ausgelöst wenn ein Taste gedrückt wurde, während das Steuerelement den Fokus 
            besitzt.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.Diagrams.XyDiagramBase.KeyUp">
            <summary>Wird ausgelöst wenn ein Taste losgelassen wird, während das Steuerelement den Fokus 
            besitzt.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.Diagrams.XyDiagramBase.LostFocus">
            <summary>Wird ausgelöst wenn das Steuerelement den Eingabefokus verliert.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.Diagrams.XyDiagramBase.MouseClick">
            <summary>Wird ausgelöst wenn mit der Maus auf das Steuerelement geklickt wird.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.Diagrams.XyDiagramBase.MouseDoubleClick">
            <summary>Wird ausgelöst wenn mit der Maus doppelt auf das Steuerelement geklickt wird.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.Diagrams.XyDiagramBase.MouseDown">
            <summary>Wird ausgelöst wenn sich der Mauszeiger über dem Steuerelement befindet und eine 
            Maustaste gedrückt wird.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.Diagrams.XyDiagramBase.MouseEnter">
            <summary>Wird ausgelöst wenn der Mauszeiger in den Bereich des Steuerelements eintritt.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.Diagrams.XyDiagramBase.MouseLeave">
            <summary>Wird ausgelöst wenn der Mauszeiger den Bereich des Steuerelements verlässt.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.Diagrams.XyDiagramBase.MouseMove">
            <summary>Wird ausgelöst wenn der Mauszeiger über dem Steuerelement bewegt wird.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.Diagrams.XyDiagramBase.MouseUp">
            <summary>Wird ausgelöst wenn sich der Mauszeiger über dem Steuerelement befindet und eine 
            Maustaste losgelassen wird.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.Diagrams.XyDiagramBase.MouseWheel">
            <summary>Wird ausgelöst wenn das Mausrad über dem Steuerelement bewegt wird.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.Diagrams.XyDiagramBase.Paint">
            <summary>Wird ausgelöst wenn das Steuerelement neu gezeichnet wird.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.Diagrams.XyDiagramBase.PaintBuffer">
            <summary>Wird ausgelöst, wenn der Rendering-Puffer gezeichnet wird.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Diagrams.XyDiagram.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Diagrams.XyDiagram.Focus">
            <summary>Setzt den Eingabefokus in das Steuerelement.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Diagrams.XyDiagram.Refresh">
            <summary>Erzwingt, dass das Steuerelement neu gezeichnet wird.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Diagrams.XyDiagram.RefreshBuffer">
            <summary>Erstellt den Rendering-Puffer neu und erzwingt das Neuzeichnen des Controls.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Diagrams.XyDiagram.OnSizeChanged(System.EventArgs)">
            <summary>Löst das SizeChanged-Ereignis aus.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Diagrams.XyDiagram.ContextMenuStrip">
            <summary>Ruft das zugeordnete Kontextmenü ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Diagrams.XyDiagram.Cursor">
            <summary>Ruft den Cursor ab, der angezeigt wird, wenn sich der Mauszeiger über dem Steuerelement 
            befindet, oder legt diesen fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Diagrams.XyDiagram.Focused">
            <summary>Ruft einen Wert ab, der angibt, ob das Steuerelement den Eingabefokus besitzt.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Diagrams.XyDiagram.Surface">
            <summary>Ruft den Diagrammbereich ab. Damit Änderung am Diagrammbereich oder den Datenpunkten 
            sichtbar werden muss der Rendering-Puffer mit RefreshBuffer() aktualisiert werden.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.Diagrams.XyDiagramSurface">
            <summary>Repräsentiert den Diagrammbereich eines XY-Diagramms.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Diagrams.XyDiagramSurface.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Diagrams.XyDiagramSurface.Clear">
            <summary>Entfernt alle Datenreihen aus dem Diagramm.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Diagrams.XyDiagramSurface.GetDataPointsAt(System.Drawing.Point)">
            <summary>Ruft die Liste der Datenpunkte an der angegebenen Client-Position ab.</summary>
            <param name="p">Enthält die Koordinaten einer Client-Position.</param>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Diagrams.XyDiagramSurface.GetDataPointsAt(System.Int32,System.Int32)">
            <summary>Ruft die Liste der Datenpunkte an der angegebenen Client-Position ab.</summary>
            <param name="x">Gibt die X-Koordinate einer Client-Position an.</param>
            <param name="y">Gibt die Y-Koordinate einer Client-Position an.</param>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Diagrams.XyDiagramSurface.PerformLayout">
            <summary>Erzwingt die Berechnung des Layouts.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Diagrams.XyDiagramSurface.PointToClient(SharpAccessory.VisualComponents.Diagrams.XyDataPoint)">
            <summary>Rechnet den angegebenen Datenpunkt in Client-Koordinaten um.</summary>
            <param name="p">Enthält die Koordinaten eines Datenpunktes.</param>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Diagrams.XyDiagramSurface.PointToClient(System.Drawing.PointF)">
            <summary>Rechnet den angegebenen Datenpunkt in Client-Koordinaten um.</summary>
            <param name="p">Enthält die Koordinaten eines Datenpunktes.</param>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Diagrams.XyDiagramSurface.PointToClient(System.Single,System.Single)">
            <summary>Rechnet den angegebenen Datenpunkt in Client-Koordinaten um.</summary>
            <param name="x">Gibt die X-Koordinate eines Datenpunktes an.</param>
            <param name="y">Gibt die Y-Koordinate eines Datenpunktes an.</param>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Diagrams.XyDiagramSurface.Render(System.Drawing.Graphics)">
            <summary>Rendert den Diagrammbereich in das angegebene System.Drawing.Graphics.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Diagrams.XyDiagramSurface.SetDataSeries(SharpAccessory.VisualComponents.Diagrams.XyDataSeries)">
            <summary>Legt die enthaltenen Datenreihen fest.</summary>
            <param name="dataSeries">Gibt eine XY-Datenreihe an.</param>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Diagrams.XyDiagramSurface.SetDataSeries(SharpAccessory.VisualComponents.Diagrams.XyDataSeries,SharpAccessory.VisualComponents.Diagrams.XyBounds)">
            <summary>Legt die enthaltenen Datenreihen fest.</summary>
            <param name="dataSeries">Gibt eine XY-Datenreihe an.</param>
            <param name="preferredBounds">Gibt die bevorzugten Extremwerte der Achsen an.</param>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Diagrams.XyDiagramSurface.SetDataSeries(SharpAccessory.VisualComponents.Diagrams.XyDataSeries[])">
            <summary>Legt die enthaltenen Datenreihen fest.</summary>
            <param name="dataSeries">Gibt die XY-Datenreihen an.</param>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Diagrams.XyDiagramSurface.SetDataSeries(SharpAccessory.VisualComponents.Diagrams.XyDataSeries[],SharpAccessory.VisualComponents.Diagrams.XyBounds)">
            <summary>Legt die enthaltenen Datenreihen fest.</summary>
            <param name="dataSeries">Gibt die XY-Datenreihen an.</param>
            <param name="preferredBounds">Gibt die bevorzugten Extremwerte der Achsen an.</param>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Diagrams.XyDiagramSurface.Font">
            <summary>Ruft die Schriftart der Achsen-Beschriftungen ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Diagrams.XyDiagramSurface.ForeColor">
            <summary>Ruft die Farbe der Achsen-Beschriftungen ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Diagrams.XyDiagramSurface.Size">
            <summary>Ruft die Größe des Diagrammbereichs ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Diagrams.XyDiagramSurface.TickColor">
            <summary>Ruft die Farbe der Skalenstriche ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Diagrams.XyDiagramSurface.DataSeries">
            <summary>Ruft die Liste der Datenreihen ab.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Diagrams.XyDiagramSurface.Layout">
            <summary>Ruft das aktuell verwendete Layout ab.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Diagrams.XyDiagramSurface.PreferredBounds">
            <summary>Ruft die bevorzugten Extremwerte der Achsen ab.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.Diagrams.XyDiagramSurfaceLayout">
            <summary>Berechnet das Layout für XY-Diagrammbereiche.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Diagrams.XyDiagramSurfaceLayout.#ctor(SharpAccessory.VisualComponents.Diagrams.XyDiagramSurface)">
            <summary>Berechnet und erstellt das Layout für den angegebenen Diagrammbereich.</summary>
            <param name="surface">Gibt den Diagrammbereich an für den das Layout berechnet wird.</param>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Diagrams.XyDiagramSurfaceLayout.ClientBounds">
            <summary>Ruft die Position und Größe des Client-Bereichs ab.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Diagrams.XyDiagramSurfaceLayout.FontSize">
            <summary>Ruft die gemessene Schriftgröße für die Ziffer 0 ab.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Diagrams.XyDiagramSurfaceLayout.TickSize">
            <summary>Ruft die Größe der Skalenstriche ab.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Diagrams.XyDiagramSurfaceLayout.XAxis">
            <summary>Ruft die Layout-Informationen der X-Achse ab.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Diagrams.XyDiagramSurfaceLayout.YAxis">
            <summary>Ruft die Layout-Informationen der Y-Achse ab.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Diagrams.XyDiagramSurfaceLayout.IsValid">
            <summary>Ruft einen Wert ab, der angibt, ob das berechnete Layout gültig ist.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.Diagrams.XyDiagramStyle">
            <summary>Listet die verfügbaren Stile für XY-Diagramme auf.</summary>
        </member>
        <member name="F:SharpAccessory.VisualComponents.Diagrams.XyDiagramStyle.Graph">
            <summary>Gibt an, dass die Datenpunkte als Kurve dargestellt werden.</summary>
        </member>
        <member name="F:SharpAccessory.VisualComponents.Diagrams.XyDiagramStyle.Histogram">
            <summary>Gibt an, dass die Datenpunkte als Histogramm dargestellt werden.</summary>
        </member>
        <member name="F:SharpAccessory.VisualComponents.Diagrams.XyDiagramStyle.Scatterplot">
            <summary>Gibt an, dass die Datenpunkte als Streudiagramm dargestellt werden.</summary>
        </member>
        <member name="F:SharpAccessory.VisualComponents.Diagrams.XyDiagramStyle.UserPaint">
            <summary>Gibt an, dass die Datenpunkte durch den Nutzer dargestellt werden.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.Dialogs.CredentialDialog">
            <summary>Dialog für die Eingabe von Nutzernamen und Passwort.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Dialogs.CredentialDialog.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Dialogs.CredentialDialog.Dispose">
            <summary>Gibt diese Instanz frei.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Dialogs.CredentialDialog.Username">
            <summary>Ruft den aktuell eingestellten Nutzernamen ab, oder legt diesen fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Dialogs.CredentialDialog.Password">
            <summary>Ruft das aktuell eingestellte Passwort ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Dialogs.CredentialDialog.Message">
            <summary>Ruft den angezeigten Meldungstext ab, oder legt diesen fest.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.Dialogs.DropDownDialog">
            <summary>Dialog zur Auswahl eines Elements aus einer DropDown-Liste.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Dialogs.DropDownDialog.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Dialogs.DropDownDialog.Dispose">
            <summary>Gibt diese Instanz frei.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Dialogs.DropDownDialog.Label">
            <summary>Ruft die Beschriftung der DropDown-Liste ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Dialogs.DropDownDialog.Message">
            <summary>Ruft den angezeigten Meldungstext ab, oder legt diesen fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Dialogs.DropDownDialog.SelectedIndex">
            <summary>Ruft den Index des ausgewählten Elements ab, oder legt diesen fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Dialogs.DropDownDialog.SelectedItem">
            <summary>Ruft das ausgewählte Element ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Dialogs.DropDownDialog.Items">
            <summary>Ruft die Liste der auswählbaren Elemente ab.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.Dialogs.EditKeyValuePairsDialog">
            <summary>Dialog zum Bearbeiten von Schlüssel-Wert-Paaren.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Dialogs.EditKeyValuePairsDialog.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Dialogs.EditKeyValuePairsDialog.Dispose">
            <summary>Gibt diese Instanz frei.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Dialogs.EditKeyValuePairsDialog.Items">
            <summary>Ruft die angezeigten Schlüssel-Wert-Paare ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Dialogs.EditKeyValuePairsDialog.NameColumnWidth">
            <summary>Ruft die Breite der Spalte "Name" ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Dialogs.EditKeyValuePairsDialog.ValueColumnWidth">
            <summary>Ruft die Breite der Spalte "Wert" ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Dialogs.EditKeyValuePairsDialog.Size">
            <summary>Ruft die Größe des Dialogs ab, oder legt diese fest.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.Dialogs.AboutDialog">
            <summary>Dialog zur Anzeige von Programm-Informationen.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Dialogs.AboutDialog.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Dialogs.AboutDialog.Dispose">
            <summary>Gibt diese Instanz frei.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Dialogs.AboutDialog.Logo">
            <summary>Ruft das Logo ab, oder legt dieses fest. Die optimale Größe ist 640x480 Pixel.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.Dialogs.ProgressDialog">
            <summary>Dialog zum Ausführen einer Hintergrundaufgabe mit Fortschritts-Anzeige.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Dialogs.ProgressDialog.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Dialogs.ProgressDialog.Dispose">
            <summary>Gibt diese Instanz frei.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Dialogs.ProgressDialog.ShowDialog">
            <summary>Zeigt den Dialog modal an.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Dialogs.ProgressDialog.OnClosing(System.ComponentModel.CancelEventArgs)">
            <summary>Bricht das Schließen des Dialogs ab, wenn der BackgroundTask ausgeführt wird.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Dialogs.ProgressDialog.AllowCancel">
            <summary>Ruft ab oder legt fest, ob die Schaltfläche Abbrechen aktiviert ist.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Dialogs.ProgressDialog.BackgroundTask">
            <summary>Ruft die Hintergrund-Methode ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Dialogs.ProgressDialog.Message">
            <summary>Ruft den angezeigten Meldungstext ab, oder legt diesen fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Dialogs.ProgressDialog.ProgressBarStyle">
            <summary>Ruft den Stil der Fortschrittsanzeige ab, oder legt diesen fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Dialogs.ProgressDialog.ProgressPercentage">
            <summary>Ruft den Fortschritt in Prozent ab, oder legt diesen fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Dialogs.ProgressDialog.IsCancellationPending">
            <summary>Ruft ab, ob der Vorgang durch den Benutzer abgebrochen wurde.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.Dialogs.ProgressDialog.CancelClick">
            <summary>Wird ausgelöst wenn der Benutzer auf die Schaltfläche Abbrechen klickt.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.Dialogs.StringInputDialog">
            <summary>Dialog zur Eingabe einer einzeiligen Zeichenfolge.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Dialogs.StringInputDialog.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Dialogs.StringInputDialog.Dispose">
            <summary>Gibt diese Instanz frei.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Dialogs.StringInputDialog.AutoCompleteSource">
            <summary>Ruft die Autovervollständigen-Quelle ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Dialogs.StringInputDialog.CharacterCasing">
            <summary>Ruft einen Wert ab, der angibt, ob die Groß/Kleinschreibung der Eingabe geändert wird, 
            oder legt diesen fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Dialogs.StringInputDialog.Input">
            <summary>Ruft die aktuelle Eingabe ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Dialogs.StringInputDialog.Label">
            <summary>Ruft die Beschriftung des Eingabefeldes ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Dialogs.StringInputDialog.MaxLength">
            <summary>Ruft die Obergrenze für die Länge der Eingabe ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Dialogs.StringInputDialog.Message">
            <summary>Ruft den angezeigten Meldungstext ab, oder legt diesen fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Dialogs.StringInputDialog.PasswordChar">
            <summary>Ruft das Zeichen ab mit dem die Eingabe maskiert wird, oder legt dieses fest.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.Dialogs.UnhandledExceptionDialog">
            <summary>Dialog zur Anzeige von nicht behandelten Ausnahmen.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Dialogs.UnhandledExceptionDialog.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Dialogs.UnhandledExceptionDialog.ShowDialog">
            <summary>Diese Methode ist für diese Klasse nicht relevant.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Dialogs.UnhandledExceptionDialog.ShowDialog(System.Exception)">
            <summary>Zeigt den Dialog modal an.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Dialogs.UnhandledExceptionDialog.Dispose">
            <summary>Gibt diese Instanz frei.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Dialogs.UnhandledExceptionDialog.ShowDialogShortcut(System.Exception)">
            <summary>Zeigt einen neuen Dialog an und gibt diesen abschließend wieder frei.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.DoubleBufferedControl">
            <summary>Erweitert ControlEx um einen Rendering-Puffer.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.DoubleBufferedControl.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.DoubleBufferedControl.RefreshBuffer">
            <summary>Erstellt den Rendering-Puffer neu und erzwingt das Neuzeichnen des Controls.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.DoubleBufferedControl.OnSizeChanged(System.EventArgs)">
            <summary>Löst das SizeChanged-Ereignis aus und aktualisiert den Rendering-Puffer.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.DoubleBufferedControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>Löst das Paint-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.DoubleBufferedControl.OnPaintBuffer(System.Windows.Forms.PaintEventArgs)">
            <summary>Löst das PaintBuffer-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.DoubleBufferedControl.Dispose(System.Boolean)">
            <summary>Gibt die internen Ressourcen frei.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.DoubleBufferedControl.PaintBuffer">
            <summary>Wird ausgelöst wenn der Rendering-Puffer neu gezeichnet wird.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.FlowLayoutPanelEx">
            <summary>Erweitert System.Windows.Forms.FlowLayoutPanel.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.FlowLayoutPanelEx.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.FlowLayoutPanelEx.GetStyle(System.Windows.Forms.ControlStyles)">
            <summary>Ruft den Wert für das angegebene Steuerelement-Formatbit ab.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.FlowLayoutPanelEx.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)">
            <summary>Legt den Wert für das angegebene Steuerelement-Formatbit fest.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.FlowLayoutPanelEx.SetScaleChildren(System.Boolean)">
            <summary>Legt fest, ob untergeordnete Steuerelemente durch ScaleControl skaliert werden.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.FlowLayoutPanelEx.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
            <summary>Skaliert Position, Größe, Textabstand und Rand des Steuerelements.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.FlowLayoutPanelEx.IgnoreScaleControl">
            <summary>Ruft ab oder legt fest ob Aufrufe von ScaleControl ignoriert werden.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.FlowLayoutPanelEx.ScaleChildren">
            <summary>Ruft ab, ob untergeordnete Steuerelemente durch ScaleControl skaliert werden.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.FormEx">
            <summary>Erweitert das System.Windows.Forms.Form.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.FormEx.CenterToScreen">
            <summary>Zentriert das Fenster auf dem aktuellen Bildschirm.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.HelpRequestedEventArgs">
            <summary>Stellt Daten für ein HelpRequested-Ereignis bereit.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.HelpRequestedEventArgs.#ctor(System.String)">
            <summary>Erstellt und initialsiert eine neue Instanz.</summary>
            <param name="issue">Gibt das angeforderte Hilfethema an.</param>
        </member>
        <member name="P:SharpAccessory.VisualComponents.HelpRequestedEventArgs.Issue">
            <summary>Ruft das angeforderte Hilfethema ab.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.HelpRequestedEventHandler">
            <summary>Methode die ein HelpRequested-Ereignis verarbeitet.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.HScrollBarEx">
            <summary>Erweitert System.Windows.Forms.HScrollBar.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.HScrollBarEx.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.HScrollBarEx.GetStyle(System.Windows.Forms.ControlStyles)">
            <summary>Ruft den Wert für das angegebene Steuerelement-Formatbit ab.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.HScrollBarEx.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)">
            <summary>Legt den Wert für das angegebene Steuerelement-Formatbit fest.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.HScrollBarEx.SetScaleChildren(System.Boolean)">
            <summary>Legt fest, ob untergeordnete Steuerelemente durch ScaleControl skaliert werden.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.HScrollBarEx.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
            <summary>Skaliert Position, Größe, Textabstand und Rand des Steuerelements.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.HScrollBarEx.IgnoreScaleControl">
            <summary>Ruft ab oder legt fest ob Aufrufe von ScaleControl ignoriert werden.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.HScrollBarEx.ScaleChildren">
            <summary>Ruft ab, ob untergeordnete Steuerelemente durch ScaleControl skaliert werden.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.HSeparator">
            <summary>Steuerelement, das eine horizontale Trennlinie rendert.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.HSeparator.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.ImageBox">
            <summary>Steuerelement zur Anzeige eines Bildes.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.ImageBoxBase">
            <summary>Basis-Klasse für ImageBox.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ImageBoxBase.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ImageBoxBase.OnClientSizeChanged(System.EventArgs)">
            <summary>Löst das ClientSizeChanged-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ImageBoxBase.OnCursorChanged(System.EventArgs)">
            <summary>Löst das CursorChanged-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ImageBoxBase.OnImageChanged(System.EventArgs)">
            <summary>Löst das ImageChanged-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ImageBoxBase.OnGotFocus(System.EventArgs)">
            <summary>Löst das GotFocus-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ImageBoxBase.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>Löst das KeyDown-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ImageBoxBase.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>Löst das KeyPress-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ImageBoxBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>Löst das KeyUp-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ImageBoxBase.OnLostFocus(System.EventArgs)">
            <summary>Löst das LostFocus-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ImageBoxBase.OnMouseClick(SharpAccessory.VisualComponents.ImageBoxMouseEventArgs)">
            <summary>Löst das MouseClick-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ImageBoxBase.OnMouseDoubleClick(SharpAccessory.VisualComponents.ImageBoxMouseEventArgs)">
            <summary>Löst das MouseDoubleClick-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ImageBoxBase.OnMouseDown(SharpAccessory.VisualComponents.ImageBoxMouseEventArgs)">
            <summary>Löst das MouseDown-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ImageBoxBase.OnMouseEnter(System.EventArgs)">
            <summary>Löst das MouseEnter-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ImageBoxBase.OnMouseLeave(System.EventArgs)">
            <summary>Löst das MouseLeave-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ImageBoxBase.OnMouseMove(SharpAccessory.VisualComponents.ImageBoxMouseEventArgs)">
            <summary>Löst das MouseMove-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ImageBoxBase.OnMouseUp(SharpAccessory.VisualComponents.ImageBoxMouseEventArgs)">
            <summary>Löst das MouseUp-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ImageBoxBase.OnMouseWheel(SharpAccessory.VisualComponents.ImageBoxMouseEventArgs)">
            <summary>Löst das MouseWheel-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ImageBoxBase.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>Löst das Paint-Ereignis aus.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.ImageBoxBase.ClientSizeChanged">
            <summary>Wird ausgelöst wenn sich die Größe des Clientbereichs geändert hat.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.ImageBoxBase.CursorChanged">
            <summary>Wird ausgelöst wenn sich der Cursor über dem Clientbereich geändert hat.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.ImageBoxBase.ImageChanged">
            <summary>Wird ausgelöst wenn sich der Image-Wert geändert hat.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.ImageBoxBase.GotFocus">
            <summary>Wird ausgelöst wenn das Steuerelement den Eingabefokus erhält.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.ImageBoxBase.KeyDown">
            <summary>Wird ausgelöst wenn ein Taste gedrückt wird, während das Steuerelement den Fokus besitzt.
            </summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.ImageBoxBase.KeyPress">
            <summary>Wird ausgelöst wenn ein Taste gedrückt wurde, während das Steuerelement den Fokus
            besitzt.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.ImageBoxBase.KeyUp">
            <summary>Wird ausgelöst wenn ein Taste losgelassen wird, während das Steuerelement den Fokus
            besitzt.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.ImageBoxBase.LostFocus">
            <summary>Wird ausgelöst wenn das Steuerelement den Eingabefokus verliert.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.ImageBoxBase.MouseClick">
            <summary>Wird ausgelöst wenn mit der Maus auf das Steuerelement geklickt wird.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.ImageBoxBase.MouseDoubleClick">
            <summary>Wird ausgelöst wenn mit der Maus doppelt auf das Steuerelement geklickt wird.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.ImageBoxBase.MouseDown">
            <summary>Wird ausgelöst wenn sich der Mauszeiger über dem Steuerelement befindet und eine
            Maustaste gedrückt wird.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.ImageBoxBase.MouseEnter">
            <summary>Wird ausgelöst wenn der Mauszeiger in den Bereich des Steuerelements eintritt.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.ImageBoxBase.MouseLeave">
            <summary>Wird ausgelöst wenn der Mauszeiger den Bereich des Steuerelements verlässt.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.ImageBoxBase.MouseMove">
            <summary>Wird ausgelöst wenn der Mauszeiger über dem Steuerelement bewegt wird.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.ImageBoxBase.MouseUp">
            <summary>Wird ausgelöst wenn sich der Mauszeiger über dem Steuerelement befindet und eine
            Maustaste losgelassen wird.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.ImageBoxBase.MouseWheel">
            <summary>Wird ausgelöst wenn das Mausrad über dem Steuerelement bewegt wird.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.ImageBoxBase.Paint">
            <summary>Wird ausgelöst wenn das Steuerelement neu gezeichnet wird.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ImageBox.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ImageBox.EndPan">
            <summary>Beendet das Verschieben des Ausschnitts mit der Maus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ImageBox.Focus">
            <summary>Setzt den Eingabefokus in das Steuerelement.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ImageBox.PointToImage(System.Drawing.Point)">
            <summary>Rechnet die angegebene Client-Position in das Koordinatensystem des angezeigten Bildes 
            um.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ImageBox.RectangleToImage(System.Drawing.Rectangle)">
            <summary>Rechnet den angegebenen Client-Bereich in das Koordinatensystem des angezeigten Bildes 
            um.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ImageBox.Refresh">
            <summary>Erzwingt, dass das Steuerelement neu gezeichnet wird.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ImageBox.BorderStyle">
            <summary>Ruft die Rahmenart des Steuerelements ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ImageBox.ClientSize">
            <summary>Ruft die Größe des Clientbereichs ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ImageBox.ContextMenuStrip">
            <summary>Ruft das zugeordnete Kontextmenü ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ImageBox.Cursor">
            <summary>Ruft den Cursor ab, der angezeigt wird, wenn sich der Mauszeiger über dem Steuerelement 
            befindet, oder legt diesen fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ImageBox.Image">
            <summary>Ruft das angezeigte Bild ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ImageBox.Focused">
            <summary>Ruft einen Wert ab, der angibt, ob das Steuerelement den Eingabefokus besitzt.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ImageBox.IsPanning">
            <summary>Ruft einen Wert ab, der angibt, ob der Benutzer den Ausschnitt mit der Maus verschiebt.
            </summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ImageBox.Navigation">
            <summary>Ruft die Navigations-Logik ab.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.ImageBoxMouseEventArgs">
            <summary>Stellt Daten für Maus-Ereignisse der ImageBox bereit.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ImageBoxMouseEventArgs.#ctor(System.Windows.Forms.MouseEventArgs)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ImageBoxMouseEventArgs.SuppressHitTest">
            <summary>Ruft ab oder legt fest, ob Hit-Tests unterdrückt werden.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ImageBoxMouseEventArgs.SuppressPan">
            <summary>Ruft ab oder legt fest, ob das Verschieben mit der Maus unterdrückt wird.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ImageBoxMouseEventArgs.SuppressZoom">
            <summary>Ruft ab oder legt fest, ob das Zoomen mit dem Mausrad unterdrückt wird.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.ImageBoxMouseEventHandler">
            <summary>Methode die Maus-Ereignisse der ImageBox verarbeitet.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.ImageBoxNavigator">
            <summary>Stellt die Navigation für die ImageBox bereit.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ImageBoxNavigator.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ImageBoxNavigator.Goto(System.Single)">
            <summary>Ändert die dargestellte Vergrößerung auf den angegebenen Wert.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ImageBoxNavigator.Goto(System.Single,System.Drawing.PointF)">
            <summary>Ändert die aktuelle Ansicht.</summary>
            <param name="zoom">Gibt die neue Vergrößerung an.</param>
            <param name="middle">Gibt die Koordinaten des neuen Mittelpunkts an.</param>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ImageBoxNavigator.ProcessKeys(System.Windows.Forms.Keys)">
            <summary>Vearbeitet die angegebene Tastenkombination.</summary>
            <returns>True, wenn ein Navigations-Vorgang zugeordnet werden konnte, sonst false.</returns>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ImageBoxNavigator.Reset">
            <summary>Setzt die Navigations-Logik zurück.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ImageBoxNavigator.ZoomIn">
            <summary>Erhöht die dargestellte Vergrößerung.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ImageBoxNavigator.ZoomIn(System.Drawing.PointF)">
            <summary>Erhöht die dargestellte Vergrößerung.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ImageBoxNavigator.ZoomOut">
            <summary>Verringert die dargestellte Vergrößerung.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ImageBoxNavigator.ZoomOut(System.Drawing.PointF)">
            <summary>Verringert die dargestellte Vergrößerung.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ImageBoxNavigator.ClientSize">
            <summary>Ruft die Größe des Anzeigebereichs ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ImageBoxNavigator.ImageSize">
            <summary>Ruft die Bildgröße ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ImageBoxNavigator.MaximumZoom">
            <summary>Ruft die höchste darstellbare Vergrößerung ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ImageBoxNavigator.ZoomInOutFactor">
            <summary>Ruft den Faktor für das Zoomen ab, oder legt diesen fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ImageBoxNavigator.DstRectangle">
            <summary>Ruft den Clientbereich ab, in dem der Bildausschnitt gerendert wird.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ImageBoxNavigator.SrcRectangle">
            <summary>Ruft den dargestellten Bildbereich ab.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ImageBoxNavigator.IsMaximumZoom">
            <summary>Ruft einen Wert ab, der angibt, ob momentan die höchste darstellbare Vergrößerung 
            angezeigt wird.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ImageBoxNavigator.IsMinimumZoom">
            <summary>Ruft einen Wert ab, der angibt, ob momentan die kleinste darstellbare Vergrößerung 
            angezeigt wird.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ImageBoxNavigator.MinimumZoom">
            <summary>Ruft die kleinste darstellbare Vergrößerung ab.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ImageBoxNavigator.Zoom">
            <summary>Ruft die momentan dargestellte Vergrößerung ab.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.ImageBoxNavigator.Changed">
            <summary>Wird ausgelöst wenn eine neue Ansicht berechnet wurde.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.ImagePopup">
            <summary>Popup zur Anzeige eines Bildes.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.PopupBase">
            <summary>Basis-Klasse für Popups.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.PopupBase.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.PopupBase.CenterToParent(System.Drawing.Rectangle)">
            <summary>Zentriert das Popup über einem übergeordneten Steuerelement.</summary>
            <param name="parentBounds">Gibt die Position und Größe des übergeordneten Steuerelements an.
            </param>
        </member>
        <member name="M:SharpAccessory.VisualComponents.PopupBase.CenterToScreen">
            <summary>Zentriert das Popup auf dem primären Screen.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.PopupBase.Dispose">
            <summary>Gibt diese Instanz frei.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.PopupBase.Hide">
            <summary>Verbirgt das Popup vor dem Benutzer.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.PopupBase.Refresh">
            <summary>Erzwingt, dass sich das Popup neu zeichnet.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.PopupBase.Show">
            <summary>Zeigt das Popup an dessen Position an.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.PopupBase.Show(System.Drawing.Point)">
            <summary>Zeigt das Popup an der angegeben Position an.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.PopupBase.OnDisposed(System.EventArgs)">
            <summary>Löst das SharpAccessory.VisualComponents.PopupBase.Disposed-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.PopupBase.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
            <summary>Löst das SharpAccessory.VisualComponents.PopupBase.MouseClick-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.PopupBase.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
            <summary>Löst das SharpAccessory.VisualComponents.PopupBase.MouseDoubleClick-Ereignis aus.
            </summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.PopupBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>Löst das SharpAccessory.VisualComponents.PopupBase.MouseDown-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.PopupBase.OnMouseEnter(System.EventArgs)">
            <summary>Löst das SharpAccessory.VisualComponents.PopupBase.MouseEnter-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.PopupBase.OnMouseLeave(System.EventArgs)">
            <summary>Löst das SharpAccessory.VisualComponents.PopupBase.MouseLeave-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.PopupBase.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>Löst das SharpAccessory.VisualComponents.PopupBase.MouseMove-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.PopupBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>Löst das SharpAccessory.VisualComponents.PopupBase.MouseUp-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.PopupBase.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>Löst das SharpAccessory.VisualComponents.PopupBase.Paint-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.PopupBase.OnSizeChanged(System.EventArgs)">
            <summary>Löst das SharpAccessory.VisualComponents.PopupBase.SizeChanged-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.PopupBase.OnVisibleChanged(System.EventArgs)">
            <summary>Löst das SharpAccessory.VisualComponents.PopupBase.VisibleChanged-Ereignis aus.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.PopupBase.AutoClose">
            <summary>Ruft einen Wert ab, der angibt, ob das Popup automatisch geschlossen wird, wenn es nicht
            mehr aktiviert ist, oder legt diesen fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.PopupBase.BackColor">
            <summary>Ruft die Hintergrundfarbe des Popups ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.PopupBase.Location">
            <summary>Ruft die Position des Popups ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.PopupBase.MaximumSize">
            <summary>Ruft die Obergrenze für die Größe des Popups ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.PopupBase.MinimumSize">
            <summary>Ruft die Untergrenze für die Größe des Popups ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.PopupBase.Opacity">
            <summary>Ruft die Durchlässigkeit (Opazität) des Popups ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.PopupBase.Size">
            <summary>Ruft die Höhe und Breite des Popups ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.PopupBase.Visible">
            <summary>Ruft einen Wert ab, der angibt, ob das Popup sichtbar ist, oder legt diesen fest.
            </summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.PopupBase.Bounds">
            <summary>Ruft die Position und Größe des Popups ab.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.PopupBase.IsDisposed">
            <summary>Ruft einen Wert ab, der angibt, ob diese Instanz bereits freigegeben wurde.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.PopupBase.IsMouseOver">
            <summary>Ruft einen Wert ab, der angibt, ob sich der Mauszeiger über dem Popup befindet.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.PopupBase.MaxMaximumSize">
            <summary>Ruft die Obergrenze für SharpAccessory.VisualComponents.PopupBase.MaximumSize ab.
            </summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.PopupBase.Disposed">
            <summary>Wird ausgelöst wenn das Popup freigegeben wird.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.PopupBase.MouseClick">
            <summary>Wird ausgelöst wenn mit der Maus auf das Popup geklickt wird.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.PopupBase.MouseDoubleClick">
            <summary>Wird ausgelöst wenn mit der Maus doppelt auf das Popup geklickt wird.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.PopupBase.MouseDown">
            <summary>Wird ausgelöst wenn sich der Mauszeiger über dem Popup befindet und eine Maustaste
            gedrückt wird.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.PopupBase.MouseEnter">
            <summary>Wird ausgelöst wenn der Mauszeiger in den Bereich des Popups eintritt.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.PopupBase.MouseLeave">
            <summary>Wird ausgelöst wenn der Mauszeiger den Bereich des Popups verlässt.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.PopupBase.MouseMove">
            <summary>Wird ausgelöst wenn der Mauszeiger über dem Popup bewegt wird.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.PopupBase.MouseUp">
            <summary>Wird ausgelöst wenn sich der Mauszeiger über dem Popup befindet und eine Maustaste
            losgelassen wird.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.PopupBase.Paint">
            <summary>Wird ausgelöst wenn das Popup neu gezeichnet wird.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.PopupBase.SizeChanged">
            <summary>Wird ausgelöst wenn sich der SharpAccessory.VisualComponents.PopupBase.Size-Wert
            geändert hat.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.PopupBase.VisibleChanged">
            <summary>Wird ausgelöst wenn sich der SharpAccessory.VisualComponents.PopupBase.Visible-Wert
            geändert hat.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ImagePopup.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ImagePopup.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>Rendert den Inhalt des Popups.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ImagePopup.Image">
            <summary>Ruft das Bild ab, das im Clientbereich des Popups angezeigt wird, oder legt dieses fest.
            </summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ImagePopup.MaximumSize">
            <summary>Ruft die Obergrenze für die Größe des Popups ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ImagePopup.MinimumSize">
            <summary>Ruft die Untergrenze für die Größe des Popups ab. Dieser Wert kann nicht verändert 
            werden.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ImagePopup.Size">
            <summary>Ruft die Größe des Popups ab. Diese Eigenschaft kann nicht direkt verändert werden 
            sondern wird intern automatisch zugewiesen.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.ComplexListBox`1">
            <summary>Basis-Klasse für Steuerelemente die eine komplexe Liste darstellen.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ComplexListBox`1.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ComplexListBox`1.OnDisposed(System.EventArgs)">
            <summary>Gibt die internen Komponenten frei.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ComplexListBox`1.OnItemAdded(SharpAccessory.VisualComponents.ComplexListBox{`0}.ItemEventArgs)">
            <summary>Wird aufgerufen wenn ein Element hinzugefügt wurde.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ComplexListBox`1.OnItemRemoved(SharpAccessory.VisualComponents.ComplexListBox{`0}.ItemEventArgs)">
            <summary>Wird aufgerufen wenn ein Element entfernt wurde.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ComplexListBox`1.CreateControl(`0)">
            <summary>Erstellt ein Steuerelement für das angegebene Element.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ComplexListBox`1.PerformLayout">
            <summary>Führt die Layout-Logik aus.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ComplexListBox`1.AutoSize">
            <summary>Ruft ab oder legt fest, ob die Größe automatisch festgelegt wird.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ComplexListBox`1.BorderStyle">
            <summary>Ruft die Rahmenart des Steuerelements ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ComplexListBox`1.Controls">
            <summary>Ruft die Liste der untergeordneten Steuerelemente ab.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ComplexListBox`1.Items">
            <summary>Ruft die Liste der angezeigten Elemente ab.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.ComplexListBox`1.ItemAdded">
            <summary>Wird ausgelöst wenn ein Element hinzugefügt wurde.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.ComplexListBox`1.ItemRemoved">
            <summary>Wird ausgelöst wenn ein Element entfernt wurde.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.ComplexListBox`1.ItemCollection`1">
            <summary>Verwaltet eine Liste von Elementen.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ComplexListBox`1.ItemCollection`1.#ctor(SharpAccessory.VisualComponents.ComplexListBox{`1})">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="parent">Gibt das übergeordnete Steuerelement an.</param>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ComplexListBox`1.ItemCollection`1.Add(`1)">
            <summary>Fügt das angegebene Element am Ende der Auflistung hinzu.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ComplexListBox`1.ItemCollection`1.AddRange(`1[])">
            <summary>Fügt die angegebenen Elemente am Ende der Auflistung hinzu.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ComplexListBox`1.ItemCollection`1.Clear">
            <summary>Entfernt alle Elemente aus der Auflistung.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ComplexListBox`1.ItemCollection`1.Insert(System.Int32,`1)">
            <summary>Fügt das angegebene Element an der angegebenen Position ein.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ComplexListBox`1.ItemCollection`1.Remove(`1)">
            <summary>Entfernt das angegebene Element aus der Auflistung.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ComplexListBox`1.ItemCollection`1.RemoveAt(System.Int32)">
            <summary>Entfernt das Element an der angegebenen Position aus der Auflistung.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ComplexListBox`1.ItemCollection`1.Sort(System.Collections.Generic.IComparer{`1})">
            <summary>Diese Methode ist für diese Klasse nicht relevant.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ComplexListBox`1.ItemCollection`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`1})">
            <summary>Diese Methode ist für diese Klasse nicht relevant.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ComplexListBox`1.ItemCollection`1.Sort(System.Comparison{`1})">
            <summary>Diese Methode ist für diese Klasse nicht relevant.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.ComplexListBox`1.ItemEditor">
            <summary>Basis-Klasse für die Editoren der Elemente.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ComplexListBox`1.ItemEditor.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.ComplexListBox`1.ItemEditorCollection">
            <summary>Verwaltet eine Liste von Editoren.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ComplexListBox`1.ItemEditorCollection.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ComplexListBox`1.ItemEditorCollection.Contains(SharpAccessory.VisualComponents.ComplexListBox{`0}.ItemEditor)">
            <summary>Überprüft ob das angegebene Element in der Auflistung enthalten ist.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ComplexListBox`1.ItemEditorCollection.GetEnumerator">
            <summary>Gibt einen typspezifischen Enumerator zurück, der die Auflistung durchläuft.
            </summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ComplexListBox`1.ItemEditorCollection.IndexOf(SharpAccessory.VisualComponents.ComplexListBox{`0}.ItemEditor)">
            <summary>Sucht das angegebene Element in der Auflistung und gibt dessen Index zurück.
            </summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ComplexListBox`1.ItemEditorCollection.Insert(System.Int32,SharpAccessory.VisualComponents.ComplexListBox{`0}.ItemEditor)">
            <summary>Fügt das angegebene Element an der angegebenen Position ein.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ComplexListBox`1.ItemEditorCollection.RemoveAt(System.Int32)">
            <summary>Entfernt das Element an der angegebenen Position aus der Auflistung.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ComplexListBox`1.ItemEditorCollection.Item(System.Int32)">
            <summary>Ruft das Element an der angegebenen Position ab.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ComplexListBox`1.ItemEditorCollection.Count">
            <summary>Ruft ab, wieviele Elemente in der Auflistung enthalten sind.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.ComplexListBox`1.ItemEventArgs">
            <summary>Stellt Daten für ein Ereignis mit einem Element bereit.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ComplexListBox`1.ItemEventArgs.#ctor(System.Object)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="item">Gibt das betreffende Element an.</param>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ComplexListBox`1.ItemEventArgs.Item">
            <summary>Ruft das betreffende Element ab.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.ComplexListBox`1.ItemEventHandler">
            <summary>Methode die Ereignisse mit einem Element verarbeitet.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.ListViewItemSorter">
            <summary>Implementiert IComparer zum spaltenweisen Sortieren einer ListView.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ListViewItemSorter.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ListViewItemSorter.Compare(System.Object,System.Object)">
            <summary>Vergleicht zwei Elemente einer ListView.</summary>
            <param name="x">Das erste zu vergleichende Objekt.</param>
            <param name="y">Das zweite zu vergleichende Objekt.</param>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ListViewItemSorter.Column">
            <summary>Ruft den Index der Spalte ab, nach der sortiert wird, oder legt diesen fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ListViewItemSorter.SortOrder">
            <summary>Ruft die Sortierreihenfolge ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ListViewItemSorter.UseTags">
            <summary>Ruft ab oder legt fest, ob Tags zum Sortieren verwendet werden.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.MenuTile">
            <summary>Steuerelement das einen Menüpunkt als Kachel darstellt.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.MenuTile.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.MenuTile.Dispose">
            <summary>Gibt diese Instanz frei.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.MenuTile.ForeColor">
            <summary>Ruft die Vordergrundfarbe der Kachel ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.MenuTile.HFont">
            <summary>Ruft die Schriftart für den Haupttext ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.MenuTile.HText">
            <summary>Ruft den Haupttext ab, oder legt diesen fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.MenuTile.Image">
            <summary>Ruft das Icon ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.MenuTile.LFont">
            <summary>Ruft die Schriftart für den Nebentext ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.MenuTile.LText">
            <summary>Ruft den Nebentext ab, oder legt diesen fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.MenuTile.Tag">
            <summary>Ruft das Objekt ab, das weitere Daten enthält, oder legt dieses fest.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.MenuTile.Click">
            <summary>Wird ausgelöst wenn mit der Maus auf die Kachel geklickt wird.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.MenuTile.DoubleClick">
            <summary>Wird ausgelöst wenn mit der Maus auf die Kachel doppelgeklickt wird.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.ItemClickedEventArgs">
            <summary>Stellt Daten für ein ItemClicked-Ereignis bereit.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ItemClickedEventArgs.#ctor(System.String)">
            <summary>Erstellt und initialsiert eine neue Instanz.</summary>
            <param name="item">Gibt den Namen des Eintrags an, der geklickt wurde.</param>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ItemClickedEventArgs.#ctor(System.String,System.Boolean)">
            <summary>Erstellt und initialsiert eine neue Instanz.</summary>
            <param name="item">Gibt den Namen des Eintrags an, der geklickt wurde.</param>
            <param name="suppressAction">Gibt an, ob der Vorgang unterdrückt wird.</param>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ItemClickedEventArgs.SuppressAction">
            <summary>Ruft ab oder legt fest, ob der Vorgang unterdrückt wird.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ItemClickedEventArgs.Item">
            <summary>Ruft den Namen des Eintrags ab, der geklickt wurde.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.ItemClickedEventHandler">
            <summary>Methode die ein ItemClicked-Ereignis verarbeitet.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.LabelEx">
            <summary>Erweitert System.Windows.Forms.Label.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.LabelEx.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.LabelEx.GetStyle(System.Windows.Forms.ControlStyles)">
            <summary>Ruft den Wert für das angegebene Steuerelement-Formatbit ab.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.LabelEx.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)">
            <summary>Legt den Wert für das angegebene Steuerelement-Formatbit fest.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.LabelEx.SetScaleChildren(System.Boolean)">
            <summary>Legt fest, ob untergeordnete Steuerelemente durch ScaleControl skaliert werden.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.LabelEx.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
            <summary>Skaliert Position, Größe, Textabstand und Rand des Steuerelements.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.LabelEx.IgnoreScaleControl">
            <summary>Ruft ab oder legt fest ob Aufrufe von ScaleControl ignoriert werden.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.LabelEx.ScaleChildren">
            <summary>Ruft ab, ob untergeordnete Steuerelemente durch ScaleControl skaliert werden.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.ListBoxEx">
            <summary>Erweitert System.Windows.Forms.ListBox.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ListBoxEx.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ListBoxEx.GetStyle(System.Windows.Forms.ControlStyles)">
            <summary>Ruft den Wert für das angegebene Steuerelement-Formatbit ab.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ListBoxEx.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)">
            <summary>Legt den Wert für das angegebene Steuerelement-Formatbit fest.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ListBoxEx.SetScaleChildren(System.Boolean)">
            <summary>Legt fest, ob untergeordnete Steuerelemente durch ScaleControl skaliert werden.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ListBoxEx.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
            <summary>Skaliert Position, Größe, Textabstand und Rand des Steuerelements.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ListBoxEx.IgnoreScaleControl">
            <summary>Ruft ab oder legt fest ob Aufrufe von ScaleControl ignoriert werden.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ListBoxEx.ScaleChildren">
            <summary>Ruft ab, ob untergeordnete Steuerelemente durch ScaleControl skaliert werden.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.ListViewEx">
            <summary>Erweitert System.Windows.Forms.ListView.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ListViewEx.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ListViewEx.GetStyle(System.Windows.Forms.ControlStyles)">
            <summary>Ruft den Wert für das angegebene Steuerelement-Formatbit ab.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ListViewEx.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)">
            <summary>Legt den Wert für das angegebene Steuerelement-Formatbit fest.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ListViewEx.SetScaleChildren(System.Boolean)">
            <summary>Legt fest, ob untergeordnete Steuerelemente durch ScaleControl skaliert werden.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ListViewEx.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
            <summary>Skaliert Position, Größe, Textabstand und Rand des Steuerelements.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ListViewEx.IgnoreScaleControl">
            <summary>Ruft ab oder legt fest ob Aufrufe von ScaleControl ignoriert werden.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ListViewEx.ScaleChildren">
            <summary>Ruft ab, ob untergeordnete Steuerelemente durch ScaleControl skaliert werden.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.MB">
            <summary>Bietet eine Kurzform für den Aufruf der System.Windows.Forms.MessageBox.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.MB.Asterisk(System.String)">
            <summary>Zeigt eine Message-Box mit dem Asterisk-Icon und der angegebenen Meldung an.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.MB.Error(System.String)">
            <summary>Zeigt eine Message-Box mit dem Error-Icon und der angegebenen Meldung an.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.MB.Info(System.String)">
            <summary>Zeigt eine Message-Box mit dem Information-Icon und der angegebenen Meldung an.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.MB.Question(System.String)">
            <summary>Zeigt eine Message-Box mit dem Question-Icon und der angegebenen Meldung an.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.MB.Show(System.Object)">
            <summary>Zeigt eine Message-Box ohne Icon mit der angegebenen Meldung an.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.MB.Show(System.String)">
            <summary>Zeigt eine Message-Box ohne Icon mit der angegebenen Meldung an.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.MB.Warn(System.String)">
            <summary>Zeigt eine Message-Box mit dem Warning-Icon und der angegebenen Meldung an.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.MenuEntry">
            <summary>Kapselt einen System.Windows.Forms.ToolStripMenuItem.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.MenuEntry.#ctor(System.Windows.Forms.ToolStripMenuItem)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="menuItem">Gibt den inneren System.Windows.Forms.ToolStripMenuItem an.</param>
        </member>
        <member name="M:SharpAccessory.VisualComponents.MenuEntry.CreateSeparator">
            <summary>Erzeugt eine neue Trennlinie.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.MenuEntry.CreateSubEntry">
            <summary>Erzeugt einen neuen Menüeintrag im Untermenü.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.MenuEntry.Dispose">
            <summary>Gibt diese Instanz frei.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.MenuEntry.Checked">
            <summary>Ruft ab oder legt fest ob der Menüeintrag dauerhaft gedrückt ist.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.MenuEntry.Enabled">
            <summary>Ruft ab oder legt fest ob der Menüeintrag ausgewählt werden kann.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.MenuEntry.ShortcutKeyDisplayString">
            <summary>Ruft den Text der Tastenkombination ab, oder legt diesen fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.MenuEntry.ShortcutKeys">
            <summary>Ruft die Tastenkombination des Menüeintrags ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.MenuEntry.Tag">
            <summary>Ruft das Objekt ab, das weitere Daten enthält, oder legt dieses fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.MenuEntry.Text">
            <summary>Ruft den Text des Menüeintrags ab, oder legt diesen fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.MenuEntry.Visible">
            <summary>Ruft die Sichtbarkeit des Menüeintrags ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.MenuEntry.IsDisposed">
            <summary>Ruft einen Wert ab, der angibt, ob diese Instanz bereits freigegeben wurde.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.MenuEntry.Click">
            <summary>Wird ausgelöst wenn auf den Menüeintrag geklickt wird.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.MenuSeparator">
            <summary>Kapselt einen System.Windows.Forms.ToolStripSeparator.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.MenuSeparator.#ctor(System.Windows.Forms.ToolStripSeparator)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="separator">Gibt den inneren System.Windows.Forms.ToolStripSeparator an.</param>
        </member>
        <member name="M:SharpAccessory.VisualComponents.MenuSeparator.Dispose">
            <summary>Gibt diese Instanz frei.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.MenuSeparator.Visible">
            <summary>Ruft die Sichtbarkeit der Trennlinie ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.MenuSeparator.IsDisposed">
            <summary>Ruft einen Wert ab, der angibt, ob diese Instanz bereits freigegeben wurde.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.MenuStripEx">
            <summary>Erweitert System.Windows.Forms.MenuStrip.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.MenuStripEx.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.MenuStripEx.FindItems(System.String)">
            <summary>Ruft die Liste aller enthaltenen Elemente mit dem angegebenen Namen ab.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.MenuStripEx.GetStyle(System.Windows.Forms.ControlStyles)">
            <summary>Ruft den Wert für das angegebene Steuerelement-Formatbit ab.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.MenuStripEx.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)">
            <summary>Legt den Wert für das angegebene Steuerelement-Formatbit fest.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.MenuStripEx.SetScaleChildren(System.Boolean)">
            <summary>Legt fest, ob untergeordnete Steuerelemente durch ScaleControl skaliert werden.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.MenuStripEx.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
            <summary>Skaliert Position, Größe, Textabstand und Rand des Steuerelements.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.MenuStripEx.WndProc(System.Windows.Forms.Message@)">
            <summary>Verarbeitet Windows-Meldungen.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.MenuStripEx.IgnoreScaleControl">
            <summary>Ruft ab oder legt fest ob Aufrufe von ScaleControl ignoriert werden.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.MenuStripEx.ScaleChildren">
            <summary>Ruft ab, ob untergeordnete Steuerelemente durch ScaleControl skaliert werden.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.MouseModifierKey">
            <summary>Repräsentiert einen Tastataturcode mit dem das Mausverhalten modifiziert wird.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.MouseModifierKey.#ctor(System.Windows.Forms.Keys)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.MouseModifierKey.ReportKeyDown">
            <summary>Setzt die Pressed-Eigenschaft auf true und löst das KeyDown-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.MouseModifierKey.ReportKeyUp">
            <summary>Setzt die Pressed-Eigenschaft auf false und löst das KeyUp-Ereignis aus.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.MouseModifierKey.Image">
            <summary>Ruft das zugeordnete Icon ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.MouseModifierKey.ToolTipText">
            <summary>Ruft den zugeordneten ToolTip-Text ab, oder legt diesen fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.MouseModifierKey.KeyCode">
            <summary>Ruft den Tastataturcode ab, mit dem das Mausverhalten modifiziert wird.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.MouseModifierKey.Pressed">
            <summary>Ruft einen Wert ab, der angibt, ob die entsprechende Taste zuletzt durch ReportKeyDown 
            als gedrückt vermerkt wurde.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.MouseModifierKey.ImageChanged">
            <summary>Wird ausgelöst wenn sich die Image-Eigenschaft geändert hat.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.MouseModifierKey.KeyDown">
            <summary>Wird ausgelöst wenn ReportKeyDown aufgerufen wird.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.MouseModifierKey.KeyUp">
            <summary>Wird ausgelöst wenn ReportKeyUp aufgerufen wird.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.MouseModifierKey.ToolTipTextChanged">
            <summary>Wird ausgelöst wenn sich die ToolTipText-Eigenschaft geändert hat.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.MouseModifierKeyManager">
            <summary>Verwaltet Tastaturcodes mit denen das Mausverhalten modifiziert wird.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.MouseModifierKeyManager.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.MouseModifierKeyManager.AddKey(SharpAccessory.VisualComponents.MouseModifierKey)">
            <summary>Beginnt die Überwachung des angegebenen Tastaturcodes.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.MouseModifierKeyManager.RemoveKey(SharpAccessory.VisualComponents.MouseModifierKey)">
            <summary>Stoppt die Überwachung des angegebenen Tastaturcodes.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.MouseModifierKeyManager.ReportKeyDown(System.Windows.Forms.Keys)">
            <summary>Wertet ein KeyDown-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.MouseModifierKeyManager.ReportKeyUp(System.Windows.Forms.Keys)">
            <summary>Wertet ein KeyUp-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.MouseModifierKeyManager.OnSizeChanged(System.EventArgs)">
            <summary>Passt die Größe der untergeordneten Steuerelemente an.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.MouseModifierKeyManager.Renderer">
            <summary>Ruft den Renderer für das Steuerelement ab, oder legt diesen fest.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.ToolStripColorTable">
            <summary>Stellt Farben für ToolStrips bereit.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ToolStripColorTable.ButtonCheckedGradientBegin">
            <summary>Ruft die verwendete Anfangsfarbe des Farbverlaufs ab, wenn die Schaltfläche aktiviert 
            wird.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ToolStripColorTable.ButtonCheckedGradientEnd">
            <summary>Ruft die verwendete Endfarbe des Farbverlaufs ab, wenn die Schaltfläche aktiviert wird.
            </summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ToolStripColorTable.ButtonCheckedGradientMiddle">
            <summary>Ruft die verwendete Mittelfarbe des Farbverlaufs ab, wenn die Schaltfläche aktiviert 
            wird.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ToolStripColorTable.ButtonPressedGradientBegin">
            <summary>Ruft die verwendete Anfangsfarbe des Farbverlaufs ab, wenn die Schaltfläche gedrückt 
            wird.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ToolStripColorTable.ButtonPressedGradientEnd">
            <summary>Ruft die verwendete Endfarbe des Farbverlaufs ab, wenn die Schaltfläche gedrückt wird.
            </summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ToolStripColorTable.ButtonPressedGradientMiddle">
            <summary>Ruft die verwendete Mittelfarbe des Farbverlaufs ab, wenn die Schaltfläche gedrückt wird.
            </summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ToolStripColorTable.ButtonSelectedBorder">
            <summary>Ruft die verwendete Rahmenfarbe für ausgewählte Schaltflächen ab.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ToolStripColorTable.ButtonSelectedGradientBegin">
            <summary>Ruft die verwendete Anfangsfarbe des Farbverlaufs ab, wenn die Schaltfläche ausgewählt 
            wird.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ToolStripColorTable.ButtonSelectedGradientEnd">
            <summary>Ruft die verwendete Endfarbe des Farbverlaufs ab, wenn die Schaltfläche ausgewählt wird.
            </summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ToolStripColorTable.ButtonSelectedGradientMiddle">
            <summary>Ruft die verwendete Mittelfarbe des Farbverlaufs ab, wenn die Schaltfläche ausgewählt 
            wird.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ToolStripColorTable.CheckBackground">
            <summary>Ruft die Volltonfarbe ab, die verwendet wird, wenn die Schaltfläche aktiviert wird und 
            Farbverläufe verwendet werden.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ToolStripColorTable.CheckPressedBackground">
            <summary>Ruft die Volltonfarbe ab, die verwendet wird, wenn die Schaltfläche aktiviert und 
            gedrückt wird und Farbverläufe verwendet werden.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ToolStripColorTable.CheckSelectedBackground">
            <summary>Ruft die Volltonfarbe ab, die verwendet wird, wenn die Schaltfläche aktiviert und 
            ausgewählt wird und Farbverläufe verwendet werden.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ToolStripColorTable.GripDark">
            <summary>Ruft die für Schatteneffekte auf dem Verschiebepunkt verwendete Farbe ab.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ToolStripColorTable.GripLight">
            <summary>Ruft die für Hervorhebungseffekte auf dem Verschiebepunkt verwendete Farbe ab.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ToolStripColorTable.ImageMarginGradientBegin">
            <summary>Ruft die verwendete Anfangsfarbe des Farbverlaufs für den Bildbereich ab.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ToolStripColorTable.ImageMarginGradientEnd">
            <summary>Ruft die verwendete Endfarbe des Farbverlaufs für den Bildbereich ab.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ToolStripColorTable.ImageMarginGradientMiddle">
            <summary>Ruft die verwendete Mittelfarbe des Farbverlaufs für den Bildbereich ab.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ToolStripColorTable.ImageMarginRevealedGradientBegin">
            <summary>Ruft die verwendete Anfangsfarbe des Farbverlaufs für den Bildbereich ab.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ToolStripColorTable.ImageMarginRevealedGradientEnd">
            <summary>Ruft die verwendete Endfarbe des Farbverlaufs für den Bildbereich ab.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ToolStripColorTable.ImageMarginRevealedGradientMiddle">
            <summary>Ruft die verwendete Mittelfarbe des Farbverlaufs für den Bildbereich ab.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ToolStripColorTable.MenuBorder">
            <summary>Ruft die verwendete Rahmenfarbe für MenuStrips ab.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ToolStripColorTable.MenuItemBorder">
            <summary>Ruft die verwendete Rahmenfarbe für Menüeinträge ab.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ToolStripColorTable.MenuItemPressedGradientBegin">
            <summary>Ruft die verwendete Anfangsfarbe des Farbverlaufs ab, wenn ein Menüeintrag der obersten 
            Ebene gedrückt wird.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ToolStripColorTable.MenuItemPressedGradientEnd">
            <summary>Ruft die verwendete Endfarbe des Farbverlaufs ab, wenn ein Menüeintrag der obersten 
            Ebene gedrückt wird.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ToolStripColorTable.MenuItemPressedGradientMiddle">
            <summary>Ruft die verwendete Mittelfarbe des Farbverlaufs ab, wenn ein Menüeintrag der obersten 
            Ebene gedrückt wird.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ToolStripColorTable.MenuItemSelected">
            <summary>Ruft die verwendete Volltonfarbe ab, wenn ein Menüeintrag ausgewählt wird, der nicht der 
            obersten Ebene angehört.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ToolStripColorTable.MenuItemSelectedGradientBegin">
            <summary>Ruft die verwendete Anfangsfarbe des Farbverlaufs ab, wenn ein Menüeintrag der obersten 
            Ebene ausgewählt wird.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ToolStripColorTable.MenuItemSelectedGradientEnd">
            <summary>Ruft die verwendete Endfarbe des Farbverlaufs ab, wenn ein Menüeintrag der obersten 
            Ebene ausgewählt wird.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ToolStripColorTable.MenuStripGradientBegin">
            <summary>Ruft die verwendete Anfangsfarbe des Farbverlaufs für den Hintergrund von MenuStrips ab.
            </summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ToolStripColorTable.MenuStripGradientEnd">
            <summary>Ruft die verwendete Endfarbe des Farbverlaufs für den Hintergrund von MenuStrips ab.
            </summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ToolStripColorTable.OverflowButtonGradientBegin">
            <summary>Ruft die im OverflowButton verwendete Anfangsfarbe des Farbverlaufs ab.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ToolStripColorTable.OverflowButtonGradientEnd">
            <summary>Ruft die im OverflowButton verwendete Endfarbe des Farbverlaufs ab.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ToolStripColorTable.OverflowButtonGradientMiddle">
            <summary>Ruft die im OverflowButton verwendete Mittelfarbe des Farbverlaufs ab.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ToolStripColorTable.SeparatorDark">
            <summary>Ruft die für Schatteneffekte in Trennlinien verwendete Farbe ab.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ToolStripColorTable.SeparatorLight">
            <summary>Ruft die für Hervorhebungseffekte in Trennlinien verwendete Farbe ab.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ToolStripColorTable.StatusStripGradientBegin">
            <summary>Ruft die verwendete Anfangsfarbe des Farbverlaufs für den Hintergrund von StatusStrips 
            ab.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ToolStripColorTable.StatusStripGradientEnd">
            <summary>Ruft die verwendete Endfarbe des Farbverlaufs für den Hintergrund von StatusStrips ab.
            </summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ToolStripColorTable.ToolStripBorder">
            <summary>Ruft die verwendete Rahmenfarbe für ToolStrips ab.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ToolStripColorTable.ToolStripContentPanelGradientBegin">
            <summary>Ruft die verwendete Anfangsfarbe des Farbverlaufs für den Hintergrund von 
            ToolStripContentPanels ab.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ToolStripColorTable.ToolStripContentPanelGradientEnd">
            <summary>Ruft die verwendete Endfarbe des Farbverlaufs für den Hintergrund von 
            ToolStripContentPanels ab.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ToolStripColorTable.ToolStripDropDownBackground">
            <summary>Ruft die Volltonfarbe für den Hintergrund von ToolStrips ab.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ToolStripColorTable.ToolStripGradientBegin">
            <summary>Ruft die verwendete Anfangsfarbe des Farbverlaufs für den Hintergrund von ToolStrips ab.
            </summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ToolStripColorTable.ToolStripGradientEnd">
            <summary>Ruft die verwendete Endfarbe des Farbverlaufs für den Hintergrund von ToolStrips ab.
            </summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ToolStripColorTable.ToolStripGradientMiddle">
            <summary>Ruft die verwendete Mittelfarbe des Farbverlaufs für den Hintergrund von ToolStrips ab.
            </summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ToolStripColorTable.ToolStripPanelGradientBegin">
            <summary>Ruft die verwendete Anfangsfarbe des Farbverlaufs für den Hintergrund von 
            ToolStripPanels ab.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ToolStripColorTable.ToolStripPanelGradientEnd">
            <summary>Ruft die verwendete Endfarbe des Farbverlaufs für den Hintergrund von ToolStripPanels ab.
            </summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.PanelEx">
            <summary>Erweitert System.Windows.Forms.Panel.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.PanelEx.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.PanelEx.GetStyle(System.Windows.Forms.ControlStyles)">
            <summary>Ruft den Wert für das angegebene Steuerelement-Formatbit ab.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.PanelEx.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)">
            <summary>Legt den Wert für das angegebene Steuerelement-Formatbit fest.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.PanelEx.SetScaleChildren(System.Boolean)">
            <summary>Legt fest, ob untergeordnete Steuerelemente durch ScaleControl skaliert werden.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.PanelEx.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
            <summary>Skaliert Position, Größe, Textabstand und Rand des Steuerelements.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.PanelEx.ScrollToControl(System.Windows.Forms.Control)">
            <summary>Berechnet den Bildlauf-Offset zum angegebenen untergeordneten Steuerelement.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.PanelEx.IgnoreScaleControl">
            <summary>Ruft ab oder legt fest ob Aufrufe von ScaleControl ignoriert werden.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.PanelEx.IgnoreScrollToControl">
            <summary>Ruft ab oder legt fest ob Aufrufe von ScrollToControl ignoriert werden.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.PanelEx.ScaleChildren">
            <summary>Ruft ab, ob untergeordnete Steuerelemente durch ScaleControl skaliert werden.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.PictureBoxEx">
            <summary>Erweitert System.Windows.Forms.PictureBox.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.PictureBoxEx.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.PictureBoxEx.GetStyle(System.Windows.Forms.ControlStyles)">
            <summary>Ruft den Wert für das angegebene Steuerelement-Formatbit ab.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.PictureBoxEx.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)">
            <summary>Legt den Wert für das angegebene Steuerelement-Formatbit fest.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.PictureBoxEx.SetScaleChildren(System.Boolean)">
            <summary>Legt fest, ob untergeordnete Steuerelemente durch ScaleControl skaliert werden.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.PictureBoxEx.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
            <summary>Skaliert Position, Größe, Textabstand und Rand des Steuerelements.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.PictureBoxEx.IgnoreScaleControl">
            <summary>Ruft ab oder legt fest ob Aufrufe von ScaleControl ignoriert werden.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.PictureBoxEx.ScaleChildren">
            <summary>Ruft ab, ob untergeordnete Steuerelemente durch ScaleControl skaliert werden.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.SplashPopup">
            <summary>Zeigt ein Logo und Statustext während des Programmstarts an.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.SplashPopup.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.SplashPopup.Dispose">
            <summary>Gibt diese Instanz frei.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.SplashPopup.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>Rendert den Inhalt des Popups.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.SplashPopup.Text">
            <summary>Ruft den Statustext ab, oder legt diesen fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.SplashPopup.TextBounds">
            <summary>Ruft die Position und Größe des Bereichs ab, in dem der Statustext angezeigt wird, oder 
            legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.SplashPopup.Font">
            <summary>Ruft den System.Drawing.Font ab, mit dem der Statustext angezeigt wird, oder legt diesen 
            fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.SplashPopup.ForeColor">
            <summary>Ruft die System.Drawing.Color ab, mit der der Statustext angezeigt wird, oder legt diese 
            fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.SplashPopup.Image">
            <summary>Ruft das System.Drawing.Image ab, das im Clientbereich des Popups angezeigt wird, oder 
            legt dieses fest.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.SplitContainerEx">
            <summary>Erweitert System.Windows.Forms.SplitContainer.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.SplitContainerEx.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.SplitContainerEx.GetStyle(System.Windows.Forms.ControlStyles)">
            <summary>Ruft den Wert für das angegebene Steuerelement-Formatbit ab.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.SplitContainerEx.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)">
            <summary>Legt den Wert für das angegebene Steuerelement-Formatbit fest.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.SplitContainerEx.SetScaleChildren(System.Boolean)">
            <summary>Legt fest, ob untergeordnete Steuerelemente durch ScaleControl skaliert werden.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.SplitContainerEx.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
            <summary>Skaliert Position, Größe, Textabstand und Rand des Steuerelements.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.SplitContainerEx.IgnoreScaleControl">
            <summary>Ruft ab oder legt fest ob Aufrufe von ScaleControl ignoriert werden.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.SplitContainerEx.ScaleChildren">
            <summary>Ruft ab, ob untergeordnete Steuerelemente durch ScaleControl skaliert werden.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.StatusStripEx">
            <summary>Erweitert System.Windows.Forms.StatusStrip.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.StatusStripEx.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.StatusStripEx.FindItems(System.String)">
            <summary>Ruft die Liste aller enthaltenen Elemente mit dem angegebenen Namen ab.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.StatusStripEx.GetStyle(System.Windows.Forms.ControlStyles)">
            <summary>Ruft den Wert für das angegebene Steuerelement-Formatbit ab.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.StatusStripEx.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)">
            <summary>Legt den Wert für das angegebene Steuerelement-Formatbit fest.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.StatusStripEx.SetScaleChildren(System.Boolean)">
            <summary>Legt fest, ob untergeordnete Steuerelemente durch ScaleControl skaliert werden.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.StatusStripEx.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
            <summary>Skaliert Position, Größe, Textabstand und Rand des Steuerelements.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.StatusStripEx.WndProc(System.Windows.Forms.Message@)">
            <summary>Verarbeitet Windows-Meldungen.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.StatusStripEx.IgnoreScaleControl">
            <summary>Ruft ab oder legt fest ob Aufrufe von ScaleControl ignoriert werden.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.StatusStripEx.ScaleChildren">
            <summary>Ruft ab, ob untergeordnete Steuerelemente durch ScaleControl skaliert werden.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.CategoryButton">
            <summary>Stellt eine Schaltfläche in einer CategoryBar dar.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.CategoryButton.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.CategoryButton.Dispose">
            <summary>Gibt diese Instanz frei.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.CategoryButton.RaiseClick">
            <summary>Löst das Click-Ereignis aus.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.CategoryButton.Checked">
            <summary>Ruft ab oder legt fest ob die Schaltfläche dauerhaft gedrückt ist.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.CategoryButton.Enabled">
            <summary>Ruft ab oder legt fest ob die Schaltfläche ausgewählt werden kann.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.CategoryButton.Image">
            <summary>Ruft das Icon der Schaltfläche ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.CategoryButton.Tag">
            <summary>Ruft das Objekt ab, das weitere Daten enthält, oder legt dieses fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.CategoryButton.Text">
            <summary>Ruft den Text der Schaltfläche ab, oder legt diesen fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.CategoryButton.ToolTipText">
            <summary>Ruft den Tooltip der Schaltfläche ab, oder legt diesen fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.CategoryButton.Visible">
            <summary>Ruft die Sichtbarkeit der Schaltfläche ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.CategoryButton.IsDisposed">
            <summary>Ruft einen Wert ab, der angibt, ob diese Instanz bereits freigegeben wurde.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.CategoryButton._Button">
            <summary>Ruft den inneren System.Windows.Forms.ToolStripButton ab.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.CategoryButton.Click">
            <summary>Wird ausgelöst wenn auf die Schaltfläche geklickt wird.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.CategoryBar">
            <summary>Steuerelement das Schaltflächen für Kategorien bereitstellt.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.CategoryBar.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.CategoryBar.OnBackColorChanged(System.EventArgs)">
            <summary>Passt die untergeordneten Steuerelemente an.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.CategoryBar.OnSizeChanged(System.EventArgs)">
            <summary>Passt die untergeordneten Steuerelemente an.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.CategoryBar.Font">
            <summary>Ruft die Schriftart ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.CategoryBar.ForeColor">
            <summary>Ruft die Farbe der Beschriftung ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.CategoryBar.ImageScalingSize">
            <summary>Ruft die Größe der Icons ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.CategoryBar.Renderer">
            <summary>Ruft den Renderer ab, oder legt diesen fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.CategoryBar.Buttons">
            <summary>Ruft die Auflistung der enthaltenen Schaltflächen ab.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.CategoryBar.CategoryButtonCollection">
            <summary>Verwaltet eine Liste von CategoryButtons.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.CategoryBar.CategoryButtonCollection.#ctor(SharpAccessory.VisualComponents.CategoryBar)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="parent">Gibt die übergeordnete CategoryBar an.</param>
        </member>
        <member name="M:SharpAccessory.VisualComponents.CategoryBar.CategoryButtonCollection.Add(SharpAccessory.VisualComponents.CategoryButton)">
            <summary>Fügt die angegebene Schaltfläche am Ende der Auflistung hinzu.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.CategoryBar.CategoryButtonCollection.AddRange(SharpAccessory.VisualComponents.CategoryButton[])">
            <summary>Fügt die angegebenen Schaltflächen am Ende der Auflistung hinzu.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.CategoryBar.CategoryButtonCollection.Clear">
            <summary>Entfernt alle Schaltflächen aus der Auflistung.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.CategoryBar.CategoryButtonCollection.Insert(System.Int32,SharpAccessory.VisualComponents.CategoryButton)">
            <summary>Fügt die angegebene Schaltfläche an der angegebenen Position ein.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.CategoryBar.CategoryButtonCollection.Remove(SharpAccessory.VisualComponents.CategoryButton)">
            <summary>Entfernt die angegebene Schaltfläche aus der Auflistung.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.CategoryBar.CategoryButtonCollection.RemoveAt(System.Int32)">
            <summary>Entfernt die Schaltfläche an der angegebenen Position aus der Auflistung.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.CategoryBar.CategoryButtonCollection.Sort(System.Collections.Generic.IComparer{SharpAccessory.VisualComponents.CategoryButton})">
            <summary>Diese Methode ist für diese Klasse nicht relevant.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.CategoryBar.CategoryButtonCollection.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{SharpAccessory.VisualComponents.CategoryButton})">
            <summary>Diese Methode ist für diese Klasse nicht relevant.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.CategoryBar.CategoryButtonCollection.Sort(System.Comparison{SharpAccessory.VisualComponents.CategoryButton})">
            <summary>Diese Methode ist für diese Klasse nicht relevant.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.TrackBarEx">
            <summary>Erweitert System.Windows.Forms.TrackBar.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.TrackBarEx.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.TrackBarEx.GetStyle(System.Windows.Forms.ControlStyles)">
            <summary>Ruft den Wert für das angegebene Steuerelement-Formatbit ab.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.TrackBarEx.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)">
            <summary>Legt den Wert für das angegebene Steuerelement-Formatbit fest.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.TrackBarEx.SetScaleChildren(System.Boolean)">
            <summary>Legt fest, ob untergeordnete Steuerelemente durch ScaleControl skaliert werden.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.TrackBarEx.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
            <summary>Skaliert Position, Größe, Textabstand und Rand des Steuerelements.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.TrackBarEx.IgnoreScaleControl">
            <summary>Ruft ab oder legt fest ob Aufrufe von ScaleControl ignoriert werden.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.TrackBarEx.ScaleChildren">
            <summary>Ruft ab, ob untergeordnete Steuerelemente durch ScaleControl skaliert werden.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.Wheel">
            <summary>Steuerelement zur Anzeige eines Auswahlrads.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.WheelBase">
            <summary>Basis-Klasse für Wheel.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.WheelBase.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.WheelBase.OnAnimationIndexChanged(System.EventArgs)">
            <summary>Löst das AnimationIndexChanged-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.WheelBase.OnGotFocus(System.EventArgs)">
            <summary>Löst das GotFocus-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.WheelBase.OnItemsChanged(System.EventArgs)">
            <summary>Löst das ItemsChanged-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.WheelBase.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>Löst das KeyDown-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.WheelBase.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>Löst das KeyPress-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.WheelBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>Löst das KeyUp-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.WheelBase.OnLostFocus(System.EventArgs)">
            <summary>Löst das LostFocus-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.WheelBase.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
            <summary>Löst das MouseClick-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.WheelBase.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
            <summary>Löst das MouseDoubleClick-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.WheelBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>Löst das MouseDown-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.WheelBase.OnMouseEnter(System.EventArgs)">
            <summary>Löst das MouseEnter-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.WheelBase.OnMouseLeave(System.EventArgs)">
            <summary>Löst das MouseLeave-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.WheelBase.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>Löst das MouseMove-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.WheelBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>Löst das MouseUp-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.WheelBase.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>Löst das MouseWheel-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.WheelBase.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>Löst das Paint-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.WheelBase.OnSelectedIndexChanged(System.EventArgs)">
            <summary>Löst das SelectedIndexChanged-Ereignis aus.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.WheelBase.AnimationIndexChanged">
            <summary>Wird ausgelöst wenn sich der Animations-Index geändert hat.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.WheelBase.GotFocus">
            <summary>Wird ausgelöst wenn das Steuerelement den Eingabefokus erhält.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.WheelBase.ItemsChanged">
            <summary>Wird ausgelöst wenn sich die Auflistung der Einträge geändert hat.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.WheelBase.KeyDown">
            <summary>Wird ausgelöst wenn ein Taste gedrückt wird, während das Steuerelement den Fokus besitzt.
            </summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.WheelBase.KeyPress">
            <summary>Wird ausgelöst wenn ein Taste gedrückt wurde, während das Steuerelement den Fokus 
            besitzt.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.WheelBase.KeyUp">
            <summary>Wird ausgelöst wenn ein Taste losgelassen wird, während das Steuerelement den Fokus 
            besitzt.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.WheelBase.LostFocus">
            <summary>Wird ausgelöst wenn das Steuerelement den Eingabefokus verliert.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.WheelBase.MouseClick">
            <summary>Wird ausgelöst wenn mit der Maus auf das Steuerelement geklickt wird.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.WheelBase.MouseDoubleClick">
            <summary>Wird ausgelöst wenn mit der Maus doppelt auf das Steuerelement geklickt wird.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.WheelBase.MouseDown">
            <summary>Wird ausgelöst wenn sich der Mauszeiger über dem Steuerelement befindet und eine 
            Maustaste gedrückt wird.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.WheelBase.MouseEnter">
            <summary>Wird ausgelöst wenn der Mauszeiger in den Bereich des Steuerelements eintritt.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.WheelBase.MouseLeave">
            <summary>Wird ausgelöst wenn der Mauszeiger den Bereich des Steuerelements verlässt.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.WheelBase.MouseMove">
            <summary>Wird ausgelöst wenn der Mauszeiger über dem Steuerelement bewegt wird.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.WheelBase.MouseUp">
            <summary>Wird ausgelöst wenn sich der Mauszeiger über dem Steuerelement befindet und eine 
            Maustaste losgelassen wird.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.WheelBase.MouseWheel">
            <summary>Wird ausgelöst wenn das Mausrad über dem Steuerelement bewegt wird.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.WheelBase.Paint">
            <summary>Wird ausgelöst wenn das Steuerelement neu gezeichnet wird.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.WheelBase.SelectedIndexChanged">
            <summary>Wird ausgelöst wenn sich der ausgewählte Index geändert hat.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Wheel.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Wheel.Finalize">
            <summary>Gibt diese Instanz frei.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Wheel.Animate(System.Int32)">
            <summary>Animiert die Änderung des ausgewählten Index.</summary>
            <param name="change">Der Betrag und die Richtung der Änderung.</param>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Wheel.Dispose">
            <summary>Gibt diese Instanz frei.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Wheel.Focus">
            <summary>Setzt den Eingabefokus in das Steuerelement.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Wheel.Refresh">
            <summary>Erzwingt, dass das Steuerelement neu gezeichnet wird.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Wheel.BackColor">
            <summary>Ruft die Hintergrundfarbe des Steuerelements ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Wheel.BorderStyle">
            <summary>Ruft die Rahmenart des Steuerelements ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Wheel.Enabled">
            <summary>Ruft einen Wert ab, der angibt, ob das Steuerelement auf Benutzerinteraktionen reagieren 
            kann, oder legt diesen fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Wheel.Font">
            <summary>Ruft die Schriftart ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Wheel.ForeColor">
            <summary>Ruft die Farbe der Beschriftung ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Wheel.SelectedIndex">
            <summary>Ruft den ausgewählten Index ab, oder legt diesen fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Wheel.ShowLines">
            <summary>Ruft ab oder legt fest, ob Hilfslinien angezeigt werden.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Wheel.AnimationIndex">
            <summary>Ruft den Animations-Index ab.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Wheel.Focused">
            <summary>Ruft einen Wert ab, der angibt, ob das Steuerelement den Eingabefokus besitzt.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.Wheel.Items">
            <summary>Ruft die Auflistung der Einträge ab.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.Wheel.ItemCollection">
            <summary>Verwaltet eine Liste von Einträgen.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Wheel.ItemCollection.Add(System.String)">
            <summary>Fügt das angegebene Element am Ende der Auflistung hinzu.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Wheel.ItemCollection.AddRange(System.String[])">
            <summary>Fügt die angegebenen Elemente am Ende der Auflistung hinzu.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Wheel.ItemCollection.Clear">
            <summary>Entfernt alle Elemente aus der Auflistung.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Wheel.ItemCollection.Insert(System.Int32,System.String)">
            <summary>Fügt das angegebene Element an der angegebenen Position ein.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Wheel.ItemCollection.Remove(System.String)">
            <summary>Entfernt das angegebene Element aus der Auflistung.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Wheel.ItemCollection.RemoveAt(System.Int32)">
            <summary>Entfernt das Element an der angegebenen Position aus der Auflistung.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Wheel.ItemCollection.Sort(System.Collections.Generic.IComparer{System.String})">
            <summary>Sortiert die Auflistung.</summary>
            <param name="comparer">Vergleicht zwei Elemente.</param>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Wheel.ItemCollection.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{System.String})">
            <summary>Sortiert die Auflistung.</summary>
            <param name="index">Der Index ab dem sortiert wird.</param>
            <param name="count">Die Anzahl der Elemente die sortiert werden.</param>
            <param name="comparer">Vergleicht zwei Elemente.</param>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Wheel.ItemCollection.Sort(System.Comparison{System.String})">
            <summary>Sortiert die Auflistung.</summary>
            <param name="comparison">Methode die zwei Elemente vergleicht.</param>
        </member>
        <member name="M:SharpAccessory.VisualComponents.Wheel.ItemCollection.OnChanged(System.EventArgs)">
            <summary>Löst das Changed-Ereignis aus.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.Wheel.ItemCollection.Changed">
            <summary>Wird ausgelöst wenn sich die Auflistung geändert hat.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.TabControlEx">
            <summary>Erweitert System.Windows.Forms.TabControl.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.TabControlEx.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.TabControlEx.GetStyle(System.Windows.Forms.ControlStyles)">
            <summary>Ruft den Wert für das angegebene Steuerelement-Formatbit ab.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.TabControlEx.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)">
            <summary>Legt den Wert für das angegebene Steuerelement-Formatbit fest.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.TabControlEx.SetScaleChildren(System.Boolean)">
            <summary>Legt fest, ob untergeordnete Steuerelemente durch ScaleControl skaliert werden.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.TabControlEx.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
            <summary>Skaliert Position, Größe, Textabstand und Rand des Steuerelements.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.TabControlEx.IgnoreScaleControl">
            <summary>Ruft ab oder legt fest ob Aufrufe von ScaleControl ignoriert werden.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.TabControlEx.ScaleChildren">
            <summary>Ruft ab, ob untergeordnete Steuerelemente durch ScaleControl skaliert werden.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.TextBoxEx">
            <summary>Erweitert System.Windows.Forms.TextBox.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.TextBoxEx.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.TextBoxEx.GetStyle(System.Windows.Forms.ControlStyles)">
            <summary>Ruft den Wert für das angegebene Steuerelement-Formatbit ab.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.TextBoxEx.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)">
            <summary>Legt den Wert für das angegebene Steuerelement-Formatbit fest.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.TextBoxEx.SetScaleChildren(System.Boolean)">
            <summary>Legt fest, ob untergeordnete Steuerelemente durch ScaleControl skaliert werden.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.TextBoxEx.OnClientSizeChanged(System.EventArgs)">
            <summary>Löst das ClientSizeChanged-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.TextBoxEx.OnBorderStyleChanged(System.EventArgs)">
            <summary>Löst das BorderStyleChanged-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.TextBoxEx.OnFontChanged(System.EventArgs)">
            <summary>Löst das FontChanged-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.TextBoxEx.OnHandleCreated(System.EventArgs)">
            <summary>Löst das HandleCreated-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.TextBoxEx.OnHandleDestroyed(System.EventArgs)">
            <summary>Löst das HandleDestroyed-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.TextBoxEx.OnMarginChanged(System.EventArgs)">
            <summary>Löst das MarginChanged-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.TextBoxEx.OnMultilineChanged(System.EventArgs)">
            <summary>Löst das MultilineChanged-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.TextBoxEx.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>Löst das Paint-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.TextBoxEx.OnTextChanged(System.EventArgs)">
            <summary>Löst das TextChanged-Ereignis aus.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.TextBoxEx.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
            <summary>Skaliert Position, Größe, Textabstand und Rand des Steuerelements.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.TextBoxEx.Hint">
            <summary>Ruft den Hinweistext ab, oder legt diesen fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.TextBoxEx.IgnoreScaleControl">
            <summary>Ruft ab oder legt fest ob Aufrufe von ScaleControl ignoriert werden.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.TextBoxEx.ScaleChildren">
            <summary>Ruft ab, ob untergeordnete Steuerelemente durch ScaleControl skaliert werden.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.TileLayoutBox">
            <summary>Steuerelement dessen Inhalt dynamisch in Kacheln dargestellt wird.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.TileLayoutBox.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.TileLayoutBox.PerformLayout">
            <summary>Erzwingt die Anwendung der Layoutlogik.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.TileLayoutBox.Refresh">
            <summary>Erzwingt, dass das Steuerelement neu gezeichnet wird.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.TileLayoutBox.ResumeLayout">
            <summary>Nimmt die übliche Layoutlogik wieder auf.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.TileLayoutBox.SuspendLayout">
            <summary>Unterbricht die Layoutlogik vorübergehend.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.TileLayoutBox.BorderStyle">
            <summary>Ruft die Rahmenart des Steuerelements ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.TileLayoutBox.ClientSize">
            <summary>Ruft die Größe des Clientbereichs ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.TileLayoutBox.ContextMenuStrip">
            <summary>Ruft das zugeordnete Kontextmenü ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.TileLayoutBox.MaximumTileSize">
            <summary>Ruft die maximale Größe der Kacheln ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.TileLayoutBox.MinimumTileSize">
            <summary>Ruft die minimale Größe der Kacheln ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.TileLayoutBox.TileSpacing">
            <summary>Ruft den Abstand zwischen den Kacheln ab, oder legt diesen fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.TileLayoutBox.Controls">
            <summary>Ruft die im Steuerelement enthaltene Auflistung von Steuerelementen ab.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.TileLayoutBox.IsLayoutSuspended">
            <summary>Ruft einen Wert ab, der angibt, ob die Layoutlogik unterbrochen ist.</summary>
        </member>
        <member name="E:SharpAccessory.VisualComponents.TileLayoutBox.Paint">
            <summary>Wird ausgelöst wenn das Steuerelement neu gezeichnet wird.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.TextPopup">
            <summary>Popup zur Anzeige eines Textes mit einem Icon, Überschrift und Fußzeile.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.TextPopup.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.TextPopup.SuspendLayout">
            <summary>Unterbricht die Layoutlogik vorübergehend.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.TextPopup.ResumeLayout">
            <summary>Nimmt die übliche Layoutlogik wieder auf.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.TextPopup.PerformLayout">
            <summary>Erzwingt die Anwendung der Layoutlogik.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.TextPopup.Dispose">
            <summary>Gibt diese Instanz frei.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.TextPopup.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>Rendert den Inhalt des Popups.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.TextPopup.Image">
            <summary>Ruft das Icon des Popups ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.TextPopup.Caption">
            <summary>Ruft die Überschrift des Popups ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.TextPopup.Text">
            <summary>Ruft den Text des Popups ab, oder legt diesen fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.TextPopup.Footer">
            <summary>Ruft die Fußzeile des Popups ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.TextPopup.HFont">
            <summary>Ruft die Schriftart für die Überschrift ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.TextPopup.LFont">
            <summary>Ruft die Schriftart für den Text und die Fußzeile ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.TextPopup.PreferredWidth">
            <summary>Ruft die bevorzugte Breite des Popups ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.TextPopup.MaximumSize">
            <summary>Ruft die Obergrenze für die Größe des Popups ab.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.TextPopup.MinimumSize">
            <summary>Ruft die Untergrenze für die Größe des Popups ab.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.TextPopup.Size">
            <summary>Ruft die Größe des Popups ab.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.TextPopup.Layout">
            <summary>Ruft die Layoutinformationen des Popups ab.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.TextPopup.IsLayoutSuspended">
            <summary>Ruft einen Wert ab, der angibt, ob die Layoutlogik unterbrochen ist.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.TextPopupLayout">
            <summary>Berechnet das Layout für SharpAccessory.VisualComponents.TextPopup.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.TextPopupLayout.#ctor(SharpAccessory.VisualComponents.TextPopup)">
            <summary>Berechnet und erstellt das Layout für das angegebene Popup.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.TextPopupLayout.ImageLayout">
            <summary>Ruft die Position und Größe zum Rendern des Icons ab.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.TextPopupLayout.CaptionLayout">
            <summary>Ruft die Position und Größe zum Rendern der Überschrift ab.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.TextPopupLayout.TextLayout">
            <summary>Ruft die Position und Größe zum Rendern des Textes ab.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.TextPopupLayout.Separator">
            <summary>Ruft die Position und Größe der Trennlinie ab.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.TextPopupLayout.FooterLayout">
            <summary>Ruft die Position und Größe zum Rendern der Fußzeile ab.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.TextPopupLayout.Size">
            <summary>Ruft die Höhe und Breite für das Popup ab.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.ToolStripEx">
            <summary>Erweitert System.Windows.Forms.ToolStrip.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ToolStripEx.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ToolStripEx.FindItems(System.Windows.Forms.ToolStrip,System.String)">
            <summary>Ruft die Liste aller enthaltenen Elemente mit dem angegebenen Namen ab.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ToolStripEx.FindItems(System.String)">
            <summary>Ruft die Liste aller enthaltenen Elemente mit dem angegebenen Namen ab.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ToolStripEx.GetStyle(System.Windows.Forms.ControlStyles)">
            <summary>Ruft den Wert für das angegebene Steuerelement-Formatbit ab.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ToolStripEx.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)">
            <summary>Legt den Wert für das angegebene Steuerelement-Formatbit fest.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ToolStripEx.SetScaleChildren(System.Boolean)">
            <summary>Legt fest, ob untergeordnete Steuerelemente durch ScaleControl skaliert werden.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ToolStripEx.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
            <summary>Skaliert Position, Größe, Textabstand und Rand des Steuerelements.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ToolStripEx.WndProc(System.Windows.Forms.Message@)">
            <summary>Verarbeitet Windows-Meldungen.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ToolStripEx.IgnoreScaleControl">
            <summary>Ruft ab oder legt fest ob Aufrufe von ScaleControl ignoriert werden.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.ToolStripEx.ScaleChildren">
            <summary>Ruft ab, ob untergeordnete Steuerelemente durch ScaleControl skaliert werden.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.ToolStripSystemRendererEx">
            <summary>Erweitert System.Windows.Forms.ToolStripSystemRenderer.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ToolStripSystemRendererEx.OnRenderArrow(System.Windows.Forms.ToolStripArrowRenderEventArgs)">
            <summary>Passt die Farbe von Pfeilen an das dazugehörige Element an.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.ToolStripSystemRendererEx.OnRenderItemImage(System.Windows.Forms.ToolStripItemImageRenderEventArgs)">
            <summary>Überschreibt die Rendering-Methode für Icons die disabled sind.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.TreeViewEx">
            <summary>Erweitert System.Windows.Forms.TreeView.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.TreeViewEx.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.TreeViewEx.GetStyle(System.Windows.Forms.ControlStyles)">
            <summary>Ruft den Wert für das angegebene Steuerelement-Formatbit ab.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.TreeViewEx.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)">
            <summary>Legt den Wert für das angegebene Steuerelement-Formatbit fest.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.TreeViewEx.SetScaleChildren(System.Boolean)">
            <summary>Legt fest, ob untergeordnete Steuerelemente durch ScaleControl skaliert werden.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.TreeViewEx.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
            <summary>Skaliert Position, Größe, Textabstand und Rand des Steuerelements.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.TreeViewEx.IgnoreScaleControl">
            <summary>Ruft ab oder legt fest ob Aufrufe von ScaleControl ignoriert werden.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.TreeViewEx.ScaleChildren">
            <summary>Ruft ab, ob untergeordnete Steuerelemente durch ScaleControl skaliert werden.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.UserControlEx">
            <summary>Erweitert System.Windows.Forms.UserControl.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.UserControlEx.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.UserControlEx.GetStyle(System.Windows.Forms.ControlStyles)">
            <summary>Ruft den Wert für das angegebene Steuerelement-Formatbit ab.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.UserControlEx.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)">
            <summary>Legt den Wert für das angegebene Steuerelement-Formatbit fest.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.UserControlEx.SetScaleChildren(System.Boolean)">
            <summary>Legt fest, ob untergeordnete Steuerelemente durch ScaleControl skaliert werden.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.UserControlEx.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
            <summary>Skaliert Position, Größe, Textabstand und Rand des Steuerelements.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.UserControlEx.IgnoreScaleControl">
            <summary>Ruft ab oder legt fest ob Aufrufe von ScaleControl ignoriert werden.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.UserControlEx.ScaleChildren">
            <summary>Ruft ab, ob untergeordnete Steuerelemente durch ScaleControl skaliert werden.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.VisualComponent">
            <summary>Bietet Zugriff auf Standard-Methoden für visuelle Komponenten.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.VisualComponent.BrowseSaveImage(System.Drawing.Image,System.String)">
            <summary>Zeigt einen Dialog zur Auswahl eines Dateinamens und Dateiformats und speichert das 
            angegebene Bild ab.</summary>
            <param name="image">Das System.Drawing.Image das gespeichert werden soll.</param>
            <param name="name">Der Dateiname ohne Dateipfad mit dem der Dialog initialisiert wird.</param>
            <returns>Der ausgewählte Dateipfad bzw. leer wenn der Vorgang abgebrochen wurde.</returns>
        </member>
        <member name="M:SharpAccessory.VisualComponents.VisualComponent.CloneBitmap(System.Drawing.Bitmap,System.Drawing.Imaging.PixelFormat)">
            <summary>Erzeugt eine Kopie des angegebenen Bitmaps in dem angegebenen Pixel-Format.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.VisualComponent.CreateBitmap(SharpAccessory.VisualComponents.BoxedControlBase)">
            <summary>Rendert das angegebene Steuerelement in ein neues Bitmap.</summary>
            <param name="control">Das Steuerelement das gerendert wird.</param>
            <returns>Ein neues Bitmap oder null.</returns>
        </member>
        <member name="M:SharpAccessory.VisualComponents.VisualComponent.CreateBitmap(System.Windows.Forms.Control)">
            <summary>Rendert das angegebene Steuerelement in ein neues Bitmap.</summary>
            <param name="control">Das Steuerelement das gerendert wird.</param>
            <returns>Ein neues Bitmap oder null.</returns>
        </member>
        <member name="M:SharpAccessory.VisualComponents.VisualComponent.DisableImage(System.Drawing.Bitmap)">
            <summary>Wendet den "Disabled"-Effekt auf das angegebenen System.Drawing.Bitmap an.</summary>
            <returns>Ein neues System.Drawing.Bitmap mit dem "Disabled"-Effekt.</returns>
        </member>
        <member name="M:SharpAccessory.VisualComponents.VisualComponent.DisableImage(System.Drawing.Bitmap,System.Single)">
            <summary>Wendet den "Disabled"-Effekt auf das angegebenen System.Drawing.Bitmap an.</summary>
            <returns>Ein neues System.Drawing.Bitmap mit dem "Disabled"-Effekt.</returns>
        </member>
        <member name="M:SharpAccessory.VisualComponents.VisualComponent.DrawImageDisabled(System.Drawing.Image,System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>Zeichnet das angegebene System.Drawing.Bitmap mit dem "Disabled"-Effekt.</summary>
            <param name="image">Das zu zeichnende System.Drawing.Image.</param>
            <param name="g">System.Drawing.Graphics in das das Bild gezeichnet wird.</param>
            <param name="r">Gibt die Position und Größe für das Zeichnen an.</param>
        </member>
        <member name="M:SharpAccessory.VisualComponents.VisualComponent.DrawImageDisabled(System.Drawing.Bitmap,System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>Zeichnet das angegebene System.Drawing.Bitmap mit dem "Disabled"-Effekt.</summary>
            <param name="image">Das zu zeichnende System.Drawing.Bitmap.</param>
            <param name="g">System.Drawing.Graphics in das das Bild gezeichnet wird.</param>
            <param name="r">Gibt die Position und Größe für das Zeichnen an.</param>
        </member>
        <member name="M:SharpAccessory.VisualComponents.VisualComponent.EnsureVisible(System.Windows.Forms.Form)">
            <summary>Stellt sicher, dass das angegebene Fenster vollständig angezeigt wird.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.VisualComponent.EnsureVisible(System.Drawing.Rectangle)">
            <summary>Korrigiert den angegebenen Bereich, so dass dieser vollständig innerhalb von 
            System.Windows.Forms.SystemInformation.VirtualScreen liegt.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.VisualComponent.GetEncoder(System.Drawing.Imaging.ImageFormat)">
            <summary>Bestimmt den Encoder zu dem angegebenen Bildformat.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.VisualComponent.GetImageScalingSize(System.Drawing.Size)">
            <summary>Berechnet die optimale Icon-Größe für die Verwendung mit ToolStrips.</summary>
            <param name="baseSize">Gibt die Icon-Größe bei 96 dpi an.</param>
            <returns>Die an die aktuelle Auflösung angepasste Icon-Größe.</returns>
        </member>
        <member name="M:SharpAccessory.VisualComponents.VisualComponent.GetOptimalImageLayout(System.Drawing.Size,System.Drawing.Size)">
            <summary>Berechnet das optimale Layout zum Rendern eines Bildes.</summary>
            <param name="imageSize">Gibt die Größe des Bildes an.</param>
            <param name="clientSize">Gibt die Größe des zur Verfügung stehenden Bereichs an.</param>
        </member>
        <member name="M:SharpAccessory.VisualComponents.VisualComponent.GetOptimalLayoutWidth(System.String,System.Drawing.Font)">
            <summary>Berechnet die optimale Layout-Breite für die angegebene Zeichenfolge.</summary>
            <param name="s">Die Zeichenfolge deren optimale Layout-Breite berechnet wird.</param>
            <param name="f">System.Drawing.Font, die das Format der Zeichenfolge definiert.</param>
            <returns>Gibt die Layout-Breite zurück die erforderlich ist um die angegebene Zeichenfolge mit 
            einem Seitenverhältnis von höchstens 4:3 darzustellen.</returns>
        </member>
        <member name="M:SharpAccessory.VisualComponents.VisualComponent.GetOptimalLayoutWidth(System.String,System.Drawing.Font,System.Int32)">
            <summary>Berechnet die optimale Layout-Breite für die angegebene Zeichenfolge.</summary>
            <param name="s">Die Zeichenfolge deren optimale Layout-Breite berechnet wird.</param>
            <param name="f">System.Drawing.Font, die das Format der Zeichenfolge definiert.</param>
            <param name="preferredWidth">Gibt die bevorzugte Layout-Breite an.</param>
            <returns>Gibt die Layout-Breite zurück die erforderlich ist um die angegebene Zeichenfolge mit 
            einem Seitenverhältnis von höchstens 4:3 darzustellen.</returns>
        </member>
        <member name="M:SharpAccessory.VisualComponents.VisualComponent.GetOptimalPopupLocation(System.Drawing.Size)">
            <summary>Berechnet die optimale Position für das Einblenden eines Popups.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.VisualComponent.ImageToJpeg(System.Drawing.Image,System.Int32)">
            <summary>Konvertiert ein System.Drawing.Image in das JPEG-Format.</summary>
            <param name="image">Gibt das System.Drawing.Image an das konvertiert werden soll.</param>
            <param name="quality">Gibt die Qualität bei der JPEG-Kompimierung an. Gültige Werte liegen 
            zwischen 0 und 100.</param>
        </member>
        <member name="M:SharpAccessory.VisualComponents.VisualComponent.ImageToJpeg(System.Drawing.Image,System.Int32,System.IO.Stream)">
            <summary>Speichert ein System.Drawing.Image im JPEG-Format in einen Stream.</summary>
            <param name="image">Gibt das System.Drawing.Image an das konvertiert werden soll.</param>
            <param name="quality">Gibt die Qualität bei der JPEG-Kompimierung an. Gültige Werte liegen 
            zwischen 0 und 100.</param>
            <param name="stream">Gibt den Stream an in den das Bild geschrieben wird.</param>
        </member>
        <member name="M:SharpAccessory.VisualComponents.VisualComponent.IsWithinVirtualScreen(System.Drawing.Rectangle)">
            <summary>Überprüft ob das angegebene System.Drawing.Rectangle vollständig innerhalb von 
            System.Windows.Forms.SystemInformation.VirtualScreen liegt.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.VisualComponent.Light(System.Drawing.Color,System.Single)">
            <summary>Hellt die angegebene Farbe auf.</summary>
            <param name="color">Die Farbe die aufgehellt wird.</param>
            <param name="factor">Der Faktor mit dem der Farbwert multipliziert wird.</param>
        </member>
        <member name="M:SharpAccessory.VisualComponents.VisualComponent.Light(System.UInt32,System.Single)">
            <summary>Hellt den angegebenen Farbwert auf.</summary>
            <param name="value">Der Farbwert der aufgehellt wird.</param>
            <param name="factor">Der Faktor mit dem der Farbwert multipliziert wird.</param>
        </member>
        <member name="M:SharpAccessory.VisualComponents.VisualComponent.MeasureString(System.String,System.Drawing.Font)">
            <summary>Bestimmt die Größe der Fläche die für das Zeichnen der angegebene Zeichenfolge mit der 
            angegebenen Schrift erforderlich ist.</summary>
            <param name="s">Die Zeichenfolge deren Größe gemessen wird.</param>
            <param name="f">System.Drawing.Font, die das Format der Zeichenfolge definiert.</param>
        </member>
        <member name="M:SharpAccessory.VisualComponents.VisualComponent.MeasureString(System.String,System.Drawing.Font,System.Int32)">
            <summary>Bestimmt die Größe der Fläche die für das Zeichnen der angegebene Zeichenfolge mit der 
            angegebenen Schrift erforderlich ist.</summary>
            <param name="s">Die Zeichenfolge deren Größe gemessen wird.</param>
            <param name="f">System.Drawing.Font, die das Format der Zeichenfolge definiert.</param>
            <param name="width">Die maximal zulässige Breite in Pixel.</param>"
        </member>
        <member name="M:SharpAccessory.VisualComponents.VisualComponent.MeasureStringExact(System.String,System.Drawing.Font)">
            <summary>Bestimmt die exakte Bounding-Box der gerenderten Zeichenfolge.</summary>
            <param name="s">Die Zeichenfolge deren Bounding-Box gemessen wird.</param>
            <param name="f">System.Drawing.Font, die das Format der Zeichenfolge definiert.</param>
        </member>
        <member name="M:SharpAccessory.VisualComponents.VisualComponent.MeasureStringExact(System.String,System.Drawing.Font,System.Int32)">
            <summary>Bestimmt die exakte Bounding-Box der gerenderten Zeichenfolge.</summary>
            <param name="s">Die Zeichenfolge deren Bounding-Box gemessen wird.</param>
            <param name="f">System.Drawing.Font, die das Format der Zeichenfolge definiert.</param>
            <param name="width">Die maximal zulässige Breite in Pixel.</param>"
        </member>
        <member name="P:SharpAccessory.VisualComponents.VisualComponent.ControlResolution">
            <summary>Ruft die Auflösung in dpi ab mit der visuelle Komponenten gerendert werden.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.VisualComponent.OptimalScalingFactor">
            <summary>Ruft den optimalen Faktor für die Skalierung von visuellen Komponenten ab.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.VScrollBarEx">
            <summary>Erweitert System.Windows.Forms.VScrollBar.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.VScrollBarEx.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.VScrollBarEx.GetStyle(System.Windows.Forms.ControlStyles)">
            <summary>Ruft den Wert für das angegebene Steuerelement-Formatbit ab.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.VScrollBarEx.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)">
            <summary>Legt den Wert für das angegebene Steuerelement-Formatbit fest.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.VScrollBarEx.SetScaleChildren(System.Boolean)">
            <summary>Legt fest, ob untergeordnete Steuerelemente durch ScaleControl skaliert werden.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.VScrollBarEx.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
            <summary>Skaliert Position, Größe, Textabstand und Rand des Steuerelements.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.VScrollBarEx.IgnoreScaleControl">
            <summary>Ruft ab oder legt fest ob Aufrufe von ScaleControl ignoriert werden.</summary>
        </member>
        <member name="P:SharpAccessory.VisualComponents.VScrollBarEx.ScaleChildren">
            <summary>Ruft ab, ob untergeordnete Steuerelemente durch ScaleControl skaliert werden.</summary>
        </member>
        <member name="T:SharpAccessory.VisualComponents.VSeparator">
            <summary>Steuerelement, das eine vertikale Trennlinie rendert.</summary>
        </member>
        <member name="M:SharpAccessory.VisualComponents.VSeparator.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="T:SharpAccessory.Web.Session`1">
            <summary>Enthält die Daten einer Sitzung.</summary>
        </member>
        <member name="M:SharpAccessory.Web.Session`1.#ctor(System.String)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="id">Gibt die ID der Sitzung an.</param>
        </member>
        <member name="P:SharpAccessory.Web.Session`1.Data">
            <summary>Ruft die Daten der Sitzung ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.Web.Session`1.Timestamp">
            <summary>Ruft Datum und Uhrzeit des letzten Zugriffs ab, oder legt diese fest.</summary>
        </member>
        <member name="P:SharpAccessory.Web.Session`1.Id">
            <summary>Ruft die ID der Sitzung ab.</summary>
        </member>
        <member name="T:SharpAccessory.Web.SessionEventArgs`1">
            <summary>Stellt Daten für ein Ereignis mit einer Sitzung bereit.</summary>
        </member>
        <member name="M:SharpAccessory.Web.SessionEventArgs`1.#ctor(SharpAccessory.Web.Session{`0})">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="session">Gibt die betreffende Sitzung an.</param>
        </member>
        <member name="P:SharpAccessory.Web.SessionEventArgs`1.Session">
            <summary>Ruft die betreffende Sitzung ab.</summary>
        </member>
        <member name="T:SharpAccessory.Web.SessionEventHandler`1">
            <summary>Methode die Ereignisse mit einer Sitzung verarbeitet.</summary>
        </member>
        <member name="T:SharpAccessory.Web.SessionManager`1">
            <summary>Verwaltet die Sitzungen einer Website.</summary>
        </member>
        <member name="M:SharpAccessory.Web.SessionManager`1.#ctor">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:SharpAccessory.Web.SessionManager`1.Finalize">
            <summary>Gibt diese Instanz frei.</summary>
        </member>
        <member name="M:SharpAccessory.Web.SessionManager`1.Dispose">
            <summary>Beendet die Verwaltung der Sitzungen. Noch vorhandene Sitzungen werden nicht automatisch 
            geschlossen.</summary>
        </member>
        <member name="M:SharpAccessory.Web.SessionManager`1.FindCreateSession(System.String)">
            <summary>Ruft die Sitzung mit der angegebenen ID ab, oder erstellt diese neu.</summary>
        </member>
        <member name="M:SharpAccessory.Web.SessionManager`1.RemoveSession(System.String)">
            <summary>Entfernt die Sitzung mit der angegebenen ID.</summary>
        </member>
        <member name="M:SharpAccessory.Web.SessionManager`1.RemoveAll">
            <summary>Entfernt alle Sitzungen.</summary>
        </member>
        <member name="P:SharpAccessory.Web.SessionManager`1.Item(System.String)">
            <summary>Ruft die Sitzung mit der angegebenen ID ab, oder erstellt diese neu.</summary>
        </member>
        <member name="P:SharpAccessory.Web.SessionManager`1.Capacity">
            <summary>Ruft die zulässige Anzahl von gespeicherten Sitzungen ab, oder legt diese fest. Durch 
            das Ändern dieser Eigenschaft werden keine Sitzungen geschlossen.</summary>
        </member>
        <member name="P:SharpAccessory.Web.SessionManager`1.Timeout">
            <summary>Ruft das Sitzungs-Timeout in Millisekunden ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:SharpAccessory.Web.SessionManager`1.IsDisposed">
            <summary>Ruft einen Wert ab, der angibt, ob diese Instanz bereits freigegeben wurde.</summary>
        </member>
        <member name="E:SharpAccessory.Web.SessionManager`1.SessionCreated">
            <summary>Wird ausgelöst wenn eine neue Sitzung angelegt wurde.</summary>
        </member>
        <member name="E:SharpAccessory.Web.SessionManager`1.SessionRemoved">
            <summary>Wird ausgelöst wenn eine Sitzung regulär entfernt wurde.</summary>
        </member>
        <member name="E:SharpAccessory.Web.SessionManager`1.SessionTimeout">
            <summary>Wird ausgelöst wenn eine Sitzung durch ein Timeout entfernt wurde.</summary>
        </member>
        <member name="T:SharpAccessory.Web.SiteResponse">
            <summary>Enthält die Ergebnisdaten einer Anfrage.</summary>
        </member>
        <member name="M:SharpAccessory.Web.SiteResponse.#ctor(System.Byte[],System.String)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="data">Gibt die Ergebnisdaten der Anfrage an.</param>
            <param name="contentType">Gibt den Inhaltstyp der Ergebnisdaten an.</param>
        </member>
        <member name="M:SharpAccessory.Web.SiteResponse.#ctor(System.String)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="redirectTo">Gibt die Url an zu der die Anfrage umgeleitet werden soll.</param>
        </member>
        <member name="P:SharpAccessory.Web.SiteResponse.Data">
            <summary>Ruft die Ergebnisdaten der Anfrage ab.</summary>
        </member>
        <member name="P:SharpAccessory.Web.SiteResponse.ContentType">
            <summary>Ruft den Inhaltstyp der Ergebnisdaten ab.</summary>
        </member>
        <member name="P:SharpAccessory.Web.SiteResponse.RedirectTo">
            <summary>Ruft die Url ab zu der die Anfrage umgeleitet werden soll.</summary>
        </member>
        <member name="T:SharpAccessory.WrongTypeException">
            <summary>Exception die ausgelöst wird wenn ein Argument vom falschen Typ übergeben wird.</summary>
        </member>
        <member name="M:SharpAccessory.WrongTypeException.#ctor(System.Type)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="expectedType">Gibt den Typ an der erwartet wurde.</param>
        </member>
        <member name="M:SharpAccessory.WrongTypeException.#ctor(System.String,System.Type)">
            <summary>Erstellt und initialisiert eine neue Instanz.</summary>
            <param name="message">Die Meldung, in der der Fehler beschrieben wird.</param>
            <param name="expectedType">Gibt den Typ an der erwartet wurde.</param>
        </member>
        <member name="P:SharpAccessory.WrongTypeException.ExpectedType">
            <summary>Ruft den Typ ab der erwartet wurde.</summary>
        </member>
    </members>
</doc>
